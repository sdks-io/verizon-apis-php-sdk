<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Controllers;

use Core\Authentication\Auth;
use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use VerizonLib\Exceptions\RulesEngineRestErrorResponseException;
use VerizonLib\Http\ApiResponse;
use VerizonLib\Models\CreateTriggerV2Request;
use VerizonLib\Models\TriggerV2Response;
use VerizonLib\Models\UpdateTriggerV2Request;
use VerizonLib\Server;

class MV2TriggersController extends BaseController
{
    /**
     * This creates an individual change plan for account group share.
     *
     * @param CreateTriggerV2Request $body
     *
     * @return ApiResponse Response from the API call
     */
    public function createTrigger(CreateTriggerV2Request $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/m2m/v2/triggers')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('400', ErrorType::init('Error Response', RulesEngineRestErrorResponseException::class))
            ->type(TriggerV2Response::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * This updates an individual change plan for account group share.
     *
     * @param string $vZM2mToken M2M-MC Session Token
     * @param UpdateTriggerV2Request $body
     * @param string|null $xRequestID Transaction Id
     *
     * @return ApiResponse Response from the API call
     */
    public function updateTrigger(
        string $vZM2mToken,
        UpdateTriggerV2Request $body,
        ?string $xRequestID = null
    ): ApiResponse {
        $_reqBuilder = $this->requestBuilder(RequestMethod::PUT, '/m2m/v2/triggers')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(
                HeaderParam::init('VZ-M2M-Token', $vZM2mToken),
                HeaderParam::init('Content-Type', 'application/json'),
                BodyParam::init($body),
                HeaderParam::init('X-Request-ID', $xRequestID)
            );

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('400', ErrorType::init('Error Response', RulesEngineRestErrorResponseException::class))
            ->type(TriggerV2Response::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
