<?php

declare(strict_types=1);

/*
 * VerizonThingSpaceQualityOfServiceAPIEndpointsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonThingSpaceQualityOfServiceAPIEndpointsLib\Controllers;

use Core\Authentication\Auth;
use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use VerizonThingSpaceQualityOfServiceAPIEndpointsLib\Exceptions\ApiException;
use VerizonThingSpaceQualityOfServiceAPIEndpointsLib\Exceptions\DeviceLocationResultException;
use VerizonThingSpaceQualityOfServiceAPIEndpointsLib\Models\AccountConsentCreate;
use VerizonThingSpaceQualityOfServiceAPIEndpointsLib\Models\ConsentTransactionID;

class ExclusionsController extends BaseController
{
    /**
     * Create a consent record to use location services as an asynchronous request.
     *
     * @param AccountConsentCreate|null $body Account details to create a consent record.
     *
     * @return ConsentTransactionID Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function devicesLocationGiveConsentAsync(?AccountConsentCreate $body = null): ConsentTransactionID
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/devicelocations/action/consents')
            ->auth(Auth::and('thingspace_oauth', 'vz-m2m-session_token'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('0', ErrorType::init('Unexpected error.', DeviceLocationResultException::class))
            ->type(ConsentTransactionID::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
