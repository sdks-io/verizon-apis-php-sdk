<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

/**
 * Device logging status information.
 */
class DeviceLoggingStatus implements \JsonSerializable
{
    /**
     * @var string
     */
    private $deviceId;

    /**
     * @var \DateTime
     */
    private $expiryDate;

    /**
     * @param string $deviceId
     * @param \DateTime $expiryDate
     */
    public function __construct(string $deviceId, \DateTime $expiryDate)
    {
        $this->deviceId = $deviceId;
        $this->expiryDate = $expiryDate;
    }

    /**
     * Returns Device Id.
     * Device IMEI.
     */
    public function getDeviceId(): string
    {
        return $this->deviceId;
    }

    /**
     * Sets Device Id.
     * Device IMEI.
     *
     * @required
     * @maps deviceId
     */
    public function setDeviceId(string $deviceId): void
    {
        $this->deviceId = $deviceId;
    }

    /**
     * Returns Expiry Date.
     * The date when device logging expires.
     */
    public function getExpiryDate(): \DateTime
    {
        return $this->expiryDate;
    }

    /**
     * Sets Expiry Date.
     * The date when device logging expires.
     *
     * @required
     * @maps expiryDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setExpiryDate(\DateTime $expiryDate): void
    {
        $this->expiryDate = $expiryDate;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['deviceId']   = $this->deviceId;
        $json['expiryDate'] = DateTimeHelper::toSimpleDate($this->expiryDate);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
