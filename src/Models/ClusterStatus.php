<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class ClusterStatus implements \JsonSerializable
{
    /**
     * @var ConditionItem[]|null
     */
    private $conditions;

    /**
     * @var string|null
     */
    private $token;

    /**
     * @var string|null
     */
    private $publishedBlueprint;

    /**
     * @var NodeStatusItem[]|null
     */
    private $nodes;

    /**
     * @var int|null
     */
    private $systemTaskCount;

    /**
     * @var int|null
     */
    private $customTaskCount;

    /**
     * @var int|null
     */
    private $auxiliaryTaskCount;

    /**
     * @var StatusProjectItem[]|null
     */
    private $projects;

    /**
     * @var ClusterStatusExtra|null
     */
    private $extra;

    /**
     * Returns Conditions.
     *
     * @return ConditionItem[]|null
     */
    public function getConditions(): ?array
    {
        return $this->conditions;
    }

    /**
     * Sets Conditions.
     *
     * @maps conditions
     *
     * @param ConditionItem[]|null $conditions
     */
    public function setConditions(?array $conditions): void
    {
        $this->conditions = $conditions;
    }

    /**
     * Returns Token.
     */
    public function getToken(): ?string
    {
        return $this->token;
    }

    /**
     * Sets Token.
     *
     * @maps token
     */
    public function setToken(?string $token): void
    {
        $this->token = $token;
    }

    /**
     * Returns Published Blueprint.
     */
    public function getPublishedBlueprint(): ?string
    {
        return $this->publishedBlueprint;
    }

    /**
     * Sets Published Blueprint.
     *
     * @maps publishedBlueprint
     */
    public function setPublishedBlueprint(?string $publishedBlueprint): void
    {
        $this->publishedBlueprint = $publishedBlueprint;
    }

    /**
     * Returns Nodes.
     *
     * @return NodeStatusItem[]|null
     */
    public function getNodes(): ?array
    {
        return $this->nodes;
    }

    /**
     * Sets Nodes.
     *
     * @maps nodes
     *
     * @param NodeStatusItem[]|null $nodes
     */
    public function setNodes(?array $nodes): void
    {
        $this->nodes = $nodes;
    }

    /**
     * Returns System Task Count.
     */
    public function getSystemTaskCount(): ?int
    {
        return $this->systemTaskCount;
    }

    /**
     * Sets System Task Count.
     *
     * @maps systemTaskCount
     */
    public function setSystemTaskCount(?int $systemTaskCount): void
    {
        $this->systemTaskCount = $systemTaskCount;
    }

    /**
     * Returns Custom Task Count.
     */
    public function getCustomTaskCount(): ?int
    {
        return $this->customTaskCount;
    }

    /**
     * Sets Custom Task Count.
     *
     * @maps customTaskCount
     */
    public function setCustomTaskCount(?int $customTaskCount): void
    {
        $this->customTaskCount = $customTaskCount;
    }

    /**
     * Returns Auxiliary Task Count.
     */
    public function getAuxiliaryTaskCount(): ?int
    {
        return $this->auxiliaryTaskCount;
    }

    /**
     * Sets Auxiliary Task Count.
     *
     * @maps auxiliaryTaskCount
     */
    public function setAuxiliaryTaskCount(?int $auxiliaryTaskCount): void
    {
        $this->auxiliaryTaskCount = $auxiliaryTaskCount;
    }

    /**
     * Returns Projects.
     *
     * @return StatusProjectItem[]|null
     */
    public function getProjects(): ?array
    {
        return $this->projects;
    }

    /**
     * Sets Projects.
     *
     * @maps projects
     *
     * @param StatusProjectItem[]|null $projects
     */
    public function setProjects(?array $projects): void
    {
        $this->projects = $projects;
    }

    /**
     * Returns Extra.
     */
    public function getExtra(): ?ClusterStatusExtra
    {
        return $this->extra;
    }

    /**
     * Sets Extra.
     *
     * @maps extra
     */
    public function setExtra(?ClusterStatusExtra $extra): void
    {
        $this->extra = $extra;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->conditions)) {
            $json['conditions']         = $this->conditions;
        }
        if (isset($this->token)) {
            $json['token']              = $this->token;
        }
        if (isset($this->publishedBlueprint)) {
            $json['publishedBlueprint'] = $this->publishedBlueprint;
        }
        if (isset($this->nodes)) {
            $json['nodes']              = $this->nodes;
        }
        if (isset($this->systemTaskCount)) {
            $json['systemTaskCount']    = $this->systemTaskCount;
        }
        if (isset($this->customTaskCount)) {
            $json['customTaskCount']    = $this->customTaskCount;
        }
        if (isset($this->auxiliaryTaskCount)) {
            $json['auxiliaryTaskCount'] = $this->auxiliaryTaskCount;
        }
        if (isset($this->projects)) {
            $json['projects']           = $this->projects;
        }
        if (isset($this->extra)) {
            $json['extra']              = $this->extra;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
