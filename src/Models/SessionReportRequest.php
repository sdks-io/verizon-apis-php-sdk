<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Request for obtaining a session report.
 */
class SessionReportRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $accountNumber;

    /**
     * @var string
     */
    private $imei;

    /**
     * @var string|null
     */
    private $startDate;

    /**
     * @var string|null
     */
    private $endDate;

    /**
     * @var array
     */
    private $durationLow = [];

    /**
     * @var array
     */
    private $durationHigh = [];

    /**
     * @param string $accountNumber
     * @param string $imei
     */
    public function __construct(string $accountNumber, string $imei)
    {
        $this->accountNumber = $accountNumber;
        $this->imei = $imei;
    }

    /**
     * Returns Account Number.
     * Account Number.
     */
    public function getAccountNumber(): string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Account Number.
     *
     * @required
     * @maps accountNumber
     */
    public function setAccountNumber(string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Imei.
     * Device ids.
     */
    public function getImei(): string
    {
        return $this->imei;
    }

    /**
     * Sets Imei.
     * Device ids.
     *
     * @required
     * @maps imei
     */
    public function setImei(string $imei): void
    {
        $this->imei = $imei;
    }

    /**
     * Returns Start Date.
     * Start date of session to include. If not specified  information will be shown from the earliest
     * available (180 days). Can be either date in ISO 8601 format or predefined constants.
     */
    public function getStartDate(): ?string
    {
        return $this->startDate;
    }

    /**
     * Sets Start Date.
     * Start date of session to include. If not specified  information will be shown from the earliest
     * available (180 days). Can be either date in ISO 8601 format or predefined constants.
     *
     * @maps startDate
     */
    public function setStartDate(?string $startDate): void
    {
        $this->startDate = $startDate;
    }

    /**
     * Returns End Date.
     * End date of session to include. If not specified  information will be shown to the latest available.
     * Can be either date in ISO 8601 format or predefined constants.
     */
    public function getEndDate(): ?string
    {
        return $this->endDate;
    }

    /**
     * Sets End Date.
     * End date of session to include. If not specified  information will be shown to the latest available.
     * Can be either date in ISO 8601 format or predefined constants.
     *
     * @maps endDate
     */
    public function setEndDate(?string $endDate): void
    {
        $this->endDate = $endDate;
    }

    /**
     * Returns Duration Low.
     * The Low value of session duration.
     */
    public function getDurationLow(): ?int
    {
        if (count($this->durationLow) == 0) {
            return null;
        }
        return $this->durationLow['value'];
    }

    /**
     * Sets Duration Low.
     * The Low value of session duration.
     *
     * @maps durationLow
     */
    public function setDurationLow(?int $durationLow): void
    {
        $this->durationLow['value'] = $durationLow;
    }

    /**
     * Unsets Duration Low.
     * The Low value of session duration.
     */
    public function unsetDurationLow(): void
    {
        $this->durationLow = [];
    }

    /**
     * Returns Duration High.
     * The High value of session duration.
     */
    public function getDurationHigh(): ?int
    {
        if (count($this->durationHigh) == 0) {
            return null;
        }
        return $this->durationHigh['value'];
    }

    /**
     * Sets Duration High.
     * The High value of session duration.
     *
     * @maps durationHigh
     */
    public function setDurationHigh(?int $durationHigh): void
    {
        $this->durationHigh['value'] = $durationHigh;
    }

    /**
     * Unsets Duration High.
     * The High value of session duration.
     */
    public function unsetDurationHigh(): void
    {
        $this->durationHigh = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['accountNumber']    = $this->accountNumber;
        $json['imei']             = $this->imei;
        if (isset($this->startDate)) {
            $json['startDate']    = $this->startDate;
        }
        if (isset($this->endDate)) {
            $json['endDate']      = $this->endDate;
        }
        if (!empty($this->durationLow)) {
            $json['durationLow']  = $this->durationLow['value'];
        }
        if (!empty($this->durationHigh)) {
            $json['durationHigh'] = $this->durationHigh['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
