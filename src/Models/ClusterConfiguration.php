<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class ClusterConfiguration implements \JsonSerializable
{
    /**
     * @var EdgeServiceLaunchParams|null
     */
    private $tags;

    /**
     * @var string|null
     */
    private $endPointAccessType = ClusterConfigEndpointAccessTypeEnum::PRIVATEACCESS;

    /**
     * @var bool|null
     */
    private $autoCreateNetworkInfra = true;

    /**
     * @var string|null
     */
    private $infraIPv4range = '192.168.0.0/16';

    /**
     * @var string|null
     */
    private $networkNatMode = NetworkNatModeEnum::SINGLE;

    /**
     * @var IdList[]|null
     */
    private $availabilityZones;

    /**
     * @var IdList[]|null
     */
    private $privateNetworkInfraIds;

    /**
     * @var IdList[]|null
     */
    private $publicNetworkInfraIds;

    /**
     * Returns Tags.
     */
    public function getTags(): ?EdgeServiceLaunchParams
    {
        return $this->tags;
    }

    /**
     * Sets Tags.
     *
     * @maps tags
     */
    public function setTags(?EdgeServiceLaunchParams $tags): void
    {
        $this->tags = $tags;
    }

    /**
     * Returns End Point Access Type.
     */
    public function getEndPointAccessType(): ?string
    {
        return $this->endPointAccessType;
    }

    /**
     * Sets End Point Access Type.
     *
     * @maps endPointAccessType
     * @factory \VerizonLib\Models\ClusterConfigEndpointAccessTypeEnum::checkValue
     */
    public function setEndPointAccessType(?string $endPointAccessType): void
    {
        $this->endPointAccessType = $endPointAccessType;
    }

    /**
     * Returns Auto Create Network Infra.
     */
    public function getAutoCreateNetworkInfra(): ?bool
    {
        return $this->autoCreateNetworkInfra;
    }

    /**
     * Sets Auto Create Network Infra.
     *
     * @maps autoCreateNetworkInfra
     */
    public function setAutoCreateNetworkInfra(?bool $autoCreateNetworkInfra): void
    {
        $this->autoCreateNetworkInfra = $autoCreateNetworkInfra;
    }

    /**
     * Returns Infra I Pv 4 Range.
     */
    public function getInfraIPv4range(): ?string
    {
        return $this->infraIPv4range;
    }

    /**
     * Sets Infra I Pv 4 Range.
     *
     * @maps infraIPv4range
     */
    public function setInfraIPv4range(?string $infraIPv4range): void
    {
        $this->infraIPv4range = $infraIPv4range;
    }

    /**
     * Returns Network Nat Mode.
     */
    public function getNetworkNatMode(): ?string
    {
        return $this->networkNatMode;
    }

    /**
     * Sets Network Nat Mode.
     *
     * @maps networkNatMode
     * @factory \VerizonLib\Models\NetworkNatModeEnum::checkValue
     */
    public function setNetworkNatMode(?string $networkNatMode): void
    {
        $this->networkNatMode = $networkNatMode;
    }

    /**
     * Returns Availability Zones.
     *
     * @return IdList[]|null
     */
    public function getAvailabilityZones(): ?array
    {
        return $this->availabilityZones;
    }

    /**
     * Sets Availability Zones.
     *
     * @maps availabilityZones
     *
     * @param IdList[]|null $availabilityZones
     */
    public function setAvailabilityZones(?array $availabilityZones): void
    {
        $this->availabilityZones = $availabilityZones;
    }

    /**
     * Returns Private Network Infra Ids.
     *
     * @return IdList[]|null
     */
    public function getPrivateNetworkInfraIds(): ?array
    {
        return $this->privateNetworkInfraIds;
    }

    /**
     * Sets Private Network Infra Ids.
     *
     * @maps privateNetworkInfraIds
     *
     * @param IdList[]|null $privateNetworkInfraIds
     */
    public function setPrivateNetworkInfraIds(?array $privateNetworkInfraIds): void
    {
        $this->privateNetworkInfraIds = $privateNetworkInfraIds;
    }

    /**
     * Returns Public Network Infra Ids.
     *
     * @return IdList[]|null
     */
    public function getPublicNetworkInfraIds(): ?array
    {
        return $this->publicNetworkInfraIds;
    }

    /**
     * Sets Public Network Infra Ids.
     *
     * @maps publicNetworkInfraIds
     *
     * @param IdList[]|null $publicNetworkInfraIds
     */
    public function setPublicNetworkInfraIds(?array $publicNetworkInfraIds): void
    {
        $this->publicNetworkInfraIds = $publicNetworkInfraIds;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->tags)) {
            $json['tags']                   = $this->tags;
        }
        if (isset($this->endPointAccessType)) {
            $json['endPointAccessType']     =
                ClusterConfigEndpointAccessTypeEnum::checkValue(
                    $this->endPointAccessType
                );
        }
        if (isset($this->autoCreateNetworkInfra)) {
            $json['autoCreateNetworkInfra'] = $this->autoCreateNetworkInfra;
        }
        if (isset($this->infraIPv4range)) {
            $json['infraIPv4range']         = $this->infraIPv4range;
        }
        if (isset($this->networkNatMode)) {
            $json['networkNatMode']         = NetworkNatModeEnum::checkValue($this->networkNatMode);
        }
        if (isset($this->availabilityZones)) {
            $json['availabilityZones']      = $this->availabilityZones;
        }
        if (isset($this->privateNetworkInfraIds)) {
            $json['privateNetworkInfraIds'] = $this->privateNetworkInfraIds;
        }
        if (isset($this->publicNetworkInfraIds)) {
            $json['publicNetworkInfraIds']  = $this->publicNetworkInfraIds;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
