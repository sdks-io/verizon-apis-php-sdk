<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

class ServiceLaunchRequestResult implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $serviceName;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $serviceVersion;

    /**
     * @var string|null
     */
    private $serviceId;

    /**
     * @var string|null
     */
    private $serviceProfileId;

    /**
     * @var string|null
     */
    private $cspProfileId;

    /**
     * @var ConfigFileItem[]|null
     */
    private $configFiles;

    /**
     * @var array
     */
    private $linkedServiceInstances = [];

    /**
     * @var \DateTime|null
     */
    private $createdAt;

    /**
     * @var \DateTime|null
     */
    private $updatedAt;

    /**
     * @var string|null
     */
    private $updatedBy;

    /**
     * Returns Id.
     * Unique service profile ID.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Unique service profile ID.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     * Service request name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Service request name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Service Name.
     * Service being deployed.
     */
    public function getServiceName(): ?string
    {
        return $this->serviceName;
    }

    /**
     * Sets Service Name.
     * Service being deployed.
     *
     * @maps serviceName
     */
    public function setServiceName(?string $serviceName): void
    {
        $this->serviceName = $serviceName;
    }

    /**
     * Returns State.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     *
     * @maps state
     * @factory \VerizonLib\Models\ServiceLaunchStateEnum::checkValue
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Service Version.
     * Service version being deployed.
     */
    public function getServiceVersion(): ?string
    {
        return $this->serviceVersion;
    }

    /**
     * Sets Service Version.
     * Service version being deployed.
     *
     * @maps serviceVersion
     */
    public function setServiceVersion(?string $serviceVersion): void
    {
        $this->serviceVersion = $serviceVersion;
    }

    /**
     * Returns Service Id.
     */
    public function getServiceId(): ?string
    {
        return $this->serviceId;
    }

    /**
     * Sets Service Id.
     *
     * @maps serviceId
     */
    public function setServiceId(?string $serviceId): void
    {
        $this->serviceId = $serviceId;
    }

    /**
     * Returns Service Profile Id.
     * The service profile ID that is created during the post-service API.
     */
    public function getServiceProfileId(): ?string
    {
        return $this->serviceProfileId;
    }

    /**
     * Sets Service Profile Id.
     * The service profile ID that is created during the post-service API.
     *
     * @maps serviceProfileId
     */
    public function setServiceProfileId(?string $serviceProfileId): void
    {
        $this->serviceProfileId = $serviceProfileId;
    }

    /**
     * Returns Csp Profile Id.
     */
    public function getCspProfileId(): ?string
    {
        return $this->cspProfileId;
    }

    /**
     * Sets Csp Profile Id.
     *
     * @maps cspProfileId
     */
    public function setCspProfileId(?string $cspProfileId): void
    {
        $this->cspProfileId = $cspProfileId;
    }

    /**
     * Returns Config Files.
     *
     * @return ConfigFileItem[]|null
     */
    public function getConfigFiles(): ?array
    {
        return $this->configFiles;
    }

    /**
     * Sets Config Files.
     *
     * @maps configFiles
     *
     * @param ConfigFileItem[]|null $configFiles
     */
    public function setConfigFiles(?array $configFiles): void
    {
        $this->configFiles = $configFiles;
    }

    /**
     * Returns Linked Service Instances.
     *
     * @return LinkedServiceInstance[]|null
     */
    public function getLinkedServiceInstances(): ?array
    {
        if (count($this->linkedServiceInstances) == 0) {
            return null;
        }
        return $this->linkedServiceInstances['value'];
    }

    /**
     * Sets Linked Service Instances.
     *
     * @maps linkedServiceInstances
     *
     * @param LinkedServiceInstance[]|null $linkedServiceInstances
     */
    public function setLinkedServiceInstances(?array $linkedServiceInstances): void
    {
        $this->linkedServiceInstances['value'] = $linkedServiceInstances;
    }

    /**
     * Unsets Linked Service Instances.
     */
    public function unsetLinkedServiceInstances(): void
    {
        $this->linkedServiceInstances = [];
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps createdAt
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(?\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): ?\DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @maps updatedAt
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(?\DateTime $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Updated By.
     */
    public function getUpdatedBy(): ?string
    {
        return $this->updatedBy;
    }

    /**
     * Sets Updated By.
     *
     * @maps updatedBy
     */
    public function setUpdatedBy(?string $updatedBy): void
    {
        $this->updatedBy = $updatedBy;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']                     = $this->id;
        }
        if (isset($this->name)) {
            $json['name']                   = $this->name;
        }
        if (isset($this->serviceName)) {
            $json['serviceName']            = $this->serviceName;
        }
        if (isset($this->state)) {
            $json['state']                  = ServiceLaunchStateEnum::checkValue($this->state);
        }
        if (isset($this->serviceVersion)) {
            $json['serviceVersion']         = $this->serviceVersion;
        }
        if (isset($this->serviceId)) {
            $json['serviceId']              = $this->serviceId;
        }
        if (isset($this->serviceProfileId)) {
            $json['serviceProfileId']       = $this->serviceProfileId;
        }
        if (isset($this->cspProfileId)) {
            $json['cspProfileId']           = $this->cspProfileId;
        }
        if (isset($this->configFiles)) {
            $json['configFiles']            = $this->configFiles;
        }
        if (!empty($this->linkedServiceInstances)) {
            $json['linkedServiceInstances'] = $this->linkedServiceInstances['value'];
        }
        if (isset($this->createdAt)) {
            $json['createdAt']              = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        }
        if (isset($this->updatedAt)) {
            $json['updatedAt']              = DateTimeHelper::toRfc3339DateTime($this->updatedAt);
        }
        if (isset($this->updatedBy)) {
            $json['updatedBy']              = $this->updatedBy;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
