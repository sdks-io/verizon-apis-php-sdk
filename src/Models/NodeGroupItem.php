<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class NodeGroupItem implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $createdAt;

    /**
     * @var string|null
     */
    private $modifiedAt;

    /**
     * @var string|null
     */
    private $organizationId;

    /**
     * @var string|null
     */
    private $partnerId;

    /**
     * @var string|null
     */
    private $instanceType;

    /**
     * @var string|null
     */
    private $edgeId;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $provisionId;

    /**
     * @var string|null
     */
    private $nodeType;

    /**
     * @var int|null
     */
    private $nodes;

    /**
     * @var int|null
     */
    private $nodesMin;

    /**
     * @var int|null
     */
    private $nodesMax;

    /**
     * @var int|null
     */
    private $nodeVolumeSize;

    /**
     * @var string|null
     */
    private $nodeVolumeType;

    /**
     * @var bool|null
     */
    private $nodePrivateNetworking;

    /**
     * @var string[]|null
     */
    private $nodeZones;

    /**
     * @var string|null
     */
    private $nodeAmiFamily;

    /**
     * @var NodeLabel|null
     */
    private $nodeLabels;

    /**
     * @var int|null
     */
    private $nodegroupType;

    /**
     * @var bool|null
     */
    private $enableAsgAccess;

    /**
     * @var bool|null
     */
    private $enableFullAccessToEcr;

    /**
     * @var string|null
     */
    private $versionInfoId;

    /**
     * @var string|null
     */
    private $upgradeInfoId;

    /**
     * @var NodeGroupItemTag|null
     */
    private $tags;

    /**
     * @var string|null
     */
    private $configFileContent;

    /**
     * @var Provision|null
     */
    private $provision;

    /**
     * @var VersionInfo|null
     */
    private $versionInfo;

    /**
     * @var UpgradeInfo|null
     */
    private $upgradeInfo;

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     */
    public function setCreatedAt(?string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Modified At.
     */
    public function getModifiedAt(): ?string
    {
        return $this->modifiedAt;
    }

    /**
     * Sets Modified At.
     *
     * @maps modified_at
     */
    public function setModifiedAt(?string $modifiedAt): void
    {
        $this->modifiedAt = $modifiedAt;
    }

    /**
     * Returns Organization Id.
     */
    public function getOrganizationId(): ?string
    {
        return $this->organizationId;
    }

    /**
     * Sets Organization Id.
     *
     * @maps organization_id
     */
    public function setOrganizationId(?string $organizationId): void
    {
        $this->organizationId = $organizationId;
    }

    /**
     * Returns Partner Id.
     */
    public function getPartnerId(): ?string
    {
        return $this->partnerId;
    }

    /**
     * Sets Partner Id.
     *
     * @maps partner_id
     */
    public function setPartnerId(?string $partnerId): void
    {
        $this->partnerId = $partnerId;
    }

    /**
     * Returns Instance Type.
     */
    public function getInstanceType(): ?string
    {
        return $this->instanceType;
    }

    /**
     * Sets Instance Type.
     *
     * @maps instance_type
     */
    public function setInstanceType(?string $instanceType): void
    {
        $this->instanceType = $instanceType;
    }

    /**
     * Returns Edge Id.
     */
    public function getEdgeId(): ?string
    {
        return $this->edgeId;
    }

    /**
     * Sets Edge Id.
     *
     * @maps edge_id
     */
    public function setEdgeId(?string $edgeId): void
    {
        $this->edgeId = $edgeId;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Provision Id.
     */
    public function getProvisionId(): ?string
    {
        return $this->provisionId;
    }

    /**
     * Sets Provision Id.
     *
     * @maps provision_id
     */
    public function setProvisionId(?string $provisionId): void
    {
        $this->provisionId = $provisionId;
    }

    /**
     * Returns Node Type.
     */
    public function getNodeType(): ?string
    {
        return $this->nodeType;
    }

    /**
     * Sets Node Type.
     *
     * @maps node_type
     */
    public function setNodeType(?string $nodeType): void
    {
        $this->nodeType = $nodeType;
    }

    /**
     * Returns Nodes.
     */
    public function getNodes(): ?int
    {
        return $this->nodes;
    }

    /**
     * Sets Nodes.
     *
     * @maps nodes
     */
    public function setNodes(?int $nodes): void
    {
        $this->nodes = $nodes;
    }

    /**
     * Returns Nodes Min.
     */
    public function getNodesMin(): ?int
    {
        return $this->nodesMin;
    }

    /**
     * Sets Nodes Min.
     *
     * @maps nodes_min
     */
    public function setNodesMin(?int $nodesMin): void
    {
        $this->nodesMin = $nodesMin;
    }

    /**
     * Returns Nodes Max.
     */
    public function getNodesMax(): ?int
    {
        return $this->nodesMax;
    }

    /**
     * Sets Nodes Max.
     *
     * @maps nodes_max
     */
    public function setNodesMax(?int $nodesMax): void
    {
        $this->nodesMax = $nodesMax;
    }

    /**
     * Returns Node Volume Size.
     */
    public function getNodeVolumeSize(): ?int
    {
        return $this->nodeVolumeSize;
    }

    /**
     * Sets Node Volume Size.
     *
     * @maps node_volume_size
     */
    public function setNodeVolumeSize(?int $nodeVolumeSize): void
    {
        $this->nodeVolumeSize = $nodeVolumeSize;
    }

    /**
     * Returns Node Volume Type.
     */
    public function getNodeVolumeType(): ?string
    {
        return $this->nodeVolumeType;
    }

    /**
     * Sets Node Volume Type.
     *
     * @maps node_volume_type
     */
    public function setNodeVolumeType(?string $nodeVolumeType): void
    {
        $this->nodeVolumeType = $nodeVolumeType;
    }

    /**
     * Returns Node Private Networking.
     */
    public function getNodePrivateNetworking(): ?bool
    {
        return $this->nodePrivateNetworking;
    }

    /**
     * Sets Node Private Networking.
     *
     * @maps node_private_networking
     */
    public function setNodePrivateNetworking(?bool $nodePrivateNetworking): void
    {
        $this->nodePrivateNetworking = $nodePrivateNetworking;
    }

    /**
     * Returns Node Zones.
     *
     * @return string[]|null
     */
    public function getNodeZones(): ?array
    {
        return $this->nodeZones;
    }

    /**
     * Sets Node Zones.
     *
     * @maps node_zones
     *
     * @param string[]|null $nodeZones
     */
    public function setNodeZones(?array $nodeZones): void
    {
        $this->nodeZones = $nodeZones;
    }

    /**
     * Returns Node Ami Family.
     */
    public function getNodeAmiFamily(): ?string
    {
        return $this->nodeAmiFamily;
    }

    /**
     * Sets Node Ami Family.
     *
     * @maps node_ami_family
     */
    public function setNodeAmiFamily(?string $nodeAmiFamily): void
    {
        $this->nodeAmiFamily = $nodeAmiFamily;
    }

    /**
     * Returns Node Labels.
     */
    public function getNodeLabels(): ?NodeLabel
    {
        return $this->nodeLabels;
    }

    /**
     * Sets Node Labels.
     *
     * @maps node_labels
     */
    public function setNodeLabels(?NodeLabel $nodeLabels): void
    {
        $this->nodeLabels = $nodeLabels;
    }

    /**
     * Returns Nodegroup Type.
     */
    public function getNodegroupType(): ?int
    {
        return $this->nodegroupType;
    }

    /**
     * Sets Nodegroup Type.
     *
     * @maps nodegroup_type
     */
    public function setNodegroupType(?int $nodegroupType): void
    {
        $this->nodegroupType = $nodegroupType;
    }

    /**
     * Returns Enable Asg Access.
     */
    public function getEnableAsgAccess(): ?bool
    {
        return $this->enableAsgAccess;
    }

    /**
     * Sets Enable Asg Access.
     *
     * @maps enable_asg_access
     */
    public function setEnableAsgAccess(?bool $enableAsgAccess): void
    {
        $this->enableAsgAccess = $enableAsgAccess;
    }

    /**
     * Returns Enable Full Access to Ecr.
     */
    public function getEnableFullAccessToEcr(): ?bool
    {
        return $this->enableFullAccessToEcr;
    }

    /**
     * Sets Enable Full Access to Ecr.
     *
     * @maps enable_full_access_to_ecr
     */
    public function setEnableFullAccessToEcr(?bool $enableFullAccessToEcr): void
    {
        $this->enableFullAccessToEcr = $enableFullAccessToEcr;
    }

    /**
     * Returns Version Info Id.
     */
    public function getVersionInfoId(): ?string
    {
        return $this->versionInfoId;
    }

    /**
     * Sets Version Info Id.
     *
     * @maps version_info_id
     */
    public function setVersionInfoId(?string $versionInfoId): void
    {
        $this->versionInfoId = $versionInfoId;
    }

    /**
     * Returns Upgrade Info Id.
     */
    public function getUpgradeInfoId(): ?string
    {
        return $this->upgradeInfoId;
    }

    /**
     * Sets Upgrade Info Id.
     *
     * @maps upgrade_info_id
     */
    public function setUpgradeInfoId(?string $upgradeInfoId): void
    {
        $this->upgradeInfoId = $upgradeInfoId;
    }

    /**
     * Returns Tags.
     */
    public function getTags(): ?NodeGroupItemTag
    {
        return $this->tags;
    }

    /**
     * Sets Tags.
     *
     * @maps tags
     */
    public function setTags(?NodeGroupItemTag $tags): void
    {
        $this->tags = $tags;
    }

    /**
     * Returns Config File Content.
     */
    public function getConfigFileContent(): ?string
    {
        return $this->configFileContent;
    }

    /**
     * Sets Config File Content.
     *
     * @maps config_file_content
     */
    public function setConfigFileContent(?string $configFileContent): void
    {
        $this->configFileContent = $configFileContent;
    }

    /**
     * Returns Provision.
     */
    public function getProvision(): ?Provision
    {
        return $this->provision;
    }

    /**
     * Sets Provision.
     *
     * @maps provision
     */
    public function setProvision(?Provision $provision): void
    {
        $this->provision = $provision;
    }

    /**
     * Returns Version Info.
     */
    public function getVersionInfo(): ?VersionInfo
    {
        return $this->versionInfo;
    }

    /**
     * Sets Version Info.
     *
     * @maps version_info
     */
    public function setVersionInfo(?VersionInfo $versionInfo): void
    {
        $this->versionInfo = $versionInfo;
    }

    /**
     * Returns Upgrade Info.
     */
    public function getUpgradeInfo(): ?UpgradeInfo
    {
        return $this->upgradeInfo;
    }

    /**
     * Sets Upgrade Info.
     *
     * @maps upgrade_info
     */
    public function setUpgradeInfo(?UpgradeInfo $upgradeInfo): void
    {
        $this->upgradeInfo = $upgradeInfo;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->name)) {
            $json['name']                      = $this->name;
        }
        if (isset($this->createdAt)) {
            $json['created_at']                = $this->createdAt;
        }
        if (isset($this->modifiedAt)) {
            $json['modified_at']               = $this->modifiedAt;
        }
        if (isset($this->organizationId)) {
            $json['organization_id']           = $this->organizationId;
        }
        if (isset($this->partnerId)) {
            $json['partner_id']                = $this->partnerId;
        }
        if (isset($this->instanceType)) {
            $json['instance_type']             = $this->instanceType;
        }
        if (isset($this->edgeId)) {
            $json['edge_id']                   = $this->edgeId;
        }
        if (isset($this->id)) {
            $json['id']                        = $this->id;
        }
        if (isset($this->provisionId)) {
            $json['provision_id']              = $this->provisionId;
        }
        if (isset($this->nodeType)) {
            $json['node_type']                 = $this->nodeType;
        }
        if (isset($this->nodes)) {
            $json['nodes']                     = $this->nodes;
        }
        if (isset($this->nodesMin)) {
            $json['nodes_min']                 = $this->nodesMin;
        }
        if (isset($this->nodesMax)) {
            $json['nodes_max']                 = $this->nodesMax;
        }
        if (isset($this->nodeVolumeSize)) {
            $json['node_volume_size']          = $this->nodeVolumeSize;
        }
        if (isset($this->nodeVolumeType)) {
            $json['node_volume_type']          = $this->nodeVolumeType;
        }
        if (isset($this->nodePrivateNetworking)) {
            $json['node_private_networking']   = $this->nodePrivateNetworking;
        }
        if (isset($this->nodeZones)) {
            $json['node_zones']                = $this->nodeZones;
        }
        if (isset($this->nodeAmiFamily)) {
            $json['node_ami_family']           = $this->nodeAmiFamily;
        }
        if (isset($this->nodeLabels)) {
            $json['node_labels']               = $this->nodeLabels;
        }
        if (isset($this->nodegroupType)) {
            $json['nodegroup_type']            = $this->nodegroupType;
        }
        if (isset($this->enableAsgAccess)) {
            $json['enable_asg_access']         = $this->enableAsgAccess;
        }
        if (isset($this->enableFullAccessToEcr)) {
            $json['enable_full_access_to_ecr'] = $this->enableFullAccessToEcr;
        }
        if (isset($this->versionInfoId)) {
            $json['version_info_id']           = $this->versionInfoId;
        }
        if (isset($this->upgradeInfoId)) {
            $json['upgrade_info_id']           = $this->upgradeInfoId;
        }
        if (isset($this->tags)) {
            $json['tags']                      = $this->tags;
        }
        if (isset($this->configFileContent)) {
            $json['config_file_content']       = $this->configFileContent;
        }
        if (isset($this->provision)) {
            $json['provision']                 = $this->provision;
        }
        if (isset($this->versionInfo)) {
            $json['version_info']              = $this->versionInfo;
        }
        if (isset($this->upgradeInfo)) {
            $json['upgrade_info']              = $this->upgradeInfo;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
