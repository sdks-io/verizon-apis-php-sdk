<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

class ServiceInstance implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string|null
     */
    private $serviceName;

    /**
     * @var \DateTime|null
     */
    private $createdAt;

    /**
     * @var \DateTime|null
     */
    private $modifiedAt;

    /**
     * @var EdgeServiceLaunchParams|null
     */
    private $labels;

    /**
     * @var string|null
     */
    private $projectName = 'default';

    /**
     * @var Revision
     */
    private $revision;

    /**
     * @var string|null
     */
    private $nameSpace = 'default';

    /**
     * @var string|null
     */
    private $deploymentType = DeploymentTypeEnum::PRIVATEMEC;

    /**
     * @var RegionItem[]|null
     */
    private $solutionRegulations;

    /**
     * @var EdsDiscoveryIntent|null
     */
    private $edsDiscoveryIntent;

    /**
     * @var string|null
     */
    private $workLoadType = WorkloadTypeEnum::CONTAINER;

    /**
     * @var ClusterMetadata|null
     */
    private $clusterInfo;

    /**
     * @var VirtualMachine|null
     */
    private $virtualMachineInfo;

    /**
     * @var EdgeServiceWorkload[]|null
     */
    private $workload;

    /**
     * @var ClusterInfra|null
     */
    private $rafayClusterInfra;

    /**
     * @var string|null
     */
    private $customerId;

    /**
     * @var string|null
     */
    private $userId;

    /**
     * @param string $name
     * @param Revision $revision
     */
    public function __construct(string $name, Revision $revision)
    {
        $this->name = $name;
        $this->revision = $revision;
    }

    /**
     * Returns Id.
     * Instance UUID generated by OF.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Instance UUID generated by OF.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     * User display name for Service Instance Id.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * User display name for Service Instance Id.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Service Name.
     * Name of the Service.
     */
    public function getServiceName(): ?string
    {
        return $this->serviceName;
    }

    /**
     * Sets Service Name.
     * Name of the Service.
     *
     * @maps serviceName
     */
    public function setServiceName(?string $serviceName): void
    {
        $this->serviceName = $serviceName;
    }

    /**
     * Returns Created At.
     * Auto derived time of creation.
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     * Auto derived time of creation.
     *
     * @maps createdAt
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(?\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Modified At.
     * Last modified time.
     */
    public function getModifiedAt(): ?\DateTime
    {
        return $this->modifiedAt;
    }

    /**
     * Sets Modified At.
     * Last modified time.
     *
     * @maps modifiedAt
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setModifiedAt(?\DateTime $modifiedAt): void
    {
        $this->modifiedAt = $modifiedAt;
    }

    /**
     * Returns Labels.
     */
    public function getLabels(): ?EdgeServiceLaunchParams
    {
        return $this->labels;
    }

    /**
     * Sets Labels.
     *
     * @maps labels
     */
    public function setLabels(?EdgeServiceLaunchParams $labels): void
    {
        $this->labels = $labels;
    }

    /**
     * Returns Project Name.
     * Name of the service Instance Project(Project Name).
     */
    public function getProjectName(): ?string
    {
        return $this->projectName;
    }

    /**
     * Sets Project Name.
     * Name of the service Instance Project(Project Name).
     *
     * @maps projectName
     */
    public function setProjectName(?string $projectName): void
    {
        $this->projectName = $projectName;
    }

    /**
     * Returns Revision.
     */
    public function getRevision(): Revision
    {
        return $this->revision;
    }

    /**
     * Sets Revision.
     *
     * @required
     * @maps revision
     */
    public function setRevision(Revision $revision): void
    {
        $this->revision = $revision;
    }

    /**
     * Returns Name Space.
     * Name space inside cluster.
     */
    public function getNameSpace(): ?string
    {
        return $this->nameSpace;
    }

    /**
     * Sets Name Space.
     * Name space inside cluster.
     *
     * @maps nameSpace
     */
    public function setNameSpace(?string $nameSpace): void
    {
        $this->nameSpace = $nameSpace;
    }

    /**
     * Returns Deployment Type.
     * Default MEC platform for deploying service.
     */
    public function getDeploymentType(): ?string
    {
        return $this->deploymentType;
    }

    /**
     * Sets Deployment Type.
     * Default MEC platform for deploying service.
     *
     * @maps deploymentType
     * @factory \VerizonLib\Models\DeploymentTypeEnum::checkValue
     */
    public function setDeploymentType(?string $deploymentType): void
    {
        $this->deploymentType = $deploymentType;
    }

    /**
     * Returns Solution Regulations.
     *
     * @return RegionItem[]|null
     */
    public function getSolutionRegulations(): ?array
    {
        return $this->solutionRegulations;
    }

    /**
     * Sets Solution Regulations.
     *
     * @maps solutionRegulations
     *
     * @param RegionItem[]|null $solutionRegulations
     */
    public function setSolutionRegulations(?array $solutionRegulations): void
    {
        $this->solutionRegulations = $solutionRegulations;
    }

    /**
     * Returns Eds Discovery Intent.
     */
    public function getEdsDiscoveryIntent(): ?EdsDiscoveryIntent
    {
        return $this->edsDiscoveryIntent;
    }

    /**
     * Sets Eds Discovery Intent.
     *
     * @maps edsDiscoveryIntent
     */
    public function setEdsDiscoveryIntent(?EdsDiscoveryIntent $edsDiscoveryIntent): void
    {
        $this->edsDiscoveryIntent = $edsDiscoveryIntent;
    }

    /**
     * Returns Work Load Type.
     * Default service type.
     */
    public function getWorkLoadType(): ?string
    {
        return $this->workLoadType;
    }

    /**
     * Sets Work Load Type.
     * Default service type.
     *
     * @maps workLoadType
     * @factory \VerizonLib\Models\WorkloadTypeEnum::checkValue
     */
    public function setWorkLoadType(?string $workLoadType): void
    {
        $this->workLoadType = $workLoadType;
    }

    /**
     * Returns Cluster Info.
     */
    public function getClusterInfo(): ?ClusterMetadata
    {
        return $this->clusterInfo;
    }

    /**
     * Sets Cluster Info.
     *
     * @maps clusterInfo
     */
    public function setClusterInfo(?ClusterMetadata $clusterInfo): void
    {
        $this->clusterInfo = $clusterInfo;
    }

    /**
     * Returns Virtual Machine Info.
     */
    public function getVirtualMachineInfo(): ?VirtualMachine
    {
        return $this->virtualMachineInfo;
    }

    /**
     * Sets Virtual Machine Info.
     *
     * @maps virtualMachineInfo
     */
    public function setVirtualMachineInfo(?VirtualMachine $virtualMachineInfo): void
    {
        $this->virtualMachineInfo = $virtualMachineInfo;
    }

    /**
     * Returns Workload.
     *
     * @return EdgeServiceWorkload[]|null
     */
    public function getWorkload(): ?array
    {
        return $this->workload;
    }

    /**
     * Sets Workload.
     *
     * @maps workload
     *
     * @param EdgeServiceWorkload[]|null $workload
     */
    public function setWorkload(?array $workload): void
    {
        $this->workload = $workload;
    }

    /**
     * Returns Rafay Cluster Infra.
     */
    public function getRafayClusterInfra(): ?ClusterInfra
    {
        return $this->rafayClusterInfra;
    }

    /**
     * Sets Rafay Cluster Infra.
     *
     * @maps rafayClusterInfra
     */
    public function setRafayClusterInfra(?ClusterInfra $rafayClusterInfra): void
    {
        $this->rafayClusterInfra = $rafayClusterInfra;
    }

    /**
     * Returns Customer Id.
     * Id of particular customer.
     */
    public function getCustomerId(): ?string
    {
        return $this->customerId;
    }

    /**
     * Sets Customer Id.
     * Id of particular customer.
     *
     * @maps customerId
     */
    public function setCustomerId(?string $customerId): void
    {
        $this->customerId = $customerId;
    }

    /**
     * Returns User Id.
     * Id of a user.
     */
    public function getUserId(): ?string
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     * Id of a user.
     *
     * @maps userId
     */
    public function setUserId(?string $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']                  = $this->id;
        }
        $json['name']                    = $this->name;
        if (isset($this->serviceName)) {
            $json['serviceName']         = $this->serviceName;
        }
        if (isset($this->createdAt)) {
            $json['createdAt']           = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        }
        if (isset($this->modifiedAt)) {
            $json['modifiedAt']          = DateTimeHelper::toRfc3339DateTime($this->modifiedAt);
        }
        if (isset($this->labels)) {
            $json['labels']              = $this->labels;
        }
        if (isset($this->projectName)) {
            $json['projectName']         = $this->projectName;
        }
        $json['revision']                = $this->revision;
        if (isset($this->nameSpace)) {
            $json['nameSpace']           = $this->nameSpace;
        }
        if (isset($this->deploymentType)) {
            $json['deploymentType']      = DeploymentTypeEnum::checkValue($this->deploymentType);
        }
        if (isset($this->solutionRegulations)) {
            $json['solutionRegulations'] = $this->solutionRegulations;
        }
        if (isset($this->edsDiscoveryIntent)) {
            $json['edsDiscoveryIntent']  = $this->edsDiscoveryIntent;
        }
        if (isset($this->workLoadType)) {
            $json['workLoadType']        = WorkloadTypeEnum::checkValue($this->workLoadType);
        }
        if (isset($this->clusterInfo)) {
            $json['clusterInfo']         = $this->clusterInfo;
        }
        if (isset($this->virtualMachineInfo)) {
            $json['virtualMachineInfo']  = $this->virtualMachineInfo;
        }
        if (isset($this->workload)) {
            $json['workload']            = $this->workload;
        }
        if (isset($this->rafayClusterInfra)) {
            $json['rafayClusterInfra']   = $this->rafayClusterInfra;
        }
        if (isset($this->customerId)) {
            $json['customerId']          = $this->customerId;
        }
        if (isset($this->userId)) {
            $json['userId']              = $this->userId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
