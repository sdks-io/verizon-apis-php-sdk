<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Request to register a callback.
 */
class RegisterCallbackRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $url;

    /**
     * @var string|null
     */
    private $username;

    /**
     * @var string|null
     */
    private $password;

    /**
     * Returns Name.
     * The name of the callback service that you want to subscribe to.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * The name of the callback service that you want to subscribe to.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Url.
     * The address on your server where you have enabled a listening service for callback messages.
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     * The address on your server where you have enabled a listening service for callback messages.
     *
     * @maps url
     */
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }

    /**
     * Returns Username.
     * The user name that the M2M Platform should return in the callback messages.
     */
    public function getUsername(): ?string
    {
        return $this->username;
    }

    /**
     * Sets Username.
     * The user name that the M2M Platform should return in the callback messages.
     *
     * @maps username
     */
    public function setUsername(?string $username): void
    {
        $this->username = $username;
    }

    /**
     * Returns Password.
     * The password that the M2M Platform should return in the callback messages.
     */
    public function getPassword(): ?string
    {
        return $this->password;
    }

    /**
     * Sets Password.
     * The password that the M2M Platform should return in the callback messages.
     *
     * @maps password
     */
    public function setPassword(?string $password): void
    {
        $this->password = $password;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->name)) {
            $json['name']     = $this->name;
        }
        if (isset($this->url)) {
            $json['url']      = $this->url;
        }
        if (isset($this->username)) {
            $json['username'] = $this->username;
        }
        if (isset($this->password)) {
            $json['password'] = $this->password;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
