<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Address details.
 */
class AddressItem implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $addressLine1;

    /**
     * @var string|null
     */
    private $addressLine2;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var string|null
     */
    private $zip;

    /**
     * @var string|null
     */
    private $zip4;

    /**
     * Returns Address Line 1.
     * Street Address.
     */
    public function getAddressLine1(): ?string
    {
        return $this->addressLine1;
    }

    /**
     * Sets Address Line 1.
     * Street Address.
     *
     * @maps addressLine1
     */
    public function setAddressLine1(?string $addressLine1): void
    {
        $this->addressLine1 = $addressLine1;
    }

    /**
     * Returns Address Line 2.
     * Optional address information.
     */
    public function getAddressLine2(): ?string
    {
        return $this->addressLine2;
    }

    /**
     * Sets Address Line 2.
     * Optional address information.
     *
     * @maps addressLine2
     */
    public function setAddressLine2(?string $addressLine2): void
    {
        $this->addressLine2 = $addressLine2;
    }

    /**
     * Returns City.
     * Name of the city.
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * Name of the city.
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns State.
     * State code.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     * State code.
     *
     * @maps state
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Country.
     * Country.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * Country.
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Zip.
     * Five digit zipcode.
     */
    public function getZip(): ?string
    {
        return $this->zip;
    }

    /**
     * Sets Zip.
     * Five digit zipcode.
     *
     * @maps zip
     */
    public function setZip(?string $zip): void
    {
        $this->zip = $zip;
    }

    /**
     * Returns Zip 4.
     * Four digit zip code.
     */
    public function getZip4(): ?string
    {
        return $this->zip4;
    }

    /**
     * Sets Zip 4.
     * Four digit zip code.
     *
     * @maps zip4
     */
    public function setZip4(?string $zip4): void
    {
        $this->zip4 = $zip4;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->addressLine1)) {
            $json['addressLine1'] = $this->addressLine1;
        }
        if (isset($this->addressLine2)) {
            $json['addressLine2'] = $this->addressLine2;
        }
        if (isset($this->city)) {
            $json['city']         = $this->city;
        }
        if (isset($this->state)) {
            $json['state']        = $this->state;
        }
        if (isset($this->country)) {
            $json['country']      = $this->country;
        }
        if (isset($this->zip)) {
            $json['zip']          = $this->zip;
        }
        if (isset($this->zip4)) {
            $json['zip4']         = $this->zip4;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
