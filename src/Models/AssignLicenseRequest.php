<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Request to assign license.
 */
class AssignLicenseRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var LicenseDeviceList[]|null
     */
    private $devices;

    /**
     * @var string|null
     */
    private $skuNumber;

    /**
     * Returns Account Name.
     * The name of a billing account.This parameter is required only if the UWS account used for the
     * current API session has access to multiple accounts. An account name is usually numeric, and must
     * include any leading zeros.
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     * The name of a billing account.This parameter is required only if the UWS account used for the
     * current API session has access to multiple accounts. An account name is usually numeric, and must
     * include any leading zeros.
     *
     * @maps accountName
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Devices.
     * A list of 4G devices.
     *
     * @return LicenseDeviceList[]|null
     */
    public function getDevices(): ?array
    {
        return $this->devices;
    }

    /**
     * Sets Devices.
     * A list of 4G devices.
     *
     * @maps devices
     *
     * @param LicenseDeviceList[]|null $devices
     */
    public function setDevices(?array $devices): void
    {
        $this->devices = $devices;
    }

    /**
     * Returns Sku Number.
     * The Stock Keeping Unit (SKU). Valid skuNumbers for license types: “SIMSec-IoT-Lt”. (Lifetime) Once a
     * license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-
     * KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at
     * any time. This SKU is bundled with other ThingSpace Services.“SIMSec-IoT”. (Flex) The SIM-Secure
     * Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.
     */
    public function getSkuNumber(): ?string
    {
        return $this->skuNumber;
    }

    /**
     * Sets Sku Number.
     * The Stock Keeping Unit (SKU). Valid skuNumbers for license types: “SIMSec-IoT-Lt”. (Lifetime) Once a
     * license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-
     * KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at
     * any time. This SKU is bundled with other ThingSpace Services.“SIMSec-IoT”. (Flex) The SIM-Secure
     * Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.
     *
     * @maps skuNumber
     */
    public function setSkuNumber(?string $skuNumber): void
    {
        $this->skuNumber = $skuNumber;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['accountName'] = $this->accountName;
        }
        if (isset($this->devices)) {
            $json['devices']     = $this->devices;
        }
        if (isset($this->skuNumber)) {
            $json['skuNumber']   = $this->skuNumber;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
