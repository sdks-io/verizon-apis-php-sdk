<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

/**
 * Users would provide CSP compatibility during service creation, which are nothing but declaring
 * service compatibility with different cloud service providers like AWS or Azure. This API would help
 * users to fetch all service claims using which user can initiate sandbox testing of the service.
 */
class Claim implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $claimStatus;

    /**
     * @var string|null
     */
    private $sandBoxState;

    /**
     * @var string|null
     */
    private $sandBoxStatus;

    /**
     * @var string|null
     */
    private $environment;

    /**
     * @var string|null
     */
    private $claimType;

    /**
     * @var \DateTime|null
     */
    private $startTimeStamp;

    /**
     * @var string|null
     */
    private $serviceInstanceId;

    /**
     * @var string|null
     */
    private $cspProfileId;

    /**
     * @var string|null
     */
    private $serviceId;

    /**
     * @var \DateTime|null
     */
    private $endTimeStamp;

    /**
     * @var \DateTime|null
     */
    private $createdDate;

    /**
     * @var \DateTime|null
     */
    private $lastModifiedDate;

    /**
     * @var string|null
     */
    private $createdBy;

    /**
     * @var string|null
     */
    private $lastModifiedBy;

    /**
     * Returns Id.
     * Auto-generated Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Auto-generated Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     * Name of the claim.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Name of the claim.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Claim Status.
     * Current status of the claim can have only two values eg: VERIFIED/UNVERIFIED.
     */
    public function getClaimStatus(): ?string
    {
        return $this->claimStatus;
    }

    /**
     * Sets Claim Status.
     * Current status of the claim can have only two values eg: VERIFIED/UNVERIFIED.
     *
     * @maps claimStatus
     * @factory \VerizonLib\Models\ClaimStatusEnum::checkValue
     */
    public function setClaimStatus(?string $claimStatus): void
    {
        $this->claimStatus = $claimStatus;
    }

    /**
     * Returns Sand Box State.
     * State of sandbox can have value like - STARTED, NOT_STARTED, STOPPED, PAUSED, COMPLETED, DELETED,
     * STOP_IN_PROGRESS, PAUSE_IN_PROGRESS, TEST_IN_PROGRESS, MARK_FOR_DELETEION.
     */
    public function getSandBoxState(): ?string
    {
        return $this->sandBoxState;
    }

    /**
     * Sets Sand Box State.
     * State of sandbox can have value like - STARTED, NOT_STARTED, STOPPED, PAUSED, COMPLETED, DELETED,
     * STOP_IN_PROGRESS, PAUSE_IN_PROGRESS, TEST_IN_PROGRESS, MARK_FOR_DELETEION.
     *
     * @maps sandBoxState
     * @factory \VerizonLib\Models\SandBoxStateEnum::checkValue
     */
    public function setSandBoxState(?string $sandBoxState): void
    {
        $this->sandBoxState = $sandBoxState;
    }

    /**
     * Returns Sand Box Status.
     * Status of sandbox can have value like - NA, INPROGRESS, SUCCESS, FAILED.
     */
    public function getSandBoxStatus(): ?string
    {
        return $this->sandBoxStatus;
    }

    /**
     * Sets Sand Box Status.
     * Status of sandbox can have value like - NA, INPROGRESS, SUCCESS, FAILED.
     *
     * @maps sandBoxStatus
     * @factory \VerizonLib\Models\SandBoxStatusEnum::checkValue
     */
    public function setSandBoxStatus(?string $sandBoxStatus): void
    {
        $this->sandBoxStatus = $sandBoxStatus;
    }

    /**
     * Returns Environment.
     * Claim environment in which it is deployed eg: AWS Public Cloud.
     */
    public function getEnvironment(): ?string
    {
        return $this->environment;
    }

    /**
     * Sets Environment.
     * Claim environment in which it is deployed eg: AWS Public Cloud.
     *
     * @maps environment
     */
    public function setEnvironment(?string $environment): void
    {
        $this->environment = $environment;
    }

    /**
     * Returns Claim Type.
     * Claim type can have values like - PUBLIC_MEC, PRIVATE_MEC.
     */
    public function getClaimType(): ?string
    {
        return $this->claimType;
    }

    /**
     * Sets Claim Type.
     * Claim type can have values like - PUBLIC_MEC, PRIVATE_MEC.
     *
     * @maps claimType
     * @factory \VerizonLib\Models\ClaimTypeEnum::checkValue
     */
    public function setClaimType(?string $claimType): void
    {
        $this->claimType = $claimType;
    }

    /**
     * Returns Start Time Stamp.
     * Start time when the claim got introduced.
     */
    public function getStartTimeStamp(): ?\DateTime
    {
        return $this->startTimeStamp;
    }

    /**
     * Sets Start Time Stamp.
     * Start time when the claim got introduced.
     *
     * @maps startTimeStamp
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setStartTimeStamp(?\DateTime $startTimeStamp): void
    {
        $this->startTimeStamp = $startTimeStamp;
    }

    /**
     * Returns Service Instance Id.
     * Auto-generated Id of the service instance.
     */
    public function getServiceInstanceId(): ?string
    {
        return $this->serviceInstanceId;
    }

    /**
     * Sets Service Instance Id.
     * Auto-generated Id of the service instance.
     *
     * @maps serviceInstanceId
     */
    public function setServiceInstanceId(?string $serviceInstanceId): void
    {
        $this->serviceInstanceId = $serviceInstanceId;
    }

    /**
     * Returns Csp Profile Id.
     * CSP Profile ID in which service will be deployed.
     */
    public function getCspProfileId(): ?string
    {
        return $this->cspProfileId;
    }

    /**
     * Sets Csp Profile Id.
     * CSP Profile ID in which service will be deployed.
     *
     * @maps cspProfileId
     */
    public function setCspProfileId(?string $cspProfileId): void
    {
        $this->cspProfileId = $cspProfileId;
    }

    /**
     * Returns Service Id.
     * Auto-generated Id of the service which is to be deployed.
     */
    public function getServiceId(): ?string
    {
        return $this->serviceId;
    }

    /**
     * Sets Service Id.
     * Auto-generated Id of the service which is to be deployed.
     *
     * @maps serviceId
     */
    public function setServiceId(?string $serviceId): void
    {
        $this->serviceId = $serviceId;
    }

    /**
     * Returns End Time Stamp.
     * End time when the claim got introduced.
     */
    public function getEndTimeStamp(): ?\DateTime
    {
        return $this->endTimeStamp;
    }

    /**
     * Sets End Time Stamp.
     * End time when the claim got introduced.
     *
     * @maps endTimeStamp
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setEndTimeStamp(?\DateTime $endTimeStamp): void
    {
        $this->endTimeStamp = $endTimeStamp;
    }

    /**
     * Returns Created Date.
     * Auto-derived time of creation. Part of response only.
     */
    public function getCreatedDate(): ?\DateTime
    {
        return $this->createdDate;
    }

    /**
     * Sets Created Date.
     * Auto-derived time of creation. Part of response only.
     *
     * @maps createdDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedDate(?\DateTime $createdDate): void
    {
        $this->createdDate = $createdDate;
    }

    /**
     * Returns Last Modified Date.
     * Last modified time. Part of response only.
     */
    public function getLastModifiedDate(): ?\DateTime
    {
        return $this->lastModifiedDate;
    }

    /**
     * Sets Last Modified Date.
     * Last modified time. Part of response only.
     *
     * @maps lastModifiedDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setLastModifiedDate(?\DateTime $lastModifiedDate): void
    {
        $this->lastModifiedDate = $lastModifiedDate;
    }

    /**
     * Returns Created By.
     * User who created the dropDown. Part of response only.
     */
    public function getCreatedBy(): ?string
    {
        return $this->createdBy;
    }

    /**
     * Sets Created By.
     * User who created the dropDown. Part of response only.
     *
     * @maps createdBy
     */
    public function setCreatedBy(?string $createdBy): void
    {
        $this->createdBy = $createdBy;
    }

    /**
     * Returns Last Modified By.
     * User who last modified the dropDown. Part of response only.
     */
    public function getLastModifiedBy(): ?string
    {
        return $this->lastModifiedBy;
    }

    /**
     * Sets Last Modified By.
     * User who last modified the dropDown. Part of response only.
     *
     * @maps lastModifiedBy
     */
    public function setLastModifiedBy(?string $lastModifiedBy): void
    {
        $this->lastModifiedBy = $lastModifiedBy;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']                = $this->id;
        }
        if (isset($this->name)) {
            $json['name']              = $this->name;
        }
        if (isset($this->claimStatus)) {
            $json['claimStatus']       = ClaimStatusEnum::checkValue($this->claimStatus);
        }
        if (isset($this->sandBoxState)) {
            $json['sandBoxState']      = SandBoxStateEnum::checkValue($this->sandBoxState);
        }
        if (isset($this->sandBoxStatus)) {
            $json['sandBoxStatus']     = SandBoxStatusEnum::checkValue($this->sandBoxStatus);
        }
        if (isset($this->environment)) {
            $json['environment']       = $this->environment;
        }
        if (isset($this->claimType)) {
            $json['claimType']         = ClaimTypeEnum::checkValue($this->claimType);
        }
        if (isset($this->startTimeStamp)) {
            $json['startTimeStamp']    = DateTimeHelper::toRfc3339DateTime($this->startTimeStamp);
        }
        if (isset($this->serviceInstanceId)) {
            $json['serviceInstanceId'] = $this->serviceInstanceId;
        }
        if (isset($this->cspProfileId)) {
            $json['cspProfileId']      = $this->cspProfileId;
        }
        if (isset($this->serviceId)) {
            $json['serviceId']         = $this->serviceId;
        }
        if (isset($this->endTimeStamp)) {
            $json['endTimeStamp']      = DateTimeHelper::toRfc3339DateTime($this->endTimeStamp);
        }
        if (isset($this->createdDate)) {
            $json['createdDate']       = DateTimeHelper::toRfc3339DateTime($this->createdDate);
        }
        if (isset($this->lastModifiedDate)) {
            $json['lastModifiedDate']  = DateTimeHelper::toRfc3339DateTime($this->lastModifiedDate);
        }
        if (isset($this->createdBy)) {
            $json['createdBy']         = $this->createdBy;
        }
        if (isset($this->lastModifiedBy)) {
            $json['lastModifiedBy']    = $this->lastModifiedBy;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
