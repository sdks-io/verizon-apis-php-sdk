<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

/**
 * Workflow attribute of a service.
 */
class Workflow implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $version;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var InstallationWf|null
     */
    private $installationWf;

    /**
     * @var OperationsWf|null
     */
    private $operationsWf;

    /**
     * @var CustomWf|null
     */
    private $customWf;

    /**
     * @var string[]|null
     */
    private $files;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var \DateTime|null
     */
    private $createdDate;

    /**
     * @var \DateTime|null
     */
    private $lastModifiedDate;

    /**
     * @var string|null
     */
    private $createdBy;

    /**
     * @var string|null
     */
    private $updatedBy;

    /**
     * @param string $name
     * @param string $version
     */
    public function __construct(string $name, string $version)
    {
        $this->name = $name;
        $this->version = $version;
    }

    /**
     * Returns Name.
     * The service version workflow name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * The service version workflow name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Version.
     * The service version workflow value.
     */
    public function getVersion(): string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * The service version workflow value.
     *
     * @required
     * @maps version
     */
    public function setVersion(string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns Id.
     * Auto-generated UUID for each workdflow triggered.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Auto-generated UUID for each workdflow triggered.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Type.
     * Service type e.g. Installation, Operations, Custom.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     * Service type e.g. Installation, Operations, Custom.
     *
     * @maps type
     * @factory \VerizonLib\Models\WorkflowTypeEnum::checkValue
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Installation Wf.
     * `installationWf` attribute of a service.
     */
    public function getInstallationWf(): ?InstallationWf
    {
        return $this->installationWf;
    }

    /**
     * Sets Installation Wf.
     * `installationWf` attribute of a service.
     *
     * @maps installationWf
     */
    public function setInstallationWf(?InstallationWf $installationWf): void
    {
        $this->installationWf = $installationWf;
    }

    /**
     * Returns Operations Wf.
     * `operationsWf` attribute of a service.
     */
    public function getOperationsWf(): ?OperationsWf
    {
        return $this->operationsWf;
    }

    /**
     * Sets Operations Wf.
     * `operationsWf` attribute of a service.
     *
     * @maps operationsWf
     */
    public function setOperationsWf(?OperationsWf $operationsWf): void
    {
        $this->operationsWf = $operationsWf;
    }

    /**
     * Returns Custom Wf.
     * `customWf` attribute of a service.
     */
    public function getCustomWf(): ?CustomWf
    {
        return $this->customWf;
    }

    /**
     * Sets Custom Wf.
     * `customWf` attribute of a service.
     *
     * @maps customWf
     */
    public function setCustomWf(?CustomWf $customWf): void
    {
        $this->customWf = $customWf;
    }

    /**
     * Returns Files.
     * Files which are being generated.
     *
     * @return string[]|null
     */
    public function getFiles(): ?array
    {
        return $this->files;
    }

    /**
     * Sets Files.
     * Files which are being generated.
     *
     * @maps files
     *
     * @param string[]|null $files
     */
    public function setFiles(?array $files): void
    {
        $this->files = $files;
    }

    /**
     * Returns Status.
     * Status of the workflow.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Status of the workflow.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Created Date.
     * The date on which the workflow is created.
     */
    public function getCreatedDate(): ?\DateTime
    {
        return $this->createdDate;
    }

    /**
     * Sets Created Date.
     * The date on which the workflow is created.
     *
     * @maps createdDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedDate(?\DateTime $createdDate): void
    {
        $this->createdDate = $createdDate;
    }

    /**
     * Returns Last Modified Date.
     * The date when the created workflow was last modified.
     */
    public function getLastModifiedDate(): ?\DateTime
    {
        return $this->lastModifiedDate;
    }

    /**
     * Sets Last Modified Date.
     * The date when the created workflow was last modified.
     *
     * @maps lastModifiedDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setLastModifiedDate(?\DateTime $lastModifiedDate): void
    {
        $this->lastModifiedDate = $lastModifiedDate;
    }

    /**
     * Returns Created By.
     * Identity of the user who created the workflow.
     */
    public function getCreatedBy(): ?string
    {
        return $this->createdBy;
    }

    /**
     * Sets Created By.
     * Identity of the user who created the workflow.
     *
     * @maps createdBy
     */
    public function setCreatedBy(?string $createdBy): void
    {
        $this->createdBy = $createdBy;
    }

    /**
     * Returns Updated By.
     * Identity of the user who updated the workflow.
     */
    public function getUpdatedBy(): ?string
    {
        return $this->updatedBy;
    }

    /**
     * Sets Updated By.
     * Identity of the user who updated the workflow.
     *
     * @maps updatedBy
     */
    public function setUpdatedBy(?string $updatedBy): void
    {
        $this->updatedBy = $updatedBy;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']                 = $this->name;
        $json['version']              = $this->version;
        if (isset($this->id)) {
            $json['id']               = $this->id;
        }
        if (isset($this->type)) {
            $json['type']             = WorkflowTypeEnum::checkValue($this->type);
        }
        if (isset($this->installationWf)) {
            $json['installationWf']   = $this->installationWf;
        }
        if (isset($this->operationsWf)) {
            $json['operationsWf']     = $this->operationsWf;
        }
        if (isset($this->customWf)) {
            $json['customWf']         = $this->customWf;
        }
        if (isset($this->files)) {
            $json['files']            = $this->files;
        }
        if (isset($this->status)) {
            $json['status']           = $this->status;
        }
        if (isset($this->createdDate)) {
            $json['createdDate']      = DateTimeHelper::toRfc3339DateTime($this->createdDate);
        }
        if (isset($this->lastModifiedDate)) {
            $json['lastModifiedDate'] = DateTimeHelper::toRfc3339DateTime($this->lastModifiedDate);
        }
        if (isset($this->createdBy)) {
            $json['createdBy']        = $this->createdBy;
        }
        if (isset($this->updatedBy)) {
            $json['updatedBy']        = $this->updatedBy;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
