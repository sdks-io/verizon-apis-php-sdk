<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class PromoAlert1 implements \JsonSerializable
{
    /**
     * @var array[]|null
     */
    private $filterCriteria;

    /**
     * @var Keyschunk2[]|null
     */
    private $condition;

    /**
     * @var bool|null
     */
    private $enablePromoExp;

    /**
     * Returns Filter Criteria.
     *
     * @return array[]|null
     */
    public function getFilterCriteria(): ?array
    {
        return $this->filterCriteria;
    }

    /**
     * Sets Filter Criteria.
     *
     * @maps filterCriteria
     *
     * @param array[]|null $filterCriteria
     */
    public function setFilterCriteria(?array $filterCriteria): void
    {
        $this->filterCriteria = $filterCriteria;
    }

    /**
     * Returns Condition.
     *
     * @return Keyschunk2[]|null
     */
    public function getCondition(): ?array
    {
        return $this->condition;
    }

    /**
     * Sets Condition.
     *
     * @maps condition
     *
     * @param Keyschunk2[]|null $condition
     */
    public function setCondition(?array $condition): void
    {
        $this->condition = $condition;
    }

    /**
     * Returns Enable Promo Exp.
     */
    public function getEnablePromoExp(): ?bool
    {
        return $this->enablePromoExp;
    }

    /**
     * Sets Enable Promo Exp.
     *
     * @maps enablePromoExp
     */
    public function setEnablePromoExp(?bool $enablePromoExp): void
    {
        $this->enablePromoExp = $enablePromoExp;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->filterCriteria)) {
            $json['filterCriteria'] = $this->filterCriteria;
        }
        if (isset($this->condition)) {
            $json['condition']      = $this->condition;
        }
        if (isset($this->enablePromoExp)) {
            $json['enablePromoExp'] = $this->enablePromoExp;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
