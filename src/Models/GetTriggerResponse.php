<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

class GetTriggerResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var string|null
     */
    private $comparator;

    /**
     * @var \DateTime|null
     */
    private $createdAt;

    /**
     * @var string|null
     */
    private $groupName;

    /**
     * @var \DateTime|null
     */
    private $modifiedAt;

    /**
     * @var string|null
     */
    private $notificationGroupName;

    /**
     * @var string|null
     */
    private $organizationName;

    /**
     * @var string|null
     */
    private $smsType;

    /**
     * @var string|null
     */
    private $threshold;

    /**
     * @var string|null
     */
    private $thresholdUnit;

    /**
     * @var string|null
     */
    private $triggerCategory;

    /**
     * @var string|null
     */
    private $triggerCycle;

    /**
     * @var string|null
     */
    private $triggerId;

    /**
     * @var string|null
     */
    private $triggerName;

    /**
     * Returns Account Name.
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     *
     * @maps accountName
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Comparator.
     */
    public function getComparator(): ?string
    {
        return $this->comparator;
    }

    /**
     * Sets Comparator.
     *
     * @maps comparator
     */
    public function setComparator(?string $comparator): void
    {
        $this->comparator = $comparator;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?\DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps createdAt
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(?\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Group Name.
     */
    public function getGroupName(): ?string
    {
        return $this->groupName;
    }

    /**
     * Sets Group Name.
     *
     * @maps groupName
     */
    public function setGroupName(?string $groupName): void
    {
        $this->groupName = $groupName;
    }

    /**
     * Returns Modified At.
     */
    public function getModifiedAt(): ?\DateTime
    {
        return $this->modifiedAt;
    }

    /**
     * Sets Modified At.
     *
     * @maps modifiedAt
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setModifiedAt(?\DateTime $modifiedAt): void
    {
        $this->modifiedAt = $modifiedAt;
    }

    /**
     * Returns Notification Group Name.
     */
    public function getNotificationGroupName(): ?string
    {
        return $this->notificationGroupName;
    }

    /**
     * Sets Notification Group Name.
     *
     * @maps notificationGroupName
     */
    public function setNotificationGroupName(?string $notificationGroupName): void
    {
        $this->notificationGroupName = $notificationGroupName;
    }

    /**
     * Returns Organization Name.
     */
    public function getOrganizationName(): ?string
    {
        return $this->organizationName;
    }

    /**
     * Sets Organization Name.
     *
     * @maps organizationName
     */
    public function setOrganizationName(?string $organizationName): void
    {
        $this->organizationName = $organizationName;
    }

    /**
     * Returns Sms Type.
     */
    public function getSmsType(): ?string
    {
        return $this->smsType;
    }

    /**
     * Sets Sms Type.
     *
     * @maps smsType
     */
    public function setSmsType(?string $smsType): void
    {
        $this->smsType = $smsType;
    }

    /**
     * Returns Threshold.
     */
    public function getThreshold(): ?string
    {
        return $this->threshold;
    }

    /**
     * Sets Threshold.
     *
     * @maps threshold
     */
    public function setThreshold(?string $threshold): void
    {
        $this->threshold = $threshold;
    }

    /**
     * Returns Threshold Unit.
     */
    public function getThresholdUnit(): ?string
    {
        return $this->thresholdUnit;
    }

    /**
     * Sets Threshold Unit.
     *
     * @maps thresholdUnit
     */
    public function setThresholdUnit(?string $thresholdUnit): void
    {
        $this->thresholdUnit = $thresholdUnit;
    }

    /**
     * Returns Trigger Category.
     */
    public function getTriggerCategory(): ?string
    {
        return $this->triggerCategory;
    }

    /**
     * Sets Trigger Category.
     *
     * @maps triggerCategory
     */
    public function setTriggerCategory(?string $triggerCategory): void
    {
        $this->triggerCategory = $triggerCategory;
    }

    /**
     * Returns Trigger Cycle.
     */
    public function getTriggerCycle(): ?string
    {
        return $this->triggerCycle;
    }

    /**
     * Sets Trigger Cycle.
     *
     * @maps triggerCycle
     */
    public function setTriggerCycle(?string $triggerCycle): void
    {
        $this->triggerCycle = $triggerCycle;
    }

    /**
     * Returns Trigger Id.
     */
    public function getTriggerId(): ?string
    {
        return $this->triggerId;
    }

    /**
     * Sets Trigger Id.
     *
     * @maps triggerId
     */
    public function setTriggerId(?string $triggerId): void
    {
        $this->triggerId = $triggerId;
    }

    /**
     * Returns Trigger Name.
     */
    public function getTriggerName(): ?string
    {
        return $this->triggerName;
    }

    /**
     * Sets Trigger Name.
     *
     * @maps triggerName
     */
    public function setTriggerName(?string $triggerName): void
    {
        $this->triggerName = $triggerName;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['accountName']           = $this->accountName;
        }
        if (isset($this->comparator)) {
            $json['comparator']            = $this->comparator;
        }
        if (isset($this->createdAt)) {
            $json['createdAt']             = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        }
        if (isset($this->groupName)) {
            $json['groupName']             = $this->groupName;
        }
        if (isset($this->modifiedAt)) {
            $json['modifiedAt']            = DateTimeHelper::toRfc3339DateTime($this->modifiedAt);
        }
        if (isset($this->notificationGroupName)) {
            $json['notificationGroupName'] = $this->notificationGroupName;
        }
        if (isset($this->organizationName)) {
            $json['organizationName']      = $this->organizationName;
        }
        if (isset($this->smsType)) {
            $json['smsType']               = $this->smsType;
        }
        if (isset($this->threshold)) {
            $json['threshold']             = $this->threshold;
        }
        if (isset($this->thresholdUnit)) {
            $json['thresholdUnit']         = $this->thresholdUnit;
        }
        if (isset($this->triggerCategory)) {
            $json['triggerCategory']       = $this->triggerCategory;
        }
        if (isset($this->triggerCycle)) {
            $json['triggerCycle']          = $this->triggerCycle;
        }
        if (isset($this->triggerId)) {
            $json['triggerId']             = $this->triggerId;
        }
        if (isset($this->triggerName)) {
            $json['triggerName']           = $this->triggerName;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
