<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Network resources of a service profile.
 */
class NetworkResourcesType implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $minBandwidthKbits;

    /**
     * @var bool|null
     */
    private $serviceContinuitySupport;

    /**
     * @var int|null
     */
    private $maxRequestRate;

    /**
     * @var int
     */
    private $maxLatencyMs;

    /**
     * @var int|null
     */
    private $minAvailability;

    /**
     * @param int $maxLatencyMs
     */
    public function __construct(int $maxLatencyMs)
    {
        $this->maxLatencyMs = $maxLatencyMs;
    }

    /**
     * Returns Min Bandwidth Kbits.
     * Minimum required connection bandwidth in Kbit/s for the application.
     */
    public function getMinBandwidthKbits(): ?int
    {
        return $this->minBandwidthKbits;
    }

    /**
     * Sets Min Bandwidth Kbits.
     * Minimum required connection bandwidth in Kbit/s for the application.
     *
     * @maps minBandwidthKbits
     */
    public function setMinBandwidthKbits(?int $minBandwidthKbits): void
    {
        $this->minBandwidthKbits = $minBandwidthKbits;
    }

    /**
     * Returns Service Continuity Support.
     * Indicates if service continuity support is required or not for the application.
     */
    public function getServiceContinuitySupport(): ?bool
    {
        return $this->serviceContinuitySupport;
    }

    /**
     * Sets Service Continuity Support.
     * Indicates if service continuity support is required or not for the application.
     *
     * @maps serviceContinuitySupport
     */
    public function setServiceContinuitySupport(?bool $serviceContinuitySupport): void
    {
        $this->serviceContinuitySupport = $serviceContinuitySupport;
    }

    /**
     * Returns Max Request Rate.
     * Maximum request rate that the application can handle.
     */
    public function getMaxRequestRate(): ?int
    {
        return $this->maxRequestRate;
    }

    /**
     * Sets Max Request Rate.
     * Maximum request rate that the application can handle.
     *
     * @maps maxRequestRate
     */
    public function setMaxRequestRate(?int $maxRequestRate): void
    {
        $this->maxRequestRate = $maxRequestRate;
    }

    /**
     * Returns Max Latency Ms.
     * Maximum response time or latency that the application can handle, in milliseconds. Note: this value
     * must be in multiples of 5.
     */
    public function getMaxLatencyMs(): int
    {
        return $this->maxLatencyMs;
    }

    /**
     * Sets Max Latency Ms.
     * Maximum response time or latency that the application can handle, in milliseconds. Note: this value
     * must be in multiples of 5.
     *
     * @required
     * @maps maxLatencyMs
     */
    public function setMaxLatencyMs(int $maxLatencyMs): void
    {
        $this->maxLatencyMs = $maxLatencyMs;
    }

    /**
     * Returns Min Availability.
     * Minimum availability required for the server.
     */
    public function getMinAvailability(): ?int
    {
        return $this->minAvailability;
    }

    /**
     * Sets Min Availability.
     * Minimum availability required for the server.
     *
     * @maps minAvailability
     */
    public function setMinAvailability(?int $minAvailability): void
    {
        $this->minAvailability = $minAvailability;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->minBandwidthKbits)) {
            $json['minBandwidthKbits']        = $this->minBandwidthKbits;
        }
        if (isset($this->serviceContinuitySupport)) {
            $json['serviceContinuitySupport'] = $this->serviceContinuitySupport;
        }
        if (isset($this->maxRequestRate)) {
            $json['maxRequestRate']           = $this->maxRequestRate;
        }
        $json['maxLatencyMs']                 = $this->maxLatencyMs;
        if (isset($this->minAvailability)) {
            $json['minAvailability']          = $this->minAvailability;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
