<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Information related to manage resources in AWS infrastructure.
 */
class AwsCspProfile implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $credType;

    /**
     * @var string|null
     */
    private $accessKey;

    /**
     * @var string|null
     */
    private $secretKey;

    /**
     * @var string|null
     */
    private $roleARN;

    /**
     * @var string|null
     */
    private $accountId;

    /**
     * @var string|null
     */
    private $externalId;

    /**
     * Returns Cred Type.
     * Credential type of AWS CSP profile.
     */
    public function getCredType(): ?string
    {
        return $this->credType;
    }

    /**
     * Sets Cred Type.
     * Credential type of AWS CSP profile.
     *
     * @maps credType
     * @factory \VerizonLib\Models\AwsCspProfileCredTypeEnum::checkValue
     */
    public function setCredType(?string $credType): void
    {
        $this->credType = $credType;
    }

    /**
     * Returns Access Key.
     * AWS Access Key.
     */
    public function getAccessKey(): ?string
    {
        return $this->accessKey;
    }

    /**
     * Sets Access Key.
     * AWS Access Key.
     *
     * @maps accessKey
     */
    public function setAccessKey(?string $accessKey): void
    {
        $this->accessKey = $accessKey;
    }

    /**
     * Returns Secret Key.
     * AWS Secret Key.
     */
    public function getSecretKey(): ?string
    {
        return $this->secretKey;
    }

    /**
     * Sets Secret Key.
     * AWS Secret Key.
     *
     * @maps secretKey
     */
    public function setSecretKey(?string $secretKey): void
    {
        $this->secretKey = $secretKey;
    }

    /**
     * Returns Role ARN.
     * CSP AWS Role ARN.
     */
    public function getRoleARN(): ?string
    {
        return $this->roleARN;
    }

    /**
     * Sets Role ARN.
     * CSP AWS Role ARN.
     *
     * @maps roleARN
     */
    public function setRoleARN(?string $roleARN): void
    {
        $this->roleARN = $roleARN;
    }

    /**
     * Returns Account Id.
     * AWS account ID.
     */
    public function getAccountId(): ?string
    {
        return $this->accountId;
    }

    /**
     * Sets Account Id.
     * AWS account ID.
     *
     * @maps accountId
     */
    public function setAccountId(?string $accountId): void
    {
        $this->accountId = $accountId;
    }

    /**
     * Returns External Id.
     * AWS external ID.
     */
    public function getExternalId(): ?string
    {
        return $this->externalId;
    }

    /**
     * Sets External Id.
     * AWS external ID.
     *
     * @maps externalId
     */
    public function setExternalId(?string $externalId): void
    {
        $this->externalId = $externalId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->credType)) {
            $json['credType']   = AwsCspProfileCredTypeEnum::checkValue($this->credType);
        }
        if (isset($this->accessKey)) {
            $json['accessKey']  = $this->accessKey;
        }
        if (isset($this->secretKey)) {
            $json['secretKey']  = $this->secretKey;
        }
        if (isset($this->roleARN)) {
            $json['roleARN']    = $this->roleARN;
        }
        if (isset($this->accountId)) {
            $json['accountId']  = $this->accountId;
        }
        if (isset($this->externalId)) {
            $json['externalId'] = $this->externalId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
