<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Aggregated usage report (Asynchronous).
 */
class AggregatedReportCallbackResult implements \JsonSerializable
{
    /**
     * @var string
     */
    private $txid;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @param string $txid
     */
    public function __construct(string $txid)
    {
        $this->txid = $txid;
    }

    /**
     * Returns Txid.
     * A unique string that associates the request with the location report information that is sent in
     * asynchronous callback message.ThingSpace will send a separate callback message for each device that
     * was in the request. All of the callback messages will have the same txid.
     */
    public function getTxid(): string
    {
        return $this->txid;
    }

    /**
     * Sets Txid.
     * A unique string that associates the request with the location report information that is sent in
     * asynchronous callback message.ThingSpace will send a separate callback message for each device that
     * was in the request. All of the callback messages will have the same txid.
     *
     * @required
     * @maps txid
     */
    public function setTxid(string $txid): void
    {
        $this->txid = $txid;
    }

    /**
     * Returns Status.
     * QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all
     * other requests are QUEUED.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all
     * other requests are QUEUED.
     *
     * @maps status
     * @factory \VerizonLib\Models\AggregatedReportCallbackStatusEnum::checkValue
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['txid']       = $this->txid;
        if (isset($this->status)) {
            $json['status'] = AggregatedReportCallbackStatusEnum::checkValue($this->status);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
