<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Request to deactivate a carrier.
 */
class CarrierDeactivateRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var CustomFields[]|null
     */
    private $customFields;

    /**
     * @var AccountDeviceList[]|null
     */
    private $devices;

    /**
     * @var bool|null
     */
    private $etfWaiver;

    /**
     * @var string|null
     */
    private $groupName;

    /**
     * @var string|null
     */
    private $reasonCode;

    /**
     * @var string|null
     */
    private $servicePlan;

    /**
     * Returns Account Name.
     * The name of a billing account.
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     * The name of a billing account.
     *
     * @maps accountName
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Custom Fields.
     * Custom field names and values, if you want to only include devices that have matching values.
     *
     * @return CustomFields[]|null
     */
    public function getCustomFields(): ?array
    {
        return $this->customFields;
    }

    /**
     * Sets Custom Fields.
     * Custom field names and values, if you want to only include devices that have matching values.
     *
     * @maps customFields
     *
     * @param CustomFields[]|null $customFields
     */
    public function setCustomFields(?array $customFields): void
    {
        $this->customFields = $customFields;
    }

    /**
     * Returns Devices.
     * The devices for which you want to deactivate service, specified by device identifier.
     *
     * @return AccountDeviceList[]|null
     */
    public function getDevices(): ?array
    {
        return $this->devices;
    }

    /**
     * Sets Devices.
     * The devices for which you want to deactivate service, specified by device identifier.
     *
     * @maps devices
     *
     * @param AccountDeviceList[]|null $devices
     */
    public function setDevices(?array $devices): void
    {
        $this->devices = $devices;
    }

    /**
     * Returns Etf Waiver.
     * Fees may be assessed for deactivating Verizon Wireless devices, depending on the account contract.
     * The etfWaiver parameter waives the Early Termination Fee (ETF), if applicable.
     */
    public function getEtfWaiver(): ?bool
    {
        return $this->etfWaiver;
    }

    /**
     * Sets Etf Waiver.
     * Fees may be assessed for deactivating Verizon Wireless devices, depending on the account contract.
     * The etfWaiver parameter waives the Early Termination Fee (ETF), if applicable.
     *
     * @maps etfWaiver
     */
    public function setEtfWaiver(?bool $etfWaiver): void
    {
        $this->etfWaiver = $etfWaiver;
    }

    /**
     * Returns Group Name.
     * The name of a device group, if you want to deactivate all devices in that group.
     */
    public function getGroupName(): ?string
    {
        return $this->groupName;
    }

    /**
     * Sets Group Name.
     * The name of a device group, if you want to deactivate all devices in that group.
     *
     * @maps groupName
     */
    public function setGroupName(?string $groupName): void
    {
        $this->groupName = $groupName;
    }

    /**
     * Returns Reason Code.
     * Code identifying the reason for the deactivation. Currently the only valid reason code is “FF”,
     * which corresponds to General Admin/Maintenance.
     */
    public function getReasonCode(): ?string
    {
        return $this->reasonCode;
    }

    /**
     * Sets Reason Code.
     * Code identifying the reason for the deactivation. Currently the only valid reason code is “FF”,
     * which corresponds to General Admin/Maintenance.
     *
     * @maps reasonCode
     */
    public function setReasonCode(?string $reasonCode): void
    {
        $this->reasonCode = $reasonCode;
    }

    /**
     * Returns Service Plan.
     * The name of a service plan, if you want to only include devices that have that service plan.
     */
    public function getServicePlan(): ?string
    {
        return $this->servicePlan;
    }

    /**
     * Sets Service Plan.
     * The name of a service plan, if you want to only include devices that have that service plan.
     *
     * @maps servicePlan
     */
    public function setServicePlan(?string $servicePlan): void
    {
        $this->servicePlan = $servicePlan;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['accountName']  = $this->accountName;
        }
        if (isset($this->customFields)) {
            $json['customFields'] = $this->customFields;
        }
        if (isset($this->devices)) {
            $json['devices']      = $this->devices;
        }
        if (isset($this->etfWaiver)) {
            $json['etfWaiver']    = $this->etfWaiver;
        }
        if (isset($this->groupName)) {
            $json['groupName']    = $this->groupName;
        }
        if (isset($this->reasonCode)) {
            $json['reasonCode']   = $this->reasonCode;
        }
        if (isset($this->servicePlan)) {
            $json['servicePlan']  = $this->servicePlan;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
