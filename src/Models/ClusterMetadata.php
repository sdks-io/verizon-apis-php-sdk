<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class ClusterMetadata implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string|null
     */
    private $clusterType;

    /**
     * @var Cloud|null
     */
    private $cloud;

    /**
     * @var DataCenter|null
     */
    private $dataCenter;

    /**
     * @var EdgeServiceLaunchParams[]|null
     */
    private $labels;

    /**
     * @var ServiceLaunchClusterAdditionalParams|null
     */
    private $ingressIps;

    /**
     * @var bool|null
     */
    private $upgradeProtection;

    /**
     * Returns Name.
     * Name of the cluster to be used.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Name of the cluster to be used.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Description.
     * Description of the cluster.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Description of the cluster.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Cluster Type.
     */
    public function getClusterType(): ?string
    {
        return $this->clusterType;
    }

    /**
     * Sets Cluster Type.
     *
     * @maps clusterType
     * @factory \VerizonLib\Models\ClusterTypeEnum::checkValue
     */
    public function setClusterType(?string $clusterType): void
    {
        $this->clusterType = $clusterType;
    }

    /**
     * Returns Cloud.
     */
    public function getCloud(): ?Cloud
    {
        return $this->cloud;
    }

    /**
     * Sets Cloud.
     *
     * @maps cloud
     */
    public function setCloud(?Cloud $cloud): void
    {
        $this->cloud = $cloud;
    }

    /**
     * Returns Data Center.
     */
    public function getDataCenter(): ?DataCenter
    {
        return $this->dataCenter;
    }

    /**
     * Sets Data Center.
     *
     * @maps dataCenter
     */
    public function setDataCenter(?DataCenter $dataCenter): void
    {
        $this->dataCenter = $dataCenter;
    }

    /**
     * Returns Labels.
     *
     * @return EdgeServiceLaunchParams[]|null
     */
    public function getLabels(): ?array
    {
        return $this->labels;
    }

    /**
     * Sets Labels.
     *
     * @maps labels
     *
     * @param EdgeServiceLaunchParams[]|null $labels
     */
    public function setLabels(?array $labels): void
    {
        $this->labels = $labels;
    }

    /**
     * Returns Ingress Ips.
     */
    public function getIngressIps(): ?ServiceLaunchClusterAdditionalParams
    {
        return $this->ingressIps;
    }

    /**
     * Sets Ingress Ips.
     *
     * @maps ingressIps
     */
    public function setIngressIps(?ServiceLaunchClusterAdditionalParams $ingressIps): void
    {
        $this->ingressIps = $ingressIps;
    }

    /**
     * Returns Upgrade Protection.
     */
    public function getUpgradeProtection(): ?bool
    {
        return $this->upgradeProtection;
    }

    /**
     * Sets Upgrade Protection.
     *
     * @maps upgradeProtection
     */
    public function setUpgradeProtection(?bool $upgradeProtection): void
    {
        $this->upgradeProtection = $upgradeProtection;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->name)) {
            $json['name']              = $this->name;
        }
        if (isset($this->description)) {
            $json['description']       = $this->description;
        }
        if (isset($this->clusterType)) {
            $json['clusterType']       = ClusterTypeEnum::checkValue($this->clusterType);
        }
        if (isset($this->cloud)) {
            $json['cloud']             = $this->cloud;
        }
        if (isset($this->dataCenter)) {
            $json['dataCenter']        = $this->dataCenter;
        }
        if (isset($this->labels)) {
            $json['labels']            = $this->labels;
        }
        if (isset($this->ingressIps)) {
            $json['ingressIps']        = $this->ingressIps;
        }
        if (isset($this->upgradeProtection)) {
            $json['upgradeProtection'] = $this->upgradeProtection;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
