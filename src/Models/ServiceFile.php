<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

/**
 * Response to get file of a service.
 */
class ServiceFile implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $serviceName;

    /**
     * @var string|null
     */
    private $serviceVersion;

    /**
     * @var string|null
     */
    private $file;

    /**
     * @var string|null
     */
    private $categoryName;

    /**
     * @var string|null
     */
    private $categoryVersion;

    /**
     * @var string|null
     */
    private $categoryType;

    /**
     * @var string|null
     */
    private $validationStatus;

    /**
     * @var \DateTime|null
     */
    private $createdDate;

    /**
     * @var \DateTime|null
     */
    private $lastModifiedDate;

    /**
     * @var string|null
     */
    private $createdBy;

    /**
     * @var string|null
     */
    private $updatedBy;

    /**
     * Returns Id.
     * System generated unique UUID.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * System generated unique UUID.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Service Name.
     * Service name to which the file is going to be associated.
     */
    public function getServiceName(): ?string
    {
        return $this->serviceName;
    }

    /**
     * Sets Service Name.
     * Service name to which the file is going to be associated.
     *
     * @maps serviceName
     */
    public function setServiceName(?string $serviceName): void
    {
        $this->serviceName = $serviceName;
    }

    /**
     * Returns Service Version.
     * Version of the service being used.
     */
    public function getServiceVersion(): ?string
    {
        return $this->serviceVersion;
    }

    /**
     * Sets Service Version.
     * Version of the service being used.
     *
     * @maps serviceVersion
     */
    public function setServiceVersion(?string $serviceVersion): void
    {
        $this->serviceVersion = $serviceVersion;
    }

    /**
     * Returns File.
     * File which is to be uploaded should be provided in formData.
     */
    public function getFile(): ?string
    {
        return $this->file;
    }

    /**
     * Sets File.
     * File which is to be uploaded should be provided in formData.
     *
     * @maps file
     */
    public function setFile(?string $file): void
    {
        $this->file = $file;
    }

    /**
     * Returns Category Name.
     * Name of the workload being used in the service.
     */
    public function getCategoryName(): ?string
    {
        return $this->categoryName;
    }

    /**
     * Sets Category Name.
     * Name of the workload being used in the service.
     *
     * @maps categoryName
     */
    public function setCategoryName(?string $categoryName): void
    {
        $this->categoryName = $categoryName;
    }

    /**
     * Returns Category Version.
     * Version of the workload being used in the service.
     */
    public function getCategoryVersion(): ?string
    {
        return $this->categoryVersion;
    }

    /**
     * Sets Category Version.
     * Version of the workload being used in the service.
     *
     * @maps categoryVersion
     */
    public function setCategoryVersion(?string $categoryVersion): void
    {
        $this->categoryVersion = $categoryVersion;
    }

    /**
     * Returns Category Type.
     * Type of the workload being used in the service eg: use WORKLOAD_TGZ to upload the workload file in
     * tgz format.
     */
    public function getCategoryType(): ?string
    {
        return $this->categoryType;
    }

    /**
     * Sets Category Type.
     * Type of the workload being used in the service eg: use WORKLOAD_TGZ to upload the workload file in
     * tgz format.
     *
     * @maps categoryType
     */
    public function setCategoryType(?string $categoryType): void
    {
        $this->categoryType = $categoryType;
    }

    /**
     * Returns Validation Status.
     * Gives the success and failure response for the validation.
     */
    public function getValidationStatus(): ?string
    {
        return $this->validationStatus;
    }

    /**
     * Sets Validation Status.
     * Gives the success and failure response for the validation.
     *
     * @maps validationStatus
     */
    public function setValidationStatus(?string $validationStatus): void
    {
        $this->validationStatus = $validationStatus;
    }

    /**
     * Returns Created Date.
     * System captured creation date and time when tag is created.
     */
    public function getCreatedDate(): ?\DateTime
    {
        return $this->createdDate;
    }

    /**
     * Sets Created Date.
     * System captured creation date and time when tag is created.
     *
     * @maps createdDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedDate(?\DateTime $createdDate): void
    {
        $this->createdDate = $createdDate;
    }

    /**
     * Returns Last Modified Date.
     * System captured date and time when the tag was last modified.
     */
    public function getLastModifiedDate(): ?\DateTime
    {
        return $this->lastModifiedDate;
    }

    /**
     * Sets Last Modified Date.
     * System captured date and time when the tag was last modified.
     *
     * @maps lastModifiedDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setLastModifiedDate(?\DateTime $lastModifiedDate): void
    {
        $this->lastModifiedDate = $lastModifiedDate;
    }

    /**
     * Returns Created By.
     * User information who created the tag.
     */
    public function getCreatedBy(): ?string
    {
        return $this->createdBy;
    }

    /**
     * Sets Created By.
     * User information who created the tag.
     *
     * @maps createdBy
     */
    public function setCreatedBy(?string $createdBy): void
    {
        $this->createdBy = $createdBy;
    }

    /**
     * Returns Updated By.
     * Last user information who made changes to tag.
     */
    public function getUpdatedBy(): ?string
    {
        return $this->updatedBy;
    }

    /**
     * Sets Updated By.
     * Last user information who made changes to tag.
     *
     * @maps updatedBy
     */
    public function setUpdatedBy(?string $updatedBy): void
    {
        $this->updatedBy = $updatedBy;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']               = $this->id;
        }
        if (isset($this->serviceName)) {
            $json['serviceName']      = $this->serviceName;
        }
        if (isset($this->serviceVersion)) {
            $json['serviceVersion']   = $this->serviceVersion;
        }
        if (isset($this->file)) {
            $json['file']             = $this->file;
        }
        if (isset($this->categoryName)) {
            $json['categoryName']     = $this->categoryName;
        }
        if (isset($this->categoryVersion)) {
            $json['categoryVersion']  = $this->categoryVersion;
        }
        if (isset($this->categoryType)) {
            $json['categoryType']     = $this->categoryType;
        }
        if (isset($this->validationStatus)) {
            $json['validationStatus'] = $this->validationStatus;
        }
        if (isset($this->createdDate)) {
            $json['createdDate']      = DateTimeHelper::toRfc3339DateTime($this->createdDate);
        }
        if (isset($this->lastModifiedDate)) {
            $json['lastModifiedDate'] = DateTimeHelper::toRfc3339DateTime($this->lastModifiedDate);
        }
        if (isset($this->createdBy)) {
            $json['createdBy']        = $this->createdBy;
        }
        if (isset($this->updatedBy)) {
            $json['updatedBy']        = $this->updatedBy;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
