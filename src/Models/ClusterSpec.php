<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class ClusterSpec implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $blueprintRef;

    /**
     * @var string|null
     */
    private $overrideSelector;

    /**
     * @var string|null
     */
    private $shareMode;

    /**
     * Returns Blueprint Ref.
     */
    public function getBlueprintRef(): ?string
    {
        return $this->blueprintRef;
    }

    /**
     * Sets Blueprint Ref.
     *
     * @maps blueprintRef
     */
    public function setBlueprintRef(?string $blueprintRef): void
    {
        $this->blueprintRef = $blueprintRef;
    }

    /**
     * Returns Override Selector.
     */
    public function getOverrideSelector(): ?string
    {
        return $this->overrideSelector;
    }

    /**
     * Sets Override Selector.
     *
     * @maps overrideSelector
     */
    public function setOverrideSelector(?string $overrideSelector): void
    {
        $this->overrideSelector = $overrideSelector;
    }

    /**
     * Returns Share Mode.
     */
    public function getShareMode(): ?string
    {
        return $this->shareMode;
    }

    /**
     * Sets Share Mode.
     *
     * @maps shareMode
     */
    public function setShareMode(?string $shareMode): void
    {
        $this->shareMode = $shareMode;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->blueprintRef)) {
            $json['blueprintRef']     = $this->blueprintRef;
        }
        if (isset($this->overrideSelector)) {
            $json['overrideSelector'] = $this->overrideSelector;
        }
        if (isset($this->shareMode)) {
            $json['shareMode']        = $this->shareMode;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
