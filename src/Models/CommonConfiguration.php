<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class CommonConfiguration implements \JsonSerializable
{
    /**
     * @var CloudCredential|null
     */
    private $cloudCredentials;

    /**
     * @var string|null
     */
    private $k8sVersion = K8sVersionEnum::ENUM_118;

    /**
     * @var Blueprint|null
     */
    private $blueprint;

    /**
     * Returns Cloud Credentials.
     */
    public function getCloudCredentials(): ?CloudCredential
    {
        return $this->cloudCredentials;
    }

    /**
     * Sets Cloud Credentials.
     *
     * @maps cloudCredentials
     */
    public function setCloudCredentials(?CloudCredential $cloudCredentials): void
    {
        $this->cloudCredentials = $cloudCredentials;
    }

    /**
     * Returns K 8 S Version.
     * Version of K8s platform.
     */
    public function getK8sVersion(): ?string
    {
        return $this->k8sVersion;
    }

    /**
     * Sets K 8 S Version.
     * Version of K8s platform.
     *
     * @maps k8sVersion
     * @factory \VerizonLib\Models\K8sVersionEnum::checkValue
     */
    public function setK8sVersion(?string $k8sVersion): void
    {
        $this->k8sVersion = $k8sVersion;
    }

    /**
     * Returns Blueprint.
     */
    public function getBlueprint(): ?Blueprint
    {
        return $this->blueprint;
    }

    /**
     * Sets Blueprint.
     *
     * @maps blueprint
     */
    public function setBlueprint(?Blueprint $blueprint): void
    {
        $this->blueprint = $blueprint;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->cloudCredentials)) {
            $json['cloudCredentials'] = $this->cloudCredentials;
        }
        if (isset($this->k8sVersion)) {
            $json['k8sVersion']       = K8sVersionEnum::checkValue($this->k8sVersion);
        }
        if (isset($this->blueprint)) {
            $json['blueprint']        = $this->blueprint;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
