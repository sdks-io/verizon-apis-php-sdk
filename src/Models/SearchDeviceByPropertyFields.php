<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * List of device sensors and their most recently reported values.
 */
class SearchDeviceByPropertyFields implements \JsonSerializable
{
    /**
     * @var Acceleration|null
     */
    private $acceleration;

    /**
     * @var string|null
     */
    private $battery;

    /**
     * @var string|null
     */
    private $humidity;

    /**
     * @var string|null
     */
    private $light;

    /**
     * @var string|null
     */
    private $pressure;

    /**
     * @var string|null
     */
    private $signalStrength;

    /**
     * @var string|null
     */
    private $temperature;

    /**
     * @var DevicePropertylocation|null
     */
    private $devicePropertylocation;

    /**
     * Returns Acceleration.
     */
    public function getAcceleration(): ?Acceleration
    {
        return $this->acceleration;
    }

    /**
     * Sets Acceleration.
     *
     * @maps acceleration
     */
    public function setAcceleration(?Acceleration $acceleration): void
    {
        $this->acceleration = $acceleration;
    }

    /**
     * Returns Battery.
     */
    public function getBattery(): ?string
    {
        return $this->battery;
    }

    /**
     * Sets Battery.
     *
     * @maps battery
     */
    public function setBattery(?string $battery): void
    {
        $this->battery = $battery;
    }

    /**
     * Returns Humidity.
     */
    public function getHumidity(): ?string
    {
        return $this->humidity;
    }

    /**
     * Sets Humidity.
     *
     * @maps humidity
     */
    public function setHumidity(?string $humidity): void
    {
        $this->humidity = $humidity;
    }

    /**
     * Returns Light.
     */
    public function getLight(): ?string
    {
        return $this->light;
    }

    /**
     * Sets Light.
     *
     * @maps light
     */
    public function setLight(?string $light): void
    {
        $this->light = $light;
    }

    /**
     * Returns Pressure.
     */
    public function getPressure(): ?string
    {
        return $this->pressure;
    }

    /**
     * Sets Pressure.
     *
     * @maps pressure
     */
    public function setPressure(?string $pressure): void
    {
        $this->pressure = $pressure;
    }

    /**
     * Returns Signal Strength.
     */
    public function getSignalStrength(): ?string
    {
        return $this->signalStrength;
    }

    /**
     * Sets Signal Strength.
     *
     * @maps signalStrength
     */
    public function setSignalStrength(?string $signalStrength): void
    {
        $this->signalStrength = $signalStrength;
    }

    /**
     * Returns Temperature.
     */
    public function getTemperature(): ?string
    {
        return $this->temperature;
    }

    /**
     * Sets Temperature.
     *
     * @maps temperature
     */
    public function setTemperature(?string $temperature): void
    {
        $this->temperature = $temperature;
    }

    /**
     * Returns Device Propertylocation.
     */
    public function getDevicePropertylocation(): ?DevicePropertylocation
    {
        return $this->devicePropertylocation;
    }

    /**
     * Sets Device Propertylocation.
     *
     * @maps DevicePropertylocation
     */
    public function setDevicePropertylocation(?DevicePropertylocation $devicePropertylocation): void
    {
        $this->devicePropertylocation = $devicePropertylocation;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->acceleration)) {
            $json['acceleration']           = $this->acceleration;
        }
        if (isset($this->battery)) {
            $json['battery']                = $this->battery;
        }
        if (isset($this->humidity)) {
            $json['humidity']               = $this->humidity;
        }
        if (isset($this->light)) {
            $json['light']                  = $this->light;
        }
        if (isset($this->pressure)) {
            $json['pressure']               = $this->pressure;
        }
        if (isset($this->signalStrength)) {
            $json['signalStrength']         = $this->signalStrength;
        }
        if (isset($this->temperature)) {
            $json['temperature']            = $this->temperature;
        }
        if (isset($this->devicePropertylocation)) {
            $json['DevicePropertylocation'] = $this->devicePropertylocation;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
