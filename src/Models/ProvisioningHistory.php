<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * The provisioning history of a specified device during a specified time period.
 */
class ProvisioningHistory implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $occurredAt;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var string|null
     */
    private $eventBy;

    /**
     * @var string|null
     */
    private $eventType;

    /**
     * @var string|null
     */
    private $mdn;

    /**
     * @var string|null
     */
    private $msisdn;

    /**
     * @var string|null
     */
    private $servicePlan;

    /**
     * @var CustomFields[]|null
     */
    private $extendedAttributes;

    /**
     * Returns Occurred At.
     * The date and time when the provisioning event occured.
     */
    public function getOccurredAt(): ?string
    {
        return $this->occurredAt;
    }

    /**
     * Sets Occurred At.
     * The date and time when the provisioning event occured.
     *
     * @maps occurredAt
     */
    public function setOccurredAt(?string $occurredAt): void
    {
        $this->occurredAt = $occurredAt;
    }

    /**
     * Returns Status.
     * The success or failure of the provisioning event.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * The success or failure of the provisioning event.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Event By.
     * The user who performed the provisioning event.
     */
    public function getEventBy(): ?string
    {
        return $this->eventBy;
    }

    /**
     * Sets Event By.
     * The user who performed the provisioning event.
     *
     * @maps eventBy
     */
    public function setEventBy(?string $eventBy): void
    {
        $this->eventBy = $eventBy;
    }

    /**
     * Returns Event Type.
     * The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.
     */
    public function getEventType(): ?string
    {
        return $this->eventType;
    }

    /**
     * Sets Event Type.
     * The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.
     *
     * @maps eventType
     */
    public function setEventType(?string $eventType): void
    {
        $this->eventType = $eventType;
    }

    /**
     * Returns Mdn.
     * The MDN assigned to the device after the provisioning event.
     */
    public function getMdn(): ?string
    {
        return $this->mdn;
    }

    /**
     * Sets Mdn.
     * The MDN assigned to the device after the provisioning event.
     *
     * @maps mdn
     */
    public function setMdn(?string $mdn): void
    {
        $this->mdn = $mdn;
    }

    /**
     * Returns Msisdn.
     * The MSISDN assigned to the device after the provisioning event.
     */
    public function getMsisdn(): ?string
    {
        return $this->msisdn;
    }

    /**
     * Sets Msisdn.
     * The MSISDN assigned to the device after the provisioning event.
     *
     * @maps msisdn
     */
    public function setMsisdn(?string $msisdn): void
    {
        $this->msisdn = $msisdn;
    }

    /**
     * Returns Service Plan.
     * The service plan of the device after the provisioning event occurred.
     */
    public function getServicePlan(): ?string
    {
        return $this->servicePlan;
    }

    /**
     * Sets Service Plan.
     * The service plan of the device after the provisioning event occurred.
     *
     * @maps servicePlan
     */
    public function setServicePlan(?string $servicePlan): void
    {
        $this->servicePlan = $servicePlan;
    }

    /**
     * Returns Extended Attributes.
     * Any extended attributes for the event, as Key and Value pairs.
     *
     * @return CustomFields[]|null
     */
    public function getExtendedAttributes(): ?array
    {
        return $this->extendedAttributes;
    }

    /**
     * Sets Extended Attributes.
     * Any extended attributes for the event, as Key and Value pairs.
     *
     * @maps extendedAttributes
     *
     * @param CustomFields[]|null $extendedAttributes
     */
    public function setExtendedAttributes(?array $extendedAttributes): void
    {
        $this->extendedAttributes = $extendedAttributes;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->occurredAt)) {
            $json['occurredAt']         = $this->occurredAt;
        }
        if (isset($this->status)) {
            $json['status']             = $this->status;
        }
        if (isset($this->eventBy)) {
            $json['eventBy']            = $this->eventBy;
        }
        if (isset($this->eventType)) {
            $json['eventType']          = $this->eventType;
        }
        if (isset($this->mdn)) {
            $json['mdn']                = $this->mdn;
        }
        if (isset($this->msisdn)) {
            $json['msisdn']             = $this->msisdn;
        }
        if (isset($this->servicePlan)) {
            $json['servicePlan']        = $this->servicePlan;
        }
        if (isset($this->extendedAttributes)) {
            $json['extendedAttributes'] = $this->extendedAttributes;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
