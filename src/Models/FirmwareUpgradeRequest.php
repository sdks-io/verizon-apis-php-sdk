<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

/**
 * Details of the firmware upgrade request.
 */
class FirmwareUpgradeRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $accountName;

    /**
     * @var string
     */
    private $firmwareName;

    /**
     * @var string
     */
    private $firmwareTo;

    /**
     * @var \DateTime
     */
    private $startDate;

    /**
     * @var string[]
     */
    private $deviceList;

    /**
     * @param string $accountName
     * @param string $firmwareName
     * @param string $firmwareTo
     * @param \DateTime $startDate
     * @param string[] $deviceList
     */
    public function __construct(
        string $accountName,
        string $firmwareName,
        string $firmwareTo,
        \DateTime $startDate,
        array $deviceList
    ) {
        $this->accountName = $accountName;
        $this->firmwareName = $firmwareName;
        $this->firmwareTo = $firmwareTo;
        $this->startDate = $startDate;
        $this->deviceList = $deviceList;
    }

    /**
     * Returns Account Name.
     * Account identifier in "##########-#####".
     */
    public function getAccountName(): string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     * Account identifier in "##########-#####".
     *
     * @required
     * @maps accountName
     */
    public function setAccountName(string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Firmware Name.
     * The name of the firmware image that will be used for the upgrade, from a GET /firmware response.
     */
    public function getFirmwareName(): string
    {
        return $this->firmwareName;
    }

    /**
     * Sets Firmware Name.
     * The name of the firmware image that will be used for the upgrade, from a GET /firmware response.
     *
     * @required
     * @maps firmwareName
     */
    public function setFirmwareName(string $firmwareName): void
    {
        $this->firmwareName = $firmwareName;
    }

    /**
     * Returns Firmware To.
     * The name of the firmware version that will be on the devices after a successful upgrade.
     */
    public function getFirmwareTo(): string
    {
        return $this->firmwareTo;
    }

    /**
     * Sets Firmware To.
     * The name of the firmware version that will be on the devices after a successful upgrade.
     *
     * @required
     * @maps firmwareTo
     */
    public function setFirmwareTo(string $firmwareTo): void
    {
        $this->firmwareTo = $firmwareTo;
    }

    /**
     * Returns Start Date.
     * The date that the upgrade should begin.
     */
    public function getStartDate(): \DateTime
    {
        return $this->startDate;
    }

    /**
     * Sets Start Date.
     * The date that the upgrade should begin.
     *
     * @required
     * @maps startDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setStartDate(\DateTime $startDate): void
    {
        $this->startDate = $startDate;
    }

    /**
     * Returns Device List.
     * The IMEIs of the devices.
     *
     * @return string[]
     */
    public function getDeviceList(): array
    {
        return $this->deviceList;
    }

    /**
     * Sets Device List.
     * The IMEIs of the devices.
     *
     * @required
     * @maps deviceList
     *
     * @param string[] $deviceList
     */
    public function setDeviceList(array $deviceList): void
    {
        $this->deviceList = $deviceList;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['accountName']  = $this->accountName;
        $json['firmwareName'] = $this->firmwareName;
        $json['firmwareTo']   = $this->firmwareTo;
        $json['startDate']    = DateTimeHelper::toRfc3339DateTime($this->startDate);
        $json['deviceList']   = $this->deviceList;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
