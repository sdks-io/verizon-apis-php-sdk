<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Subscription resource definition.
 */
class Subscription implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $configurationfailures;

    /**
     * @var string|null
     */
    private $createdon;

    /**
     * @var string|null
     */
    private $delegateid;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var bool|null
     */
    private $disabled;

    /**
     * @var string|null
     */
    private $email;

    /**
     * @var string|null
     */
    private $filter;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $kind;

    /**
     * @var string|null
     */
    private $laststreamingstatus;

    /**
     * @var string|null
     */
    private $laststreamingtime;

    /**
     * @var string|null
     */
    private $lastupdated;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var int|null
     */
    private $networkfailures;

    /**
     * @var int|null
     */
    private $streamfailures;

    /**
     * @var string|null
     */
    private $streamkind;

    /**
     * @var string|null
     */
    private $targetid;

    /**
     * @var string|null
     */
    private $targettype;

    /**
     * @var string|null
     */
    private $version;

    /**
     * @var string|null
     */
    private $versionid;

    /**
     * Returns Configurationfailures.
     * The number of streaming failures due to faulty configuration.
     */
    public function getConfigurationfailures(): ?int
    {
        return $this->configurationfailures;
    }

    /**
     * Sets Configurationfailures.
     * The number of streaming failures due to faulty configuration.
     *
     * @maps configurationfailures
     */
    public function setConfigurationfailures(?int $configurationfailures): void
    {
        $this->configurationfailures = $configurationfailures;
    }

    /**
     * Returns Createdon.
     * The number of streaming failures due to faulty configuration.
     */
    public function getCreatedon(): ?string
    {
        return $this->createdon;
    }

    /**
     * Sets Createdon.
     * The number of streaming failures due to faulty configuration.
     *
     * @maps createdon
     */
    public function setCreatedon(?string $createdon): void
    {
        $this->createdon = $createdon;
    }

    /**
     * Returns Delegateid.
     * Not currently used.
     */
    public function getDelegateid(): ?string
    {
        return $this->delegateid;
    }

    /**
     * Sets Delegateid.
     * Not currently used.
     *
     * @maps delegateid
     */
    public function setDelegateid(?string $delegateid): void
    {
        $this->delegateid = $delegateid;
    }

    /**
     * Returns Description.
     * Description of the subscription.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Description of the subscription.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Disabled.
     * Whether the subscription is currently sending data.
     */
    public function getDisabled(): ?bool
    {
        return $this->disabled;
    }

    /**
     * Sets Disabled.
     * Whether the subscription is currently sending data.
     *
     * @maps disabled
     */
    public function setDisabled(?bool $disabled): void
    {
        $this->disabled = $disabled;
    }

    /**
     * Returns Email.
     * The address to which any error reports should be delivered.
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     * The address to which any error reports should be delivered.
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Filter.
     * Filter for events.
     */
    public function getFilter(): ?string
    {
        return $this->filter;
    }

    /**
     * Sets Filter.
     * Filter for events.
     *
     * @maps filter
     */
    public function setFilter(?string $filter): void
    {
        $this->filter = $filter;
    }

    /**
     * Returns Id.
     * ThingSpace unique ID for the subscription that was created.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * ThingSpace unique ID for the subscription that was created.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Kind.
     * Identifies the resource kind.
     */
    public function getKind(): ?string
    {
        return $this->kind;
    }

    /**
     * Sets Kind.
     * Identifies the resource kind.
     *
     * @maps kind
     */
    public function setKind(?string $kind): void
    {
        $this->kind = $kind;
    }

    /**
     * Returns Laststreamingstatus.
     * Possible values: success or fail.
     */
    public function getLaststreamingstatus(): ?string
    {
        return $this->laststreamingstatus;
    }

    /**
     * Sets Laststreamingstatus.
     * Possible values: success or fail.
     *
     * @maps laststreamingstatus
     */
    public function setLaststreamingstatus(?string $laststreamingstatus): void
    {
        $this->laststreamingstatus = $laststreamingstatus;
    }

    /**
     * Returns Laststreamingtime.
     * The date and time that the last stream send was attempted.
     */
    public function getLaststreamingtime(): ?string
    {
        return $this->laststreamingtime;
    }

    /**
     * Sets Laststreamingtime.
     * The date and time that the last stream send was attempted.
     *
     * @maps laststreamingtime
     */
    public function setLaststreamingtime(?string $laststreamingtime): void
    {
        $this->laststreamingtime = $laststreamingtime;
    }

    /**
     * Returns Lastupdated.
     * The date the resource was last updated.
     */
    public function getLastupdated(): ?string
    {
        return $this->lastupdated;
    }

    /**
     * Sets Lastupdated.
     * The date the resource was last updated.
     *
     * @maps lastupdated
     */
    public function setLastupdated(?string $lastupdated): void
    {
        $this->lastupdated = $lastupdated;
    }

    /**
     * Returns Name.
     * Name of the subscription.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Name of the subscription.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Networkfailures.
     * The number of failures due to network problems.
     */
    public function getNetworkfailures(): ?int
    {
        return $this->networkfailures;
    }

    /**
     * Sets Networkfailures.
     * The number of failures due to network problems.
     *
     * @maps networkfailures
     */
    public function setNetworkfailures(?int $networkfailures): void
    {
        $this->networkfailures = $networkfailures;
    }

    /**
     * Returns Streamfailures.
     */
    public function getStreamfailures(): ?int
    {
        return $this->streamfailures;
    }

    /**
     * Sets Streamfailures.
     *
     * @maps streamfailures
     */
    public function setStreamfailures(?int $streamfailures): void
    {
        $this->streamfailures = $streamfailures;
    }

    /**
     * Returns Streamkind.
     * The event type that will be sent in the data stream.
     */
    public function getStreamkind(): ?string
    {
        return $this->streamkind;
    }

    /**
     * Sets Streamkind.
     * The event type that will be sent in the data stream.
     *
     * @maps streamkind
     */
    public function setStreamkind(?string $streamkind): void
    {
        $this->streamkind = $streamkind;
    }

    /**
     * Returns Targetid.
     * Target to be used for dispatching events.
     */
    public function getTargetid(): ?string
    {
        return $this->targetid;
    }

    /**
     * Sets Targetid.
     * Target to be used for dispatching events.
     *
     * @maps targetid
     */
    public function setTargetid(?string $targetid): void
    {
        $this->targetid = $targetid;
    }

    /**
     * Returns Targettype.
     */
    public function getTargettype(): ?string
    {
        return $this->targettype;
    }

    /**
     * Sets Targettype.
     *
     * @maps targettype
     */
    public function setTargettype(?string $targettype): void
    {
        $this->targettype = $targettype;
    }

    /**
     * Returns Version.
     * Version of the underlying schema resource.
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * Version of the underlying schema resource.
     *
     * @maps version
     */
    public function setVersion(?string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns Versionid.
     * The version of the resource.
     */
    public function getVersionid(): ?string
    {
        return $this->versionid;
    }

    /**
     * Sets Versionid.
     * The version of the resource.
     *
     * @maps versionid
     */
    public function setVersionid(?string $versionid): void
    {
        $this->versionid = $versionid;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->configurationfailures)) {
            $json['configurationfailures'] = $this->configurationfailures;
        }
        if (isset($this->createdon)) {
            $json['createdon']             = $this->createdon;
        }
        if (isset($this->delegateid)) {
            $json['delegateid']            = $this->delegateid;
        }
        if (isset($this->description)) {
            $json['description']           = $this->description;
        }
        if (isset($this->disabled)) {
            $json['disabled']              = $this->disabled;
        }
        if (isset($this->email)) {
            $json['email']                 = $this->email;
        }
        if (isset($this->filter)) {
            $json['filter']                = $this->filter;
        }
        if (isset($this->id)) {
            $json['id']                    = $this->id;
        }
        if (isset($this->kind)) {
            $json['kind']                  = $this->kind;
        }
        if (isset($this->laststreamingstatus)) {
            $json['laststreamingstatus']   = $this->laststreamingstatus;
        }
        if (isset($this->laststreamingtime)) {
            $json['laststreamingtime']     = $this->laststreamingtime;
        }
        if (isset($this->lastupdated)) {
            $json['lastupdated']           = $this->lastupdated;
        }
        if (isset($this->name)) {
            $json['name']                  = $this->name;
        }
        if (isset($this->networkfailures)) {
            $json['networkfailures']       = $this->networkfailures;
        }
        if (isset($this->streamfailures)) {
            $json['streamfailures']        = $this->streamfailures;
        }
        if (isset($this->streamkind)) {
            $json['streamkind']            = $this->streamkind;
        }
        if (isset($this->targetid)) {
            $json['targetid']              = $this->targetid;
        }
        if (isset($this->targettype)) {
            $json['targettype']            = $this->targettype;
        }
        if (isset($this->version)) {
            $json['version']               = $this->version;
        }
        if (isset($this->versionid)) {
            $json['versionid']             = $this->versionid;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
