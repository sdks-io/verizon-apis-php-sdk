<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\Utils\DateTimeHelper;

/**
 * Campaign and campaign details.
 */
class V2CampaignMetaInfo implements \JsonSerializable
{
    /**
     * @var string
     */
    private $accountName;

    /**
     * @var string
     */
    private $id;

    /**
     * @var string|null
     */
    private $campaignName;

    /**
     * @var string
     */
    private $softwareName;

    /**
     * @var string
     */
    private $distributionType;

    /**
     * @var string
     */
    private $softwareFrom;

    /**
     * @var string
     */
    private $softwareTo;

    /**
     * @var string
     */
    private $make;

    /**
     * @var string
     */
    private $model;

    /**
     * @var \DateTime
     */
    private $startDate;

    /**
     * @var \DateTime
     */
    private $endDate;

    /**
     * @var \DateTime|null
     */
    private $downloadAfterDate;

    /**
     * @var V2TimeWindow[]|null
     */
    private $downloadTimeWindowList;

    /**
     * @var \DateTime|null
     */
    private $installAfterDate;

    /**
     * @var V2TimeWindow[]|null
     */
    private $installTimeWindowList;

    /**
     * @var string
     */
    private $status;

    /**
     * @param string $accountName
     * @param string $id
     * @param string $softwareName
     * @param string $distributionType
     * @param string $softwareFrom
     * @param string $softwareTo
     * @param string $make
     * @param string $model
     * @param \DateTime $startDate
     * @param \DateTime $endDate
     * @param string $status
     */
    public function __construct(
        string $accountName,
        string $id,
        string $softwareName,
        string $distributionType,
        string $softwareFrom,
        string $softwareTo,
        string $make,
        string $model,
        \DateTime $startDate,
        \DateTime $endDate,
        string $status
    ) {
        $this->accountName = $accountName;
        $this->id = $id;
        $this->softwareName = $softwareName;
        $this->distributionType = $distributionType;
        $this->softwareFrom = $softwareFrom;
        $this->softwareTo = $softwareTo;
        $this->make = $make;
        $this->model = $model;
        $this->startDate = $startDate;
        $this->endDate = $endDate;
        $this->status = $status;
    }

    /**
     * Returns Account Name.
     * Account identifier.
     */
    public function getAccountName(): string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     * Account identifier.
     *
     * @required
     * @maps accountName
     */
    public function setAccountName(string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Id.
     * Campaign identifier.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Campaign identifier.
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Campaign Name.
     * Campaign name.
     */
    public function getCampaignName(): ?string
    {
        return $this->campaignName;
    }

    /**
     * Sets Campaign Name.
     * Campaign name.
     *
     * @maps campaignName
     */
    public function setCampaignName(?string $campaignName): void
    {
        $this->campaignName = $campaignName;
    }

    /**
     * Returns Software Name.
     * Software name.
     */
    public function getSoftwareName(): string
    {
        return $this->softwareName;
    }

    /**
     * Sets Software Name.
     * Software name.
     *
     * @required
     * @maps softwareName
     */
    public function setSoftwareName(string $softwareName): void
    {
        $this->softwareName = $softwareName;
    }

    /**
     * Returns Distribution Type.
     * LWM2M, OMD-DM or HTTP.
     */
    public function getDistributionType(): string
    {
        return $this->distributionType;
    }

    /**
     * Sets Distribution Type.
     * LWM2M, OMD-DM or HTTP.
     *
     * @required
     * @maps distributionType
     */
    public function setDistributionType(string $distributionType): void
    {
        $this->distributionType = $distributionType;
    }

    /**
     * Returns Software From.
     * Old software name.
     */
    public function getSoftwareFrom(): string
    {
        return $this->softwareFrom;
    }

    /**
     * Sets Software From.
     * Old software name.
     *
     * @required
     * @maps softwareFrom
     */
    public function setSoftwareFrom(string $softwareFrom): void
    {
        $this->softwareFrom = $softwareFrom;
    }

    /**
     * Returns Software To.
     * New software name.
     */
    public function getSoftwareTo(): string
    {
        return $this->softwareTo;
    }

    /**
     * Sets Software To.
     * New software name.
     *
     * @required
     * @maps softwareTo
     */
    public function setSoftwareTo(string $softwareTo): void
    {
        $this->softwareTo = $softwareTo;
    }

    /**
     * Returns Make.
     * Applicable make.
     */
    public function getMake(): string
    {
        return $this->make;
    }

    /**
     * Sets Make.
     * Applicable make.
     *
     * @required
     * @maps make
     */
    public function setMake(string $make): void
    {
        $this->make = $make;
    }

    /**
     * Returns Model.
     * Applicable model.
     */
    public function getModel(): string
    {
        return $this->model;
    }

    /**
     * Sets Model.
     * Applicable model.
     *
     * @required
     * @maps model
     */
    public function setModel(string $model): void
    {
        $this->model = $model;
    }

    /**
     * Returns Start Date.
     * Campaign start date.
     */
    public function getStartDate(): \DateTime
    {
        return $this->startDate;
    }

    /**
     * Sets Start Date.
     * Campaign start date.
     *
     * @required
     * @maps startDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setStartDate(\DateTime $startDate): void
    {
        $this->startDate = $startDate;
    }

    /**
     * Returns End Date.
     * Campaign end date.
     */
    public function getEndDate(): \DateTime
    {
        return $this->endDate;
    }

    /**
     * Sets End Date.
     * Campaign end date.
     *
     * @required
     * @maps endDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setEndDate(\DateTime $endDate): void
    {
        $this->endDate = $endDate;
    }

    /**
     * Returns Download After Date.
     * Specifies starting date client should download package. If null, client will download as soon as
     * possible.
     */
    public function getDownloadAfterDate(): ?\DateTime
    {
        return $this->downloadAfterDate;
    }

    /**
     * Sets Download After Date.
     * Specifies starting date client should download package. If null, client will download as soon as
     * possible.
     *
     * @maps downloadAfterDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setDownloadAfterDate(?\DateTime $downloadAfterDate): void
    {
        $this->downloadAfterDate = $downloadAfterDate;
    }

    /**
     * Returns Download Time Window List.
     * List of allowed download time windows.
     *
     * @return V2TimeWindow[]|null
     */
    public function getDownloadTimeWindowList(): ?array
    {
        return $this->downloadTimeWindowList;
    }

    /**
     * Sets Download Time Window List.
     * List of allowed download time windows.
     *
     * @maps downloadTimeWindowList
     *
     * @param V2TimeWindow[]|null $downloadTimeWindowList
     */
    public function setDownloadTimeWindowList(?array $downloadTimeWindowList): void
    {
        $this->downloadTimeWindowList = $downloadTimeWindowList;
    }

    /**
     * Returns Install After Date.
     * Client will install package after date. If null, client will install as soon as possible.
     */
    public function getInstallAfterDate(): ?\DateTime
    {
        return $this->installAfterDate;
    }

    /**
     * Sets Install After Date.
     * Client will install package after date. If null, client will install as soon as possible.
     *
     * @maps installAfterDate
     * @factory \VerizonLib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setInstallAfterDate(?\DateTime $installAfterDate): void
    {
        $this->installAfterDate = $installAfterDate;
    }

    /**
     * Returns Install Time Window List.
     * List of allowed install time windows.
     *
     * @return V2TimeWindow[]|null
     */
    public function getInstallTimeWindowList(): ?array
    {
        return $this->installTimeWindowList;
    }

    /**
     * Sets Install Time Window List.
     * List of allowed install time windows.
     *
     * @maps installTimeWindowList
     *
     * @param V2TimeWindow[]|null $installTimeWindowList
     */
    public function setInstallTimeWindowList(?array $installTimeWindowList): void
    {
        $this->installTimeWindowList = $installTimeWindowList;
    }

    /**
     * Returns Status.
     * Software upgrade status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Software upgrade status.
     *
     * @required
     * @maps status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['accountName']                = $this->accountName;
        $json['id']                         = $this->id;
        if (isset($this->campaignName)) {
            $json['campaignName']           = $this->campaignName;
        }
        $json['softwareName']               = $this->softwareName;
        $json['distributionType']           = $this->distributionType;
        $json['softwareFrom']               = $this->softwareFrom;
        $json['softwareTo']                 = $this->softwareTo;
        $json['make']                       = $this->make;
        $json['model']                      = $this->model;
        $json['startDate']                  = DateTimeHelper::toSimpleDate($this->startDate);
        $json['endDate']                    = DateTimeHelper::toSimpleDate($this->endDate);
        if (isset($this->downloadAfterDate)) {
            $json['downloadAfterDate']      = DateTimeHelper::toSimpleDate($this->downloadAfterDate);
        }
        if (isset($this->downloadTimeWindowList)) {
            $json['downloadTimeWindowList'] = $this->downloadTimeWindowList;
        }
        if (isset($this->installAfterDate)) {
            $json['installAfterDate']       = DateTimeHelper::toSimpleDate($this->installAfterDate);
        }
        if (isset($this->installTimeWindowList)) {
            $json['installTimeWindowList']  = $this->installTimeWindowList;
        }
        $json['status']                     = $this->status;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
