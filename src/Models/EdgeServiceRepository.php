<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class EdgeServiceRepository implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var Revision|null
     */
    private $revision;

    /**
     * @var VendorInformation|null
     */
    private $vendorInformation;

    /**
     * @var string
     */
    private $type;

    /**
     * @var string|null
     */
    private $tag;

    /**
     * @var string
     */
    private $endpoint;

    /**
     * @var string
     */
    private $reacheability;

    /**
     * @var string|null
     */
    private $cACertificate;

    /**
     * @var string[]|null
     */
    private $agents;

    /**
     * @var bool|null
     */
    private $sslDisabled;

    /**
     * @var string|null
     */
    private $credentialsType;

    /**
     * @var Credential|null
     */
    private $credentials;

    /**
     * @var string|null
     */
    private $sshKey;

    /**
     * @param string $name
     * @param string $type
     * @param string $endpoint
     * @param string $reacheability
     */
    public function __construct(string $name, string $type, string $endpoint, string $reacheability)
    {
        $this->name = $name;
        $this->type = $type;
        $this->endpoint = $endpoint;
        $this->reacheability = $reacheability;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Revision.
     */
    public function getRevision(): ?Revision
    {
        return $this->revision;
    }

    /**
     * Sets Revision.
     *
     * @maps revision
     */
    public function setRevision(?Revision $revision): void
    {
        $this->revision = $revision;
    }

    /**
     * Returns Vendor Information.
     */
    public function getVendorInformation(): ?VendorInformation
    {
        return $this->vendorInformation;
    }

    /**
     * Sets Vendor Information.
     *
     * @maps vendorInformation
     */
    public function setVendorInformation(?VendorInformation $vendorInformation): void
    {
        $this->vendorInformation = $vendorInformation;
    }

    /**
     * Returns Type.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @required
     * @maps type
     * @factory \VerizonLib\Models\RepositoryResTypeEnum::checkValue
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Tag.
     */
    public function getTag(): ?string
    {
        return $this->tag;
    }

    /**
     * Sets Tag.
     *
     * @maps tag
     */
    public function setTag(?string $tag): void
    {
        $this->tag = $tag;
    }

    /**
     * Returns Endpoint.
     */
    public function getEndpoint(): string
    {
        return $this->endpoint;
    }

    /**
     * Sets Endpoint.
     *
     * @required
     * @maps endpoint
     */
    public function setEndpoint(string $endpoint): void
    {
        $this->endpoint = $endpoint;
    }

    /**
     * Returns Reacheability.
     */
    public function getReacheability(): string
    {
        return $this->reacheability;
    }

    /**
     * Sets Reacheability.
     *
     * @required
     * @maps reacheability
     * @factory \VerizonLib\Models\ReacheabilityEnum::checkValue
     */
    public function setReacheability(string $reacheability): void
    {
        $this->reacheability = $reacheability;
    }

    /**
     * Returns C a Certificate.
     * Required if your repository uses a private certificate authencation.Please provide ur CA certificat
     * in PEM format.
     */
    public function getCACertificate(): ?string
    {
        return $this->cACertificate;
    }

    /**
     * Sets C a Certificate.
     * Required if your repository uses a private certificate authencation.Please provide ur CA certificat
     * in PEM format.
     *
     * @maps CACertificate
     */
    public function setCACertificate(?string $cACertificate): void
    {
        $this->cACertificate = $cACertificate;
    }

    /**
     * Returns Agents.
     *
     * @return string[]|null
     */
    public function getAgents(): ?array
    {
        return $this->agents;
    }

    /**
     * Sets Agents.
     *
     * @maps Agents
     *
     * @param string[]|null $agents
     */
    public function setAgents(?array $agents): void
    {
        $this->agents = $agents;
    }

    /**
     * Returns Ssl Disabled.
     */
    public function getSslDisabled(): ?bool
    {
        return $this->sslDisabled;
    }

    /**
     * Sets Ssl Disabled.
     *
     * @maps sslDisabled
     */
    public function setSslDisabled(?bool $sslDisabled): void
    {
        $this->sslDisabled = $sslDisabled;
    }

    /**
     * Returns Credentials Type.
     */
    public function getCredentialsType(): ?string
    {
        return $this->credentialsType;
    }

    /**
     * Sets Credentials Type.
     *
     * @maps credentialsType
     * @factory \VerizonLib\Models\CredentialsTypeEnum::checkValue
     */
    public function setCredentialsType(?string $credentialsType): void
    {
        $this->credentialsType = $credentialsType;
    }

    /**
     * Returns Credentials.
     */
    public function getCredentials(): ?Credential
    {
        return $this->credentials;
    }

    /**
     * Sets Credentials.
     *
     * @maps credentials
     */
    public function setCredentials(?Credential $credentials): void
    {
        $this->credentials = $credentials;
    }

    /**
     * Returns Ssh Key.
     * SSH Private Key in PEM format.
     */
    public function getSshKey(): ?string
    {
        return $this->sshKey;
    }

    /**
     * Sets Ssh Key.
     * SSH Private Key in PEM format.
     *
     * @maps sshKey
     */
    public function setSshKey(?string $sshKey): void
    {
        $this->sshKey = $sshKey;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']                  = $this->name;
        if (isset($this->description)) {
            $json['description']       = $this->description;
        }
        if (isset($this->revision)) {
            $json['revision']          = $this->revision;
        }
        if (isset($this->vendorInformation)) {
            $json['vendorInformation'] = $this->vendorInformation;
        }
        $json['type']                  = RepositoryResTypeEnum::checkValue($this->type);
        if (isset($this->tag)) {
            $json['tag']               = $this->tag;
        }
        $json['endpoint']              = $this->endpoint;
        $json['reacheability']         = ReacheabilityEnum::checkValue($this->reacheability);
        if (isset($this->cACertificate)) {
            $json['CACertificate']     = $this->cACertificate;
        }
        if (isset($this->agents)) {
            $json['Agents']            = $this->agents;
        }
        if (isset($this->sslDisabled)) {
            $json['sslDisabled']       = $this->sslDisabled;
        }
        if (isset($this->credentialsType)) {
            $json['credentialsType']   = CredentialsTypeEnum::checkValue($this->credentialsType);
        }
        if (isset($this->credentials)) {
            $json['credentials']       = $this->credentials;
        }
        if (isset($this->sshKey)) {
            $json['sshKey']            = $this->sshKey;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
