<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Subscription of the device.
 */
class SecuritySubscription implements \JsonSerializable
{
    /**
     * @var ExtendedAttributes[]|null
     */
    private $extendedAttributes;

    /**
     * @var int|null
     */
    private $licenseAssigned;

    /**
     * @var int|null
     */
    private $licenseAvailable;

    /**
     * @var int|null
     */
    private $licensePurchased;

    /**
     * @var string|null
     */
    private $licenseType;

    /**
     * @var string|null
     */
    private $skuNumber;

    /**
     * Returns Extended Attributes.
     * Attributes of the subscription.
     *
     * @return ExtendedAttributes[]|null
     */
    public function getExtendedAttributes(): ?array
    {
        return $this->extendedAttributes;
    }

    /**
     * Sets Extended Attributes.
     * Attributes of the subscription.
     *
     * @maps extendedAttributes
     *
     * @param ExtendedAttributes[]|null $extendedAttributes
     */
    public function setExtendedAttributes(?array $extendedAttributes): void
    {
        $this->extendedAttributes = $extendedAttributes;
    }

    /**
     * Returns License Assigned.
     * The total number of licenses for this license type that are assigned to device SIMs.
     */
    public function getLicenseAssigned(): ?int
    {
        return $this->licenseAssigned;
    }

    /**
     * Sets License Assigned.
     * The total number of licenses for this license type that are assigned to device SIMs.
     *
     * @maps licenseAssigned
     */
    public function setLicenseAssigned(?int $licenseAssigned): void
    {
        $this->licenseAssigned = $licenseAssigned;
    }

    /**
     * Returns License Available.
     * The total number of licenses for this license type that are available to assign to device SIMs.
     */
    public function getLicenseAvailable(): ?int
    {
        return $this->licenseAvailable;
    }

    /**
     * Sets License Available.
     * The total number of licenses for this license type that are available to assign to device SIMs.
     *
     * @maps licenseAvailable
     */
    public function setLicenseAvailable(?int $licenseAvailable): void
    {
        $this->licenseAvailable = $licenseAvailable;
    }

    /**
     * Returns License Purchased.
     * The total number of licenses purchased for the license type.
     */
    public function getLicensePurchased(): ?int
    {
        return $this->licensePurchased;
    }

    /**
     * Sets License Purchased.
     * The total number of licenses purchased for the license type.
     *
     * @maps licensePurchased
     */
    public function setLicensePurchased(?int $licensePurchased): void
    {
        $this->licensePurchased = $licensePurchased;
    }

    /**
     * Returns License Type.
     * The license type associated with the skuNumber.
     */
    public function getLicenseType(): ?string
    {
        return $this->licenseType;
    }

    /**
     * Sets License Type.
     * The license type associated with the skuNumber.
     *
     * @maps licenseType
     */
    public function setLicenseType(?string $licenseType): void
    {
        $this->licenseType = $licenseType;
    }

    /**
     * Returns Sku Number.
     * The skuNumber that identifies the license type.
     */
    public function getSkuNumber(): ?string
    {
        return $this->skuNumber;
    }

    /**
     * Sets Sku Number.
     * The skuNumber that identifies the license type.
     *
     * @maps skuNumber
     */
    public function setSkuNumber(?string $skuNumber): void
    {
        $this->skuNumber = $skuNumber;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->extendedAttributes)) {
            $json['extendedAttributes'] = $this->extendedAttributes;
        }
        if (isset($this->licenseAssigned)) {
            $json['licenseAssigned']    = $this->licenseAssigned;
        }
        if (isset($this->licenseAvailable)) {
            $json['licenseAvailable']   = $this->licenseAvailable;
        }
        if (isset($this->licensePurchased)) {
            $json['licensePurchased']   = $this->licensePurchased;
        }
        if (isset($this->licenseType)) {
            $json['licenseType']        = $this->licenseType;
        }
        if (isset($this->skuNumber)) {
            $json['skuNumber']          = $this->skuNumber;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
