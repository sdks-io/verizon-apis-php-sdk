<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class AdvanceConfiguration implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $serviceRoleArn;

    /**
     * @var string|null
     */
    private $serviceRolePermissionBoundary;

    /**
     * @var bool|null
     */
    private $enableProxy = false;

    /**
     * @var string|null
     */
    private $httpProxy;

    /**
     * @var string|null
     */
    private $httpsProxy;

    /**
     * @var string|null
     */
    private $noProxy;

    /**
     * @var string|null
     */
    private $proxyRootCA;

    /**
     * @var bool|null
     */
    private $enableTlsTraffic = false;

    /**
     * @var bool|null
     */
    private $enableAutoApprove = false;

    /**
     * @var bool|null
     */
    private $enableMultiMaster = false;

    /**
     * @var bool|null
     */
    private $enableDedicatedMaster = false;

    /**
     * Returns Service Role Arn.
     */
    public function getServiceRoleArn(): ?string
    {
        return $this->serviceRoleArn;
    }

    /**
     * Sets Service Role Arn.
     *
     * @maps serviceRoleArn
     */
    public function setServiceRoleArn(?string $serviceRoleArn): void
    {
        $this->serviceRoleArn = $serviceRoleArn;
    }

    /**
     * Returns Service Role Permission Boundary.
     */
    public function getServiceRolePermissionBoundary(): ?string
    {
        return $this->serviceRolePermissionBoundary;
    }

    /**
     * Sets Service Role Permission Boundary.
     *
     * @maps serviceRolePermissionBoundary
     */
    public function setServiceRolePermissionBoundary(?string $serviceRolePermissionBoundary): void
    {
        $this->serviceRolePermissionBoundary = $serviceRolePermissionBoundary;
    }

    /**
     * Returns Enable Proxy.
     */
    public function getEnableProxy(): ?bool
    {
        return $this->enableProxy;
    }

    /**
     * Sets Enable Proxy.
     *
     * @maps enableProxy
     */
    public function setEnableProxy(?bool $enableProxy): void
    {
        $this->enableProxy = $enableProxy;
    }

    /**
     * Returns Http Proxy.
     */
    public function getHttpProxy(): ?string
    {
        return $this->httpProxy;
    }

    /**
     * Sets Http Proxy.
     *
     * @maps httpProxy
     */
    public function setHttpProxy(?string $httpProxy): void
    {
        $this->httpProxy = $httpProxy;
    }

    /**
     * Returns Https Proxy.
     */
    public function getHttpsProxy(): ?string
    {
        return $this->httpsProxy;
    }

    /**
     * Sets Https Proxy.
     *
     * @maps httpsProxy
     */
    public function setHttpsProxy(?string $httpsProxy): void
    {
        $this->httpsProxy = $httpsProxy;
    }

    /**
     * Returns No Proxy.
     */
    public function getNoProxy(): ?string
    {
        return $this->noProxy;
    }

    /**
     * Sets No Proxy.
     *
     * @maps noProxy
     */
    public function setNoProxy(?string $noProxy): void
    {
        $this->noProxy = $noProxy;
    }

    /**
     * Returns Proxy Root CA.
     */
    public function getProxyRootCA(): ?string
    {
        return $this->proxyRootCA;
    }

    /**
     * Sets Proxy Root CA.
     *
     * @maps proxyRootCA
     */
    public function setProxyRootCA(?string $proxyRootCA): void
    {
        $this->proxyRootCA = $proxyRootCA;
    }

    /**
     * Returns Enable Tls Traffic.
     */
    public function getEnableTlsTraffic(): ?bool
    {
        return $this->enableTlsTraffic;
    }

    /**
     * Sets Enable Tls Traffic.
     *
     * @maps enableTlsTraffic
     */
    public function setEnableTlsTraffic(?bool $enableTlsTraffic): void
    {
        $this->enableTlsTraffic = $enableTlsTraffic;
    }

    /**
     * Returns Enable Auto Approve.
     */
    public function getEnableAutoApprove(): ?bool
    {
        return $this->enableAutoApprove;
    }

    /**
     * Sets Enable Auto Approve.
     *
     * @maps enableAutoApprove
     */
    public function setEnableAutoApprove(?bool $enableAutoApprove): void
    {
        $this->enableAutoApprove = $enableAutoApprove;
    }

    /**
     * Returns Enable Multi Master.
     */
    public function getEnableMultiMaster(): ?bool
    {
        return $this->enableMultiMaster;
    }

    /**
     * Sets Enable Multi Master.
     *
     * @maps enableMultiMaster
     */
    public function setEnableMultiMaster(?bool $enableMultiMaster): void
    {
        $this->enableMultiMaster = $enableMultiMaster;
    }

    /**
     * Returns Enable Dedicated Master.
     */
    public function getEnableDedicatedMaster(): ?bool
    {
        return $this->enableDedicatedMaster;
    }

    /**
     * Sets Enable Dedicated Master.
     *
     * @maps enableDedicatedMaster
     */
    public function setEnableDedicatedMaster(?bool $enableDedicatedMaster): void
    {
        $this->enableDedicatedMaster = $enableDedicatedMaster;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->serviceRoleArn)) {
            $json['serviceRoleArn']                = $this->serviceRoleArn;
        }
        if (isset($this->serviceRolePermissionBoundary)) {
            $json['serviceRolePermissionBoundary'] = $this->serviceRolePermissionBoundary;
        }
        if (isset($this->enableProxy)) {
            $json['enableProxy']                   = $this->enableProxy;
        }
        if (isset($this->httpProxy)) {
            $json['httpProxy']                     = $this->httpProxy;
        }
        if (isset($this->httpsProxy)) {
            $json['httpsProxy']                    = $this->httpsProxy;
        }
        if (isset($this->noProxy)) {
            $json['noProxy']                       = $this->noProxy;
        }
        if (isset($this->proxyRootCA)) {
            $json['proxyRootCA']                   = $this->proxyRootCA;
        }
        if (isset($this->enableTlsTraffic)) {
            $json['enableTlsTraffic']              = $this->enableTlsTraffic;
        }
        if (isset($this->enableAutoApprove)) {
            $json['enableAutoApprove']             = $this->enableAutoApprove;
        }
        if (isset($this->enableMultiMaster)) {
            $json['enableMultiMaster']             = $this->enableMultiMaster;
        }
        if (isset($this->enableDedicatedMaster)) {
            $json['enableDedicatedMaster']         = $this->enableDedicatedMaster;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
