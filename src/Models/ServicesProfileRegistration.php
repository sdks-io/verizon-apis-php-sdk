<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class ServicesProfileRegistration implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $serviceName;

    /**
     * @var string|null
     */
    private $serviceVersion;

    /**
     * @var string|null
     */
    private $currentVersion;

    /**
     * @var string|null
     */
    private $version;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $customerID;

    /**
     * @var string|null
     */
    private $createdBy;

    /**
     * @var string|null
     */
    private $createdAt;

    /**
     * @var string|null
     */
    private $lastUpdatedBy;

    /**
     * @var string|null
     */
    private $lastUpdatedAt;

    /**
     * @var array
     */
    private $linkedServiceInstances = [];

    /**
     * @var AccessIntents|null
     */
    private $accessIntents;

    /**
     * @var PlacementIntents|null
     */
    private $placementIntents;

    /**
     * @var array
     */
    private $deploymentLocations = [];

    /**
     * Returns Id.
     * Id of the service profile.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Id of the service profile.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     * Name for a service profile.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Name for a service profile.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Service Name.
     * Service being deployed.
     */
    public function getServiceName(): ?string
    {
        return $this->serviceName;
    }

    /**
     * Sets Service Name.
     * Service being deployed.
     *
     * @maps serviceName
     */
    public function setServiceName(?string $serviceName): void
    {
        $this->serviceName = $serviceName;
    }

    /**
     * Returns Service Version.
     * Service version being deployed.
     */
    public function getServiceVersion(): ?string
    {
        return $this->serviceVersion;
    }

    /**
     * Sets Service Version.
     * Service version being deployed.
     *
     * @maps serviceVersion
     */
    public function setServiceVersion(?string $serviceVersion): void
    {
        $this->serviceVersion = $serviceVersion;
    }

    /**
     * Returns Current Version.
     */
    public function getCurrentVersion(): ?string
    {
        return $this->currentVersion;
    }

    /**
     * Sets Current Version.
     *
     * @maps currentVersion
     */
    public function setCurrentVersion(?string $currentVersion): void
    {
        $this->currentVersion = $currentVersion;
    }

    /**
     * Returns Version.
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     *
     * @maps version
     */
    public function setVersion(?string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns State.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     *
     * @maps state
     * @factory \VerizonLib\Models\ServicesProfileRegistrationStateEnum::checkValue
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Customer ID.
     * Id of particular customer.
     */
    public function getCustomerID(): ?string
    {
        return $this->customerID;
    }

    /**
     * Sets Customer ID.
     * Id of particular customer.
     *
     * @maps customerID
     */
    public function setCustomerID(?string $customerID): void
    {
        $this->customerID = $customerID;
    }

    /**
     * Returns Created By.
     */
    public function getCreatedBy(): ?string
    {
        return $this->createdBy;
    }

    /**
     * Sets Created By.
     *
     * @maps createdBy
     */
    public function setCreatedBy(?string $createdBy): void
    {
        $this->createdBy = $createdBy;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps createdAt
     */
    public function setCreatedAt(?string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Last Updated By.
     */
    public function getLastUpdatedBy(): ?string
    {
        return $this->lastUpdatedBy;
    }

    /**
     * Sets Last Updated By.
     *
     * @maps lastUpdatedBy
     */
    public function setLastUpdatedBy(?string $lastUpdatedBy): void
    {
        $this->lastUpdatedBy = $lastUpdatedBy;
    }

    /**
     * Returns Last Updated At.
     */
    public function getLastUpdatedAt(): ?string
    {
        return $this->lastUpdatedAt;
    }

    /**
     * Sets Last Updated At.
     *
     * @maps lastUpdatedAt
     */
    public function setLastUpdatedAt(?string $lastUpdatedAt): void
    {
        $this->lastUpdatedAt = $lastUpdatedAt;
    }

    /**
     * Returns Linked Service Instances.
     *
     * @return LinkedServiceInstance[]|null
     */
    public function getLinkedServiceInstances(): ?array
    {
        if (count($this->linkedServiceInstances) == 0) {
            return null;
        }
        return $this->linkedServiceInstances['value'];
    }

    /**
     * Sets Linked Service Instances.
     *
     * @maps linkedServiceInstances
     *
     * @param LinkedServiceInstance[]|null $linkedServiceInstances
     */
    public function setLinkedServiceInstances(?array $linkedServiceInstances): void
    {
        $this->linkedServiceInstances['value'] = $linkedServiceInstances;
    }

    /**
     * Unsets Linked Service Instances.
     */
    public function unsetLinkedServiceInstances(): void
    {
        $this->linkedServiceInstances = [];
    }

    /**
     * Returns Access Intents.
     */
    public function getAccessIntents(): ?AccessIntents
    {
        return $this->accessIntents;
    }

    /**
     * Sets Access Intents.
     *
     * @maps accessIntents
     */
    public function setAccessIntents(?AccessIntents $accessIntents): void
    {
        $this->accessIntents = $accessIntents;
    }

    /**
     * Returns Placement Intents.
     */
    public function getPlacementIntents(): ?PlacementIntents
    {
        return $this->placementIntents;
    }

    /**
     * Sets Placement Intents.
     *
     * @maps placementIntents
     */
    public function setPlacementIntents(?PlacementIntents $placementIntents): void
    {
        $this->placementIntents = $placementIntents;
    }

    /**
     * Returns Deployment Locations.
     *
     * @return DeploymentLocation[]|null
     */
    public function getDeploymentLocations(): ?array
    {
        if (count($this->deploymentLocations) == 0) {
            return null;
        }
        return $this->deploymentLocations['value'];
    }

    /**
     * Sets Deployment Locations.
     *
     * @maps deploymentLocations
     *
     * @param DeploymentLocation[]|null $deploymentLocations
     */
    public function setDeploymentLocations(?array $deploymentLocations): void
    {
        $this->deploymentLocations['value'] = $deploymentLocations;
    }

    /**
     * Unsets Deployment Locations.
     */
    public function unsetDeploymentLocations(): void
    {
        $this->deploymentLocations = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']                     = $this->id;
        }
        if (isset($this->name)) {
            $json['name']                   = $this->name;
        }
        if (isset($this->serviceName)) {
            $json['serviceName']            = $this->serviceName;
        }
        if (isset($this->serviceVersion)) {
            $json['serviceVersion']         = $this->serviceVersion;
        }
        if (isset($this->currentVersion)) {
            $json['currentVersion']         = $this->currentVersion;
        }
        if (isset($this->version)) {
            $json['version']                = $this->version;
        }
        if (isset($this->state)) {
            $json['state']                  = ServicesProfileRegistrationStateEnum::checkValue($this->state);
        }
        if (isset($this->customerID)) {
            $json['customerID']             = $this->customerID;
        }
        if (isset($this->createdBy)) {
            $json['createdBy']              = $this->createdBy;
        }
        if (isset($this->createdAt)) {
            $json['createdAt']              = $this->createdAt;
        }
        if (isset($this->lastUpdatedBy)) {
            $json['lastUpdatedBy']          = $this->lastUpdatedBy;
        }
        if (isset($this->lastUpdatedAt)) {
            $json['lastUpdatedAt']          = $this->lastUpdatedAt;
        }
        if (!empty($this->linkedServiceInstances)) {
            $json['linkedServiceInstances'] = $this->linkedServiceInstances['value'];
        }
        if (isset($this->accessIntents)) {
            $json['accessIntents']          = $this->accessIntents;
        }
        if (isset($this->placementIntents)) {
            $json['placementIntents']       = $this->placementIntents;
        }
        if (!empty($this->deploymentLocations)) {
            $json['deploymentLocations']    = $this->deploymentLocations['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
