<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Used to filter data by time period or number of devices.
 */
class HistorySearchRequest implements \JsonSerializable
{
    /**
     * @var HistorySearchFilter
     */
    private $filter;

    /**
     * @var int|null
     */
    private $limitNumber;

    /**
     * @var HistorySearchLimitTime|null
     */
    private $limitTime;

    /**
     * @var string|null
     */
    private $page;

    /**
     * @param HistorySearchFilter $filter
     */
    public function __construct(HistorySearchFilter $filter)
    {
        $this->filter = $filter;
    }

    /**
     * Returns Filter.
     * The selected device and attributes for which a request should retrieve data.
     */
    public function getFilter(): HistorySearchFilter
    {
        return $this->filter;
    }

    /**
     * Sets Filter.
     * The selected device and attributes for which a request should retrieve data.
     *
     * @required
     * @maps $filter
     */
    public function setFilter(HistorySearchFilter $filter): void
    {
        $this->filter = $filter;
    }

    /**
     * Returns Limit Number.
     * The maximum number of historical attributes to include in the response. If the request matches more
     * than this number of attributes, the response will contain an X-Next value in the header that can be
     * used as the page value in the next request to retrieve the next page of events.
     */
    public function getLimitNumber(): ?int
    {
        return $this->limitNumber;
    }

    /**
     * Sets Limit Number.
     * The maximum number of historical attributes to include in the response. If the request matches more
     * than this number of attributes, the response will contain an X-Next value in the header that can be
     * used as the page value in the next request to retrieve the next page of events.
     *
     * @maps $limitNumber
     */
    public function setLimitNumber(?int $limitNumber): void
    {
        $this->limitNumber = $limitNumber;
    }

    /**
     * Returns Limit Time.
     * The time period for which a request should retrieve data, beginning with the limitTime.startOn and
     * proceeding with the limitTime.duration.
     */
    public function getLimitTime(): ?HistorySearchLimitTime
    {
        return $this->limitTime;
    }

    /**
     * Sets Limit Time.
     * The time period for which a request should retrieve data, beginning with the limitTime.startOn and
     * proceeding with the limitTime.duration.
     *
     * @maps $limitTime
     */
    public function setLimitTime(?HistorySearchLimitTime $limitTime): void
    {
        $this->limitTime = $limitTime;
    }

    /**
     * Returns Page.
     * Page number for pagination purposes.
     */
    public function getPage(): ?string
    {
        return $this->page;
    }

    /**
     * Sets Page.
     * Page number for pagination purposes.
     *
     * @maps $page
     */
    public function setPage(?string $page): void
    {
        $this->page = $page;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['$filter']          = $this->filter;
        if (isset($this->limitNumber)) {
            $json['$limitNumber'] = $this->limitNumber;
        }
        if (isset($this->limitTime)) {
            $json['$limitTime']   = $this->limitTime;
        }
        if (isset($this->page)) {
            $json['$page']        = $this->page;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
