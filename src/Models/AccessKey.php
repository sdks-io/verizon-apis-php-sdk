<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class AccessKey implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accessId;

    /**
     * @var string|null
     */
    private $secretKey;

    /**
     * @var string|null
     */
    private $sessionToken;

    /**
     * Returns Access Id.
     * Access ID of the access key.
     */
    public function getAccessId(): ?string
    {
        return $this->accessId;
    }

    /**
     * Sets Access Id.
     * Access ID of the access key.
     *
     * @maps accessId
     */
    public function setAccessId(?string $accessId): void
    {
        $this->accessId = $accessId;
    }

    /**
     * Returns Secret Key.
     * Secret key of the access key.
     */
    public function getSecretKey(): ?string
    {
        return $this->secretKey;
    }

    /**
     * Sets Secret Key.
     * Secret key of the access key.
     *
     * @maps secretKey
     */
    public function setSecretKey(?string $secretKey): void
    {
        $this->secretKey = $secretKey;
    }

    /**
     * Returns Session Token.
     * Session token of the access key.
     */
    public function getSessionToken(): ?string
    {
        return $this->sessionToken;
    }

    /**
     * Sets Session Token.
     * Session token of the access key.
     *
     * @maps sessionToken
     */
    public function setSessionToken(?string $sessionToken): void
    {
        $this->sessionToken = $sessionToken;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accessId)) {
            $json['accessId']     = $this->accessId;
        }
        if (isset($this->secretKey)) {
            $json['secretKey']    = $this->secretKey;
        }
        if (isset($this->sessionToken)) {
            $json['sessionToken'] = $this->sessionToken;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
