<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Information about the resource requirements and service characteristics of an edge application. The
 * `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The
 * `maxLatencyMs` value must be submitted in multiples of 5. Does not include serviceProfileId
 */
class ResourcesServiceProfile implements \JsonSerializable
{
    /**
     * @var string
     */
    private $clientType;

    /**
     * @var string|null
     */
    private $ecspFilter;

    /**
     * @var string|null
     */
    private $clientSchedule;

    /**
     * @var string|null
     */
    private $clientServiceArea;

    /**
     * @var NetworkResourcesType|null
     */
    private $networkResources;

    /**
     * @var ComputeResourcesType|null
     */
    private $computeResources;

    /**
     * @var MECPlatformsAdditionalSupportInfo|null
     */
    private $properties;

    /**
     * @param string $clientType
     */
    public function __construct(string $clientType)
    {
        $this->clientType = $clientType;
    }

    /**
     * Returns Client Type.
     * The category of application client.
     */
    public function getClientType(): string
    {
        return $this->clientType;
    }

    /**
     * Sets Client Type.
     * The category of application client.
     *
     * @required
     * @maps clientType
     * @factory \VerizonLib\Models\ClientTypeEnum::checkValue
     */
    public function setClientType(string $clientType): void
    {
        $this->clientType = $clientType;
    }

    /**
     * Returns Ecsp Filter.
     * Identity of the preferred Edge Computing Service Provider.
     */
    public function getEcspFilter(): ?string
    {
        return $this->ecspFilter;
    }

    /**
     * Sets Ecsp Filter.
     * Identity of the preferred Edge Computing Service Provider.
     *
     * @maps ecspFilter
     */
    public function setEcspFilter(?string $ecspFilter): void
    {
        $this->ecspFilter = $ecspFilter;
    }

    /**
     * Returns Client Schedule.
     * The expected operation schedule of the application client (e.g. time windows).
     */
    public function getClientSchedule(): ?string
    {
        return $this->clientSchedule;
    }

    /**
     * Sets Client Schedule.
     * The expected operation schedule of the application client (e.g. time windows).
     *
     * @maps clientSchedule
     */
    public function setClientSchedule(?string $clientSchedule): void
    {
        $this->clientSchedule = $clientSchedule;
    }

    /**
     * Returns Client Service Area.
     * The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.
     */
    public function getClientServiceArea(): ?string
    {
        return $this->clientServiceArea;
    }

    /**
     * Sets Client Service Area.
     * The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.
     *
     * @maps clientServiceArea
     */
    public function setClientServiceArea(?string $clientServiceArea): void
    {
        $this->clientServiceArea = $clientServiceArea;
    }

    /**
     * Returns Network Resources.
     * Network resources of a service profile.
     */
    public function getNetworkResources(): ?NetworkResourcesType
    {
        return $this->networkResources;
    }

    /**
     * Sets Network Resources.
     * Network resources of a service profile.
     *
     * @maps networkResources
     */
    public function setNetworkResources(?NetworkResourcesType $networkResources): void
    {
        $this->networkResources = $networkResources;
    }

    /**
     * Returns Compute Resources.
     * Compute resources of a service profile.
     */
    public function getComputeResources(): ?ComputeResourcesType
    {
        return $this->computeResources;
    }

    /**
     * Sets Compute Resources.
     * Compute resources of a service profile.
     *
     * @maps computeResources
     */
    public function setComputeResources(?ComputeResourcesType $computeResources): void
    {
        $this->computeResources = $computeResources;
    }

    /**
     * Returns Properties.
     * Additional service support information for the MEC platform.
     */
    public function getProperties(): ?MECPlatformsAdditionalSupportInfo
    {
        return $this->properties;
    }

    /**
     * Sets Properties.
     * Additional service support information for the MEC platform.
     *
     * @maps properties
     */
    public function setProperties(?MECPlatformsAdditionalSupportInfo $properties): void
    {
        $this->properties = $properties;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['clientType']            = ClientTypeEnum::checkValue($this->clientType);
        if (isset($this->ecspFilter)) {
            $json['ecspFilter']        = $this->ecspFilter;
        }
        if (isset($this->clientSchedule)) {
            $json['clientSchedule']    = $this->clientSchedule;
        }
        if (isset($this->clientServiceArea)) {
            $json['clientServiceArea'] = $this->clientServiceArea;
        }
        if (isset($this->networkResources)) {
            $json['networkResources']  = $this->networkResources;
        }
        if (isset($this->computeResources)) {
            $json['computeResources']  = $this->computeResources;
        }
        if (isset($this->properties)) {
            $json['properties']        = $this->properties;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
