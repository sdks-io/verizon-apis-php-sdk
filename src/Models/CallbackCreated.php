<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class CallbackCreated implements \JsonSerializable
{
    /**
     * @var string
     */
    private $aname;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string|null
     */
    private $url;

    /**
     * @param string $aname
     * @param string $name
     */
    public function __construct(string $aname, string $name)
    {
        $this->aname = $aname;
        $this->name = $name;
    }

    /**
     * Returns Aname.
     * The billing account number for which callback messages will be sent.
     */
    public function getAname(): string
    {
        return $this->aname;
    }

    /**
     * Sets Aname.
     * The billing account number for which callback messages will be sent.
     *
     * @required
     * @maps aname
     */
    public function setAname(string $aname): void
    {
        $this->aname = $aname;
    }

    /**
     * Returns Name.
     * The name of the callback service, which identifies the type and format of messages that will be sent
     * to the registered URL.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * The name of the callback service, which identifies the type and format of messages that will be sent
     * to the registered URL.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Url.
     * The address of the callback listening service where the ThingSpace Platform will send callback
     * messages for the service type.
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     * The address of the callback listening service where the ThingSpace Platform will send callback
     * messages for the service type.
     *
     * @maps url
     */
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['aname']   = $this->aname;
        $json['name']    = $this->name;
        if (isset($this->url)) {
            $json['url'] = $this->url;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
