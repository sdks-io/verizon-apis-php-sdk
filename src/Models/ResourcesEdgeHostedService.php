<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Edge hosted service represented by Service Endpoint definition.
 */
class ResourcesEdgeHostedService implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $ern;

    /**
     * @var ResourcesServiceEndpoint|null
     */
    private $serviceEndpoint;

    /**
     * @var string|null
     */
    private $applicationServerProviderId;

    /**
     * @var string|null
     */
    private $applicationId;

    /**
     * @var string|null
     */
    private $serviceDescription;

    /**
     * Returns Ern.
     * Edge Resource Name. A string identifier for a set of edge resources.
     */
    public function getErn(): ?string
    {
        return $this->ern;
    }

    /**
     * Sets Ern.
     * Edge Resource Name. A string identifier for a set of edge resources.
     *
     * @maps ern
     */
    public function setErn(?string $ern): void
    {
        $this->ern = $ern;
    }

    /**
     * Returns Service Endpoint.
     * Service Endpoint path, address, and port.
     */
    public function getServiceEndpoint(): ?ResourcesServiceEndpoint
    {
        return $this->serviceEndpoint;
    }

    /**
     * Sets Service Endpoint.
     * Service Endpoint path, address, and port.
     *
     * @maps serviceEndpoint
     */
    public function setServiceEndpoint(?ResourcesServiceEndpoint $serviceEndpoint): void
    {
        $this->serviceEndpoint = $serviceEndpoint;
    }

    /**
     * Returns Application Server Provider Id.
     * Unique ID representing the Edge Application Provider.
     */
    public function getApplicationServerProviderId(): ?string
    {
        return $this->applicationServerProviderId;
    }

    /**
     * Sets Application Server Provider Id.
     * Unique ID representing the Edge Application Provider.
     *
     * @maps applicationServerProviderId
     */
    public function setApplicationServerProviderId(?string $applicationServerProviderId): void
    {
        $this->applicationServerProviderId = $applicationServerProviderId;
    }

    /**
     * Returns Application Id.
     * Unique ID representing the Edge Application.
     */
    public function getApplicationId(): ?string
    {
        return $this->applicationId;
    }

    /**
     * Sets Application Id.
     * Unique ID representing the Edge Application.
     *
     * @maps applicationId
     */
    public function setApplicationId(?string $applicationId): void
    {
        $this->applicationId = $applicationId;
    }

    /**
     * Returns Service Description.
     */
    public function getServiceDescription(): ?string
    {
        return $this->serviceDescription;
    }

    /**
     * Sets Service Description.
     *
     * @maps serviceDescription
     */
    public function setServiceDescription(?string $serviceDescription): void
    {
        $this->serviceDescription = $serviceDescription;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->ern)) {
            $json['ern']                         = $this->ern;
        }
        if (isset($this->serviceEndpoint)) {
            $json['serviceEndpoint']             = $this->serviceEndpoint;
        }
        if (isset($this->applicationServerProviderId)) {
            $json['applicationServerProviderId'] = $this->applicationServerProviderId;
        }
        if (isset($this->applicationId)) {
            $json['applicationId']               = $this->applicationId;
        }
        if (isset($this->serviceDescription)) {
            $json['serviceDescription']          = $this->serviceDescription;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
