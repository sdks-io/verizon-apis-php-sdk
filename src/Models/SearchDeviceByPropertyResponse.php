<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * The device identifier and fields to match in the search.
 */
class SearchDeviceByPropertyResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $billingaccountid;

    /**
     * @var string|null
     */
    private $createdon;

    /**
     * @var string|null
     */
    private $eventretention;

    /**
     * @var Fields1|null
     */
    private $fields;

    /**
     * @var string|null
     */
    private $iccid;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $imei;

    /**
     * @var string|null
     */
    private $kind;

    /**
     * @var string|null
     */
    private $lastupdated;

    /**
     * @var string|null
     */
    private $providerid;

    /**
     * @var string|null
     */
    private $refid;

    /**
     * @var string|null
     */
    private $refidtype;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $version;

    /**
     * @var string|null
     */
    private $versionid;

    /**
     * Returns Billingaccountid.
     * Billing account ID of the resource.
     */
    public function getBillingaccountid(): ?string
    {
        return $this->billingaccountid;
    }

    /**
     * Sets Billingaccountid.
     * Billing account ID of the resource.
     *
     * @maps billingaccountid
     */
    public function setBillingaccountid(?string $billingaccountid): void
    {
        $this->billingaccountid = $billingaccountid;
    }

    /**
     * Returns Createdon.
     * The date the resource was created.
     */
    public function getCreatedon(): ?string
    {
        return $this->createdon;
    }

    /**
     * Sets Createdon.
     * The date the resource was created.
     *
     * @maps createdon
     */
    public function setCreatedon(?string $createdon): void
    {
        $this->createdon = $createdon;
    }

    /**
     * Returns Eventretention.
     */
    public function getEventretention(): ?string
    {
        return $this->eventretention;
    }

    /**
     * Sets Eventretention.
     *
     * @maps eventretention
     */
    public function setEventretention(?string $eventretention): void
    {
        $this->eventretention = $eventretention;
    }

    /**
     * Returns Fields.
     */
    public function getFields(): ?Fields1
    {
        return $this->fields;
    }

    /**
     * Sets Fields.
     *
     * @maps fields
     */
    public function setFields(?Fields1 $fields): void
    {
        $this->fields = $fields;
    }

    /**
     * Returns Iccid.
     * Cellular SIM card identifier.
     */
    public function getIccid(): ?string
    {
        return $this->iccid;
    }

    /**
     * Sets Iccid.
     * Cellular SIM card identifier.
     *
     * @maps iccid
     */
    public function setIccid(?string $iccid): void
    {
        $this->iccid = $iccid;
    }

    /**
     * Returns Id.
     * ThingSpace unique ID for the device that was added.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * ThingSpace unique ID for the device that was added.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Imei.
     * 4G hardware device identifier.
     */
    public function getImei(): ?string
    {
        return $this->imei;
    }

    /**
     * Sets Imei.
     * 4G hardware device identifier.
     *
     * @maps imei
     */
    public function setImei(?string $imei): void
    {
        $this->imei = $imei;
    }

    /**
     * Returns Kind.
     * Identifies the resource kind.
     */
    public function getKind(): ?string
    {
        return $this->kind;
    }

    /**
     * Sets Kind.
     * Identifies the resource kind.
     *
     * @maps kind
     */
    public function setKind(?string $kind): void
    {
        $this->kind = $kind;
    }

    /**
     * Returns Lastupdated.
     * The date the resource was last updated.
     */
    public function getLastupdated(): ?string
    {
        return $this->lastupdated;
    }

    /**
     * Sets Lastupdated.
     * The date the resource was last updated.
     *
     * @maps lastupdated
     */
    public function setLastupdated(?string $lastupdated): void
    {
        $this->lastupdated = $lastupdated;
    }

    /**
     * Returns Providerid.
     * The device’s service provider.
     */
    public function getProviderid(): ?string
    {
        return $this->providerid;
    }

    /**
     * Sets Providerid.
     * The device’s service provider.
     *
     * @maps providerid
     */
    public function setProviderid(?string $providerid): void
    {
        $this->providerid = $providerid;
    }

    /**
     * Returns Refid.
     * The value of the refidtype identifier.
     */
    public function getRefid(): ?string
    {
        return $this->refid;
    }

    /**
     * Sets Refid.
     * The value of the refidtype identifier.
     *
     * @maps refid
     */
    public function setRefid(?string $refid): void
    {
        $this->refid = $refid;
    }

    /**
     * Returns Refidtype.
     * The device identifier type used to refer to this device.
     */
    public function getRefidtype(): ?string
    {
        return $this->refidtype;
    }

    /**
     * Sets Refidtype.
     * The device identifier type used to refer to this device.
     *
     * @maps refidtype
     */
    public function setRefidtype(?string $refidtype): void
    {
        $this->refidtype = $refidtype;
    }

    /**
     * Returns State.
     * Service state of the device.
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     * Service state of the device.
     *
     * @maps state
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Version.
     * Version of the underlying schema resource.
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * Version of the underlying schema resource.
     *
     * @maps version
     */
    public function setVersion(?string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns Versionid.
     * The version of the resource.
     */
    public function getVersionid(): ?string
    {
        return $this->versionid;
    }

    /**
     * Sets Versionid.
     * The version of the resource.
     *
     * @maps versionid
     */
    public function setVersionid(?string $versionid): void
    {
        $this->versionid = $versionid;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->billingaccountid)) {
            $json['billingaccountid'] = $this->billingaccountid;
        }
        if (isset($this->createdon)) {
            $json['createdon']        = $this->createdon;
        }
        if (isset($this->eventretention)) {
            $json['eventretention']   = $this->eventretention;
        }
        if (isset($this->fields)) {
            $json['fields']           = $this->fields;
        }
        if (isset($this->iccid)) {
            $json['iccid']            = $this->iccid;
        }
        if (isset($this->id)) {
            $json['id']               = $this->id;
        }
        if (isset($this->imei)) {
            $json['imei']             = $this->imei;
        }
        if (isset($this->kind)) {
            $json['kind']             = $this->kind;
        }
        if (isset($this->lastupdated)) {
            $json['lastupdated']      = $this->lastupdated;
        }
        if (isset($this->providerid)) {
            $json['providerid']       = $this->providerid;
        }
        if (isset($this->refid)) {
            $json['refid']            = $this->refid;
        }
        if (isset($this->refidtype)) {
            $json['refidtype']        = $this->refidtype;
        }
        if (isset($this->state)) {
            $json['state']            = $this->state;
        }
        if (isset($this->version)) {
            $json['version']          = $this->version;
        }
        if (isset($this->versionid)) {
            $json['versionid']        = $this->versionid;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
