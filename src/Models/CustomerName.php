<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * The customer name to be used for line usage taxation.
 */
class CustomerName implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $title;

    /**
     * @var string
     */
    private $firstName;

    /**
     * @var string|null
     */
    private $middleName;

    /**
     * @var string
     */
    private $lastName;

    /**
     * @var string|null
     */
    private $suffix;

    /**
     * @param string $firstName
     * @param string $lastName
     */
    public function __construct(string $firstName, string $lastName)
    {
        $this->firstName = $firstName;
        $this->lastName = $lastName;
    }

    /**
     * Returns Title.
     * An optional title for the customer, such as “Mr.” or “Dr.”
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     * An optional title for the customer, such as “Mr.” or “Dr.”
     *
     * @maps title
     */
    public function setTitle(?string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns First Name.
     * The customer's first name.
     */
    public function getFirstName(): string
    {
        return $this->firstName;
    }

    /**
     * Sets First Name.
     * The customer's first name.
     *
     * @required
     * @maps firstName
     */
    public function setFirstName(string $firstName): void
    {
        $this->firstName = $firstName;
    }

    /**
     * Returns Middle Name.
     * The customer's middle name.
     */
    public function getMiddleName(): ?string
    {
        return $this->middleName;
    }

    /**
     * Sets Middle Name.
     * The customer's middle name.
     *
     * @maps middleName
     */
    public function setMiddleName(?string $middleName): void
    {
        $this->middleName = $middleName;
    }

    /**
     * Returns Last Name.
     * The customer's last name.
     */
    public function getLastName(): string
    {
        return $this->lastName;
    }

    /**
     * Sets Last Name.
     * The customer's last name.
     *
     * @required
     * @maps lastName
     */
    public function setLastName(string $lastName): void
    {
        $this->lastName = $lastName;
    }

    /**
     * Returns Suffix.
     * An optional suffix for the customer name, such as “Jr.” or “III.”
     */
    public function getSuffix(): ?string
    {
        return $this->suffix;
    }

    /**
     * Sets Suffix.
     * An optional suffix for the customer name, such as “Jr.” or “III.”
     *
     * @maps suffix
     */
    public function setSuffix(?string $suffix): void
    {
        $this->suffix = $suffix;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->title)) {
            $json['title']      = $this->title;
        }
        $json['firstName']      = $this->firstName;
        if (isset($this->middleName)) {
            $json['middleName'] = $this->middleName;
        }
        $json['lastName']       = $this->lastName;
        if (isset($this->suffix)) {
            $json['suffix']     = $this->suffix;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
