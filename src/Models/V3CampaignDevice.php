<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Campaign history.
 */
class V3CampaignDevice implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $totalDevice;

    /**
     * @var bool
     */
    private $hasMoreData;

    /**
     * @var string|null
     */
    private $lastSeenDeviceId;

    /**
     * @var int
     */
    private $maxPageSize;

    /**
     * @var V3DeviceStatus[]
     */
    private $deviceList;

    /**
     * @param bool $hasMoreData
     * @param int $maxPageSize
     * @param V3DeviceStatus[] $deviceList
     */
    public function __construct(bool $hasMoreData, int $maxPageSize, array $deviceList)
    {
        $this->hasMoreData = $hasMoreData;
        $this->maxPageSize = $maxPageSize;
        $this->deviceList = $deviceList;
    }

    /**
     * Returns Total Device.
     * Total device count.
     */
    public function getTotalDevice(): ?int
    {
        return $this->totalDevice;
    }

    /**
     * Sets Total Device.
     * Total device count.
     *
     * @maps totalDevice
     */
    public function setTotalDevice(?int $totalDevice): void
    {
        $this->totalDevice = $totalDevice;
    }

    /**
     * Returns Has More Data.
     * Has more report flag.
     */
    public function getHasMoreData(): bool
    {
        return $this->hasMoreData;
    }

    /**
     * Sets Has More Data.
     * Has more report flag.
     *
     * @required
     * @maps hasMoreData
     */
    public function setHasMoreData(bool $hasMoreData): void
    {
        $this->hasMoreData = $hasMoreData;
    }

    /**
     * Returns Last Seen Device Id.
     * Device identifier.
     */
    public function getLastSeenDeviceId(): ?string
    {
        return $this->lastSeenDeviceId;
    }

    /**
     * Sets Last Seen Device Id.
     * Device identifier.
     *
     * @maps lastSeenDeviceId
     */
    public function setLastSeenDeviceId(?string $lastSeenDeviceId): void
    {
        $this->lastSeenDeviceId = $lastSeenDeviceId;
    }

    /**
     * Returns Max Page Size.
     * Maximum page size.
     */
    public function getMaxPageSize(): int
    {
        return $this->maxPageSize;
    }

    /**
     * Sets Max Page Size.
     * Maximum page size.
     *
     * @required
     * @maps maxPageSize
     */
    public function setMaxPageSize(int $maxPageSize): void
    {
        $this->maxPageSize = $maxPageSize;
    }

    /**
     * Returns Device List.
     * List of devices with id in IMEI.
     *
     * @return V3DeviceStatus[]
     */
    public function getDeviceList(): array
    {
        return $this->deviceList;
    }

    /**
     * Sets Device List.
     * List of devices with id in IMEI.
     *
     * @required
     * @maps deviceList
     *
     * @param V3DeviceStatus[] $deviceList
     */
    public function setDeviceList(array $deviceList): void
    {
        $this->deviceList = $deviceList;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->totalDevice)) {
            $json['totalDevice']      = $this->totalDevice;
        }
        $json['hasMoreData']          = $this->hasMoreData;
        if (isset($this->lastSeenDeviceId)) {
            $json['lastSeenDeviceId'] = $this->lastSeenDeviceId;
        }
        $json['maxPageSize']          = $this->maxPageSize;
        $json['deviceList']           = $this->deviceList;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
