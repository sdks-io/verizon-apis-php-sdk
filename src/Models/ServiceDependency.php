<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Dependency of the service.
 */
class ServiceDependency implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $rank;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $serviceName;

    /**
     * @var string|null
     */
    private $version;

    /**
     * @var array
     */
    private $packageType = [];

    /**
     * Returns Rank.
     * The dependency rank.
     */
    public function getRank(): ?int
    {
        return $this->rank;
    }

    /**
     * Sets Rank.
     * The dependency rank.
     *
     * @maps rank
     */
    public function setRank(?int $rank): void
    {
        $this->rank = $rank;
    }

    /**
     * Returns Type.
     * Service Type e.g. Installation, Operations, Custom.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     * Service Type e.g. Installation, Operations, Custom.
     *
     * @maps type
     * @factory \VerizonLib\Models\ServiceTypeEnum::checkValue
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Service Name.
     * Name of the dependent service.
     */
    public function getServiceName(): ?string
    {
        return $this->serviceName;
    }

    /**
     * Sets Service Name.
     * Name of the dependent service.
     *
     * @maps serviceName
     */
    public function setServiceName(?string $serviceName): void
    {
        $this->serviceName = $serviceName;
    }

    /**
     * Returns Version.
     * Version of the service being used.
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * Version of the service being used.
     *
     * @maps version
     */
    public function setVersion(?string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns Package Type.
     * Deployment package type.
     */
    public function getPackageType(): ?string
    {
        if (count($this->packageType) == 0) {
            return null;
        }
        return $this->packageType['value'];
    }

    /**
     * Sets Package Type.
     * Deployment package type.
     *
     * @maps packageType
     * @factory \VerizonLib\Models\ServiceDependencyPackageTypeEnum::checkValue
     */
    public function setPackageType(?string $packageType): void
    {
        $this->packageType['value'] = $packageType;
    }

    /**
     * Unsets Package Type.
     * Deployment package type.
     */
    public function unsetPackageType(): void
    {
        $this->packageType = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->rank)) {
            $json['rank']        = $this->rank;
        }
        if (isset($this->type)) {
            $json['type']        = ServiceTypeEnum::checkValue($this->type);
        }
        if (isset($this->serviceName)) {
            $json['serviceName'] = $this->serviceName;
        }
        if (isset($this->version)) {
            $json['version']     = $this->version;
        }
        if (!empty($this->packageType)) {
            $json['packageType'] = ServiceDependencyPackageTypeEnum::checkValue($this->packageType['value']);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
