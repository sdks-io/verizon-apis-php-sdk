<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class ClusterVersionInfo implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $clusterId;

    /**
     * @var string|null
     */
    private $kubeVersion;

    /**
     * @var string|null
     */
    private $organizationId;

    /**
     * @var string|null
     */
    private $partnerId;

    /**
     * @var string|null
     */
    private $createdAt;

    /**
     * @var string|null
     */
    private $modifiedAt;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var int|null
     */
    private $behindLatestBy;

    /**
     * Returns Cluster Id.
     */
    public function getClusterId(): ?string
    {
        return $this->clusterId;
    }

    /**
     * Sets Cluster Id.
     *
     * @maps cluster_id
     */
    public function setClusterId(?string $clusterId): void
    {
        $this->clusterId = $clusterId;
    }

    /**
     * Returns Kube Version.
     */
    public function getKubeVersion(): ?string
    {
        return $this->kubeVersion;
    }

    /**
     * Sets Kube Version.
     *
     * @maps kube_version
     */
    public function setKubeVersion(?string $kubeVersion): void
    {
        $this->kubeVersion = $kubeVersion;
    }

    /**
     * Returns Organization Id.
     */
    public function getOrganizationId(): ?string
    {
        return $this->organizationId;
    }

    /**
     * Sets Organization Id.
     *
     * @maps organization_id
     */
    public function setOrganizationId(?string $organizationId): void
    {
        $this->organizationId = $organizationId;
    }

    /**
     * Returns Partner Id.
     */
    public function getPartnerId(): ?string
    {
        return $this->partnerId;
    }

    /**
     * Sets Partner Id.
     *
     * @maps partner_id
     */
    public function setPartnerId(?string $partnerId): void
    {
        $this->partnerId = $partnerId;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps created_at
     */
    public function setCreatedAt(?string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Modified At.
     */
    public function getModifiedAt(): ?string
    {
        return $this->modifiedAt;
    }

    /**
     * Sets Modified At.
     *
     * @maps modified_at
     */
    public function setModifiedAt(?string $modifiedAt): void
    {
        $this->modifiedAt = $modifiedAt;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Behind Latest By.
     */
    public function getBehindLatestBy(): ?int
    {
        return $this->behindLatestBy;
    }

    /**
     * Sets Behind Latest By.
     *
     * @maps behind_latest_by
     */
    public function setBehindLatestBy(?int $behindLatestBy): void
    {
        $this->behindLatestBy = $behindLatestBy;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->clusterId)) {
            $json['cluster_id']       = $this->clusterId;
        }
        if (isset($this->kubeVersion)) {
            $json['kube_version']     = $this->kubeVersion;
        }
        if (isset($this->organizationId)) {
            $json['organization_id']  = $this->organizationId;
        }
        if (isset($this->partnerId)) {
            $json['partner_id']       = $this->partnerId;
        }
        if (isset($this->createdAt)) {
            $json['created_at']       = $this->createdAt;
        }
        if (isset($this->modifiedAt)) {
            $json['modified_at']      = $this->modifiedAt;
        }
        if (isset($this->id)) {
            $json['id']               = $this->id;
        }
        if (isset($this->behindLatestBy)) {
            $json['behind_latest_by'] = $this->behindLatestBy;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
