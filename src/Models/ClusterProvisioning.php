<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

class ClusterProvisioning implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $provider;

    /**
     * @var AccessKey|null
     */
    private $accessKey;

    /**
     * @var Role|null
     */
    private $role;

    /**
     * Returns Provider.
     * Cloud provider.
     */
    public function getProvider(): ?string
    {
        return $this->provider;
    }

    /**
     * Sets Provider.
     * Cloud provider.
     *
     * @maps provider
     * @factory \VerizonLib\Models\ClusterProviderEnum::checkValue
     */
    public function setProvider(?string $provider): void
    {
        $this->provider = $provider;
    }

    /**
     * Returns Access Key.
     */
    public function getAccessKey(): ?AccessKey
    {
        return $this->accessKey;
    }

    /**
     * Sets Access Key.
     *
     * @maps accessKey
     */
    public function setAccessKey(?AccessKey $accessKey): void
    {
        $this->accessKey = $accessKey;
    }

    /**
     * Returns Role.
     * Role of the user calling API.
     */
    public function getRole(): ?Role
    {
        return $this->role;
    }

    /**
     * Sets Role.
     * Role of the user calling API.
     *
     * @maps role
     */
    public function setRole(?Role $role): void
    {
        $this->role = $role;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->provider)) {
            $json['provider']  = ClusterProviderEnum::checkValue($this->provider);
        }
        if (isset($this->accessKey)) {
            $json['accessKey'] = $this->accessKey;
        }
        if (isset($this->role)) {
            $json['role']      = $this->role;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
