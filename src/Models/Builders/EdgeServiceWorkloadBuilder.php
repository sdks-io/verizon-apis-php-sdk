<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\EdgeServiceRepository;
use VerizonLib\Models\EdgeServiceWorkload;
use VerizonLib\Models\ServiceLaunchHelmGitBranch;
use VerizonLib\Models\ServiceLaunchHelmGitTag;
use VerizonLib\Models\ServiceLaunchHelmRepo;
use VerizonLib\Models\ServiceLaunchHelmYamlGitTag;
use VerizonLib\Models\ServiceLaunchTerraformGitBranch;
use VerizonLib\Models\ServiceLaunchTerraformGitTag;
use VerizonLib\Models\ServiceLaunchYamlGitBranch;

/**
 * Builder for model EdgeServiceWorkload
 *
 * @see EdgeServiceWorkload
 */
class EdgeServiceWorkloadBuilder
{
    /**
     * @var EdgeServiceWorkload
     */
    private $instance;

    private function __construct(EdgeServiceWorkload $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new edge service workload Builder object.
     */
    public static function init(string $name): self
    {
        return new self(new EdgeServiceWorkload($name));
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets package type field.
     */
    public function packageType(?string $value): self
    {
        $this->instance->setPackageType($value);
        return $this;
    }

    /**
     * Unsets package type field.
     */
    public function unsetPackageType(): self
    {
        $this->instance->unsetPackageType();
        return $this;
    }

    /**
     * Sets upload type field.
     */
    public function uploadType(?string $value): self
    {
        $this->instance->setUploadType($value);
        return $this;
    }

    /**
     * Unsets upload type field.
     */
    public function unsetUploadType(): self
    {
        $this->instance->unsetUploadType();
        return $this;
    }

    /**
     * Sets repository type field.
     */
    public function repositoryType(?string $value): self
    {
        $this->instance->setRepositoryType($value);
        return $this;
    }

    /**
     * Unsets repository type field.
     */
    public function unsetRepositoryType(): self
    {
        $this->instance->unsetRepositoryType();
        return $this;
    }

    /**
     * Sets repository id field.
     */
    public function repositoryId(?string $value): self
    {
        $this->instance->setRepositoryId($value);
        return $this;
    }

    /**
     * Unsets repository id field.
     */
    public function unsetRepositoryId(): self
    {
        $this->instance->unsetRepositoryId();
        return $this;
    }

    /**
     * Sets repository field.
     */
    public function repository(?EdgeServiceRepository $value): self
    {
        $this->instance->setRepository($value);
        return $this;
    }

    /**
     * Sets files field.
     */
    public function files(?array $value): self
    {
        $this->instance->setFiles($value);
        return $this;
    }

    /**
     * Sets revision type field.
     */
    public function revisionType(?string $value): self
    {
        $this->instance->setRevisionType($value);
        return $this;
    }

    /**
     * Unsets revision type field.
     */
    public function unsetRevisionType(): self
    {
        $this->instance->unsetRevisionType();
        return $this;
    }

    /**
     * Sets helm git branch field.
     */
    public function helmGitBranch(?ServiceLaunchHelmGitBranch $value): self
    {
        $this->instance->setHelmGitBranch($value);
        return $this;
    }

    /**
     * Sets helm git tag field.
     */
    public function helmGitTag(?ServiceLaunchHelmGitTag $value): self
    {
        $this->instance->setHelmGitTag($value);
        return $this;
    }

    /**
     * Sets helm yaml git tag field.
     */
    public function helmYamlGitTag(?ServiceLaunchHelmYamlGitTag $value): self
    {
        $this->instance->setHelmYamlGitTag($value);
        return $this;
    }

    /**
     * Sets helm repo field.
     */
    public function helmRepo(?ServiceLaunchHelmRepo $value): self
    {
        $this->instance->setHelmRepo($value);
        return $this;
    }

    /**
     * Sets yaml git branch field.
     */
    public function yamlGitBranch(?ServiceLaunchYamlGitBranch $value): self
    {
        $this->instance->setYamlGitBranch($value);
        return $this;
    }

    /**
     * Sets terraform git branch field.
     */
    public function terraformGitBranch(?ServiceLaunchTerraformGitBranch $value): self
    {
        $this->instance->setTerraformGitBranch($value);
        return $this;
    }

    /**
     * Sets terraform git tag field.
     */
    public function terraformGitTag(?ServiceLaunchTerraformGitTag $value): self
    {
        $this->instance->setTerraformGitTag($value);
        return $this;
    }

    /**
     * Sets created date field.
     */
    public function createdDate(?\DateTime $value): self
    {
        $this->instance->setCreatedDate($value);
        return $this;
    }

    /**
     * Sets last modified dte field.
     */
    public function lastModifiedDte(?\DateTime $value): self
    {
        $this->instance->setLastModifiedDte($value);
        return $this;
    }

    /**
     * Sets created by field.
     */
    public function createdBy(?string $value): self
    {
        $this->instance->setCreatedBy($value);
        return $this;
    }

    /**
     * Sets updated by field.
     */
    public function updatedBy(?string $value): self
    {
        $this->instance->setUpdatedBy($value);
        return $this;
    }

    /**
     * Initializes a new edge service workload object.
     */
    public function build(): EdgeServiceWorkload
    {
        return CoreHelper::clone($this->instance);
    }
}
