<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\MismatchedDevice;

/**
 * Builder for model MismatchedDevice
 *
 * @see MismatchedDevice
 */
class MismatchedDeviceBuilder
{
    /**
     * @var MismatchedDevice
     */
    private $instance;

    private function __construct(MismatchedDevice $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new mismatched device Builder object.
     */
    public static function init(): self
    {
        return new self(new MismatchedDevice());
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets mdn field.
     */
    public function mdn(?string $value): self
    {
        $this->instance->setMdn($value);
        return $this;
    }

    /**
     * Sets activation date field.
     */
    public function activationDate(?string $value): self
    {
        $this->instance->setActivationDate($value);
        return $this;
    }

    /**
     * Sets iccid field.
     */
    public function iccid(?string $value): self
    {
        $this->instance->setIccid($value);
        return $this;
    }

    /**
     * Sets pre imei field.
     */
    public function preImei(?string $value): self
    {
        $this->instance->setPreImei($value);
        return $this;
    }

    /**
     * Sets post imei field.
     */
    public function postImei(?string $value): self
    {
        $this->instance->setPostImei($value);
        return $this;
    }

    /**
     * Sets sim ota date field.
     */
    public function simOtaDate(?string $value): self
    {
        $this->instance->setSimOtaDate($value);
        return $this;
    }

    /**
     * Initializes a new mismatched device object.
     */
    public function build(): MismatchedDevice
    {
        return CoreHelper::clone($this->instance);
    }
}
