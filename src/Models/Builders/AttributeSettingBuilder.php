<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\AttributeSetting;
use VerizonLib\Models\NumericalData;

/**
 * Builder for model AttributeSetting
 *
 * @see AttributeSetting
 */
class AttributeSettingBuilder
{
    /**
     * @var AttributeSetting
     */
    private $instance;

    private function __construct(AttributeSetting $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new attribute setting Builder object.
     */
    public static function init(): self
    {
        return new self(new AttributeSetting());
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets value field.
     */
    public function value(?string $value): self
    {
        $this->instance->setValue($value);
        return $this;
    }

    /**
     * Sets created on field.
     */
    public function createdOn(?\DateTime $value): self
    {
        $this->instance->setCreatedOn($value);
        return $this;
    }

    /**
     * Sets is observable field.
     */
    public function isObservable(?bool $value): self
    {
        $this->instance->setIsObservable($value);
        return $this;
    }

    /**
     * Sets is observing field.
     */
    public function isObserving(?bool $value): self
    {
        $this->instance->setIsObserving($value);
        return $this;
    }

    /**
     * Sets frequency field.
     */
    public function frequency(?NumericalData $value): self
    {
        $this->instance->setFrequency($value);
        return $this;
    }

    /**
     * Initializes a new attribute setting object.
     */
    public function build(): AttributeSetting
    {
        return CoreHelper::clone($this->instance);
    }
}
