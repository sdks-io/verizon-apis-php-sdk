<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\FirmwareUpgrade;

/**
 * Builder for model FirmwareUpgrade
 *
 * @see FirmwareUpgrade
 */
class FirmwareUpgradeBuilder
{
    /**
     * @var FirmwareUpgrade
     */
    private $instance;

    private function __construct(FirmwareUpgrade $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new firmware upgrade Builder object.
     */
    public static function init(): self
    {
        return new self(new FirmwareUpgrade());
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets firmware name field.
     */
    public function firmwareName(?string $value): self
    {
        $this->instance->setFirmwareName($value);
        return $this;
    }

    /**
     * Sets firmware to field.
     */
    public function firmwareTo(?string $value): self
    {
        $this->instance->setFirmwareTo($value);
        return $this;
    }

    /**
     * Sets start date field.
     */
    public function startDate(?string $value): self
    {
        $this->instance->setStartDate($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets device list field.
     */
    public function deviceList(?array $value): self
    {
        $this->instance->setDeviceList($value);
        return $this;
    }

    /**
     * Initializes a new firmware upgrade object.
     */
    public function build(): FirmwareUpgrade
    {
        return CoreHelper::clone($this->instance);
    }
}
