<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\CustomFieldsUpdateRequest;

/**
 * Builder for model CustomFieldsUpdateRequest
 *
 * @see CustomFieldsUpdateRequest
 */
class CustomFieldsUpdateRequestBuilder
{
    /**
     * @var CustomFieldsUpdateRequest
     */
    private $instance;

    private function __construct(CustomFieldsUpdateRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new custom fields update request Builder object.
     */
    public static function init(): self
    {
        return new self(new CustomFieldsUpdateRequest());
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets custom fields field.
     */
    public function customFields(?array $value): self
    {
        $this->instance->setCustomFields($value);
        return $this;
    }

    /**
     * Sets custom fields to update field.
     */
    public function customFieldsToUpdate(?array $value): self
    {
        $this->instance->setCustomFieldsToUpdate($value);
        return $this;
    }

    /**
     * Sets devices field.
     */
    public function devices(?array $value): self
    {
        $this->instance->setDevices($value);
        return $this;
    }

    /**
     * Sets group name field.
     */
    public function groupName(?string $value): self
    {
        $this->instance->setGroupName($value);
        return $this;
    }

    /**
     * Sets service plan field.
     */
    public function servicePlan(?string $value): self
    {
        $this->instance->setServicePlan($value);
        return $this;
    }

    /**
     * Initializes a new custom fields update request object.
     */
    public function build(): CustomFieldsUpdateRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
