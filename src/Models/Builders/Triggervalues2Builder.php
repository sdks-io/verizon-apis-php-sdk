<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\Triggervalues2;

/**
 * Builder for model Triggervalues2
 *
 * @see Triggervalues2
 */
class Triggervalues2Builder
{
    /**
     * @var Triggervalues2
     */
    private $instance;

    private function __construct(Triggervalues2 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new triggervalues 2 Builder object.
     */
    public static function init(): self
    {
        return new self(new Triggervalues2());
    }

    /**
     * Sets trigger id field.
     */
    public function triggerId(?string $value): self
    {
        $this->instance->setTriggerId($value);
        return $this;
    }

    /**
     * Sets trigger name field.
     */
    public function triggerName(?string $value): self
    {
        $this->instance->setTriggerName($value);
        return $this;
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets organization name field.
     */
    public function organizationName(?string $value): self
    {
        $this->instance->setOrganizationName($value);
        return $this;
    }

    /**
     * Sets trigger category field.
     */
    public function triggerCategory(?string $value): self
    {
        $this->instance->setTriggerCategory($value);
        return $this;
    }

    /**
     * Sets promo alerts field.
     */
    public function promoAlerts(?array $value): self
    {
        $this->instance->setPromoAlerts($value);
        return $this;
    }

    /**
     * Sets active field.
     */
    public function active(?bool $value): self
    {
        $this->instance->setActive($value);
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?\DateTime $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Sets modified at field.
     */
    public function modifiedAt(?\DateTime $value): self
    {
        $this->instance->setModifiedAt($value);
        return $this;
    }

    /**
     * Initializes a new triggervalues 2 object.
     */
    public function build(): Triggervalues2
    {
        return CoreHelper::clone($this->instance);
    }
}
