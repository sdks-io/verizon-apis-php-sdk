<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\MetadataLabel;

/**
 * Builder for model MetadataLabel
 *
 * @see MetadataLabel
 */
class MetadataLabelBuilder
{
    /**
     * @var MetadataLabel
     */
    private $instance;

    private function __construct(MetadataLabel $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new metadata label Builder object.
     */
    public static function init(): self
    {
        return new self(new MetadataLabel());
    }

    /**
     * Sets alpha rafay io cluster name field.
     */
    public function alphaRafayIoClusterName(?string $value): self
    {
        $this->instance->setAlphaRafayIoClusterName($value);
        return $this;
    }

    /**
     * Sets alpha rafay io instance id field.
     */
    public function alphaRafayIoInstanceId(?string $value): self
    {
        $this->instance->setAlphaRafayIoInstanceId($value);
        return $this;
    }

    /**
     * Sets alpha rafay io nodegroup name field.
     */
    public function alphaRafayIoNodegroupName(?string $value): self
    {
        $this->instance->setAlphaRafayIoNodegroupName($value);
        return $this;
    }

    /**
     * Sets beta kubernetes io arch field.
     */
    public function betaKubernetesIoArch(?string $value): self
    {
        $this->instance->setBetaKubernetesIoArch($value);
        return $this;
    }

    /**
     * Sets beta kubernetes io instance type field.
     */
    public function betaKubernetesIoInstanceType(?string $value): self
    {
        $this->instance->setBetaKubernetesIoInstanceType($value);
        return $this;
    }

    /**
     * Sets beta kubernetes io os field.
     */
    public function betaKubernetesIoOs(?string $value): self
    {
        $this->instance->setBetaKubernetesIoOs($value);
        return $this;
    }

    /**
     * Sets failure domain beta kubernetes io region field.
     */
    public function failureDomainBetaKubernetesIoRegion(?string $value): self
    {
        $this->instance->setFailureDomainBetaKubernetesIoRegion($value);
        return $this;
    }

    /**
     * Sets failure domain beta kubernetes io zone field.
     */
    public function failureDomainBetaKubernetesIoZone(?string $value): self
    {
        $this->instance->setFailureDomainBetaKubernetesIoZone($value);
        return $this;
    }

    /**
     * Sets kubernetes io arch field.
     */
    public function kubernetesIoArch(?string $value): self
    {
        $this->instance->setKubernetesIoArch($value);
        return $this;
    }

    /**
     * Sets kubernetes io hostname field.
     */
    public function kubernetesIoHostname(?string $value): self
    {
        $this->instance->setKubernetesIoHostname($value);
        return $this;
    }

    /**
     * Sets kubernetes io os field.
     */
    public function kubernetesIoOs(?string $value): self
    {
        $this->instance->setKubernetesIoOs($value);
        return $this;
    }

    /**
     * Sets node lifecycle field.
     */
    public function nodeLifecycle(?string $value): self
    {
        $this->instance->setNodeLifecycle($value);
        return $this;
    }

    /**
     * Sets node kubernetes io instance type field.
     */
    public function nodeKubernetesIoInstanceType(?string $value): self
    {
        $this->instance->setNodeKubernetesIoInstanceType($value);
        return $this;
    }

    /**
     * Sets topology kubernetes io region field.
     */
    public function topologyKubernetesIoRegion(?string $value): self
    {
        $this->instance->setTopologyKubernetesIoRegion($value);
        return $this;
    }

    /**
     * Sets topology kubernetes io zone field.
     */
    public function topologyKubernetesIoZone(?string $value): self
    {
        $this->instance->setTopologyKubernetesIoZone($value);
        return $this;
    }

    /**
     * Initializes a new metadata label object.
     */
    public function build(): MetadataLabel
    {
        return CoreHelper::clone($this->instance);
    }
}
