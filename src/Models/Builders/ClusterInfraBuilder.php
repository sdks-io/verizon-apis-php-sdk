<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\Cluster;
use VerizonLib\Models\ClusterInfra;
use VerizonLib\Models\ClusterInfraProvision;
use VerizonLib\Models\ClusterProviderParams;
use VerizonLib\Models\ClusterVersionInfo;
use VerizonLib\Models\Metro;
use VerizonLib\Models\StorageClassMap;

/**
 * Builder for model ClusterInfra
 *
 * @see ClusterInfra
 */
class ClusterInfraBuilder
{
    /**
     * @var ClusterInfra
     */
    private $instance;

    private function __construct(ClusterInfra $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new cluster infra Builder object.
     */
    public static function init(): self
    {
        return new self(new ClusterInfra());
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?string $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Sets modified at field.
     */
    public function modifiedAt(?string $value): self
    {
        $this->instance->setModifiedAt($value);
        return $this;
    }

    /**
     * Sets organization id field.
     */
    public function organizationId(?string $value): self
    {
        $this->instance->setOrganizationId($value);
        return $this;
    }

    /**
     * Sets partner id field.
     */
    public function partnerId(?string $value): self
    {
        $this->instance->setPartnerId($value);
        return $this;
    }

    /**
     * Sets country field.
     */
    public function country(?string $value): self
    {
        $this->instance->setCountry($value);
        return $this;
    }

    /**
     * Sets city field.
     */
    public function city(?string $value): self
    {
        $this->instance->setCity($value);
        return $this;
    }

    /**
     * Sets latitude field.
     */
    public function latitude(?string $value): self
    {
        $this->instance->setLatitude($value);
        return $this;
    }

    /**
     * Sets longitude field.
     */
    public function longitude(?string $value): self
    {
        $this->instance->setLongitude($value);
        return $this;
    }

    /**
     * Sets cluster id field.
     */
    public function clusterId(?string $value): self
    {
        $this->instance->setClusterId($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets cert field.
     */
    public function cert(?string $value): self
    {
        $this->instance->setCert($value);
        return $this;
    }

    /**
     * Sets passphrase field.
     */
    public function passphrase(?string $value): self
    {
        $this->instance->setPassphrase($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets cname field.
     */
    public function cname(?string $value): self
    {
        $this->instance->setCname($value);
        return $this;
    }

    /**
     * Sets arecord field.
     */
    public function arecord(?string $value): self
    {
        $this->instance->setArecord($value);
        return $this;
    }

    /**
     * Sets base ratio field.
     */
    public function baseRatio(?float $value): self
    {
        $this->instance->setBaseRatio($value);
        return $this;
    }

    /**
     * Sets ha enabled field.
     */
    public function haEnabled(?bool $value): self
    {
        $this->instance->setHaEnabled($value);
        return $this;
    }

    /**
     * Sets display name field.
     */
    public function displayName(?string $value): self
    {
        $this->instance->setDisplayName($value);
        return $this;
    }

    /**
     * Sets upgrade status field.
     */
    public function upgradeStatus(?string $value): self
    {
        $this->instance->setUpgradeStatus($value);
        return $this;
    }

    /**
     * Sets provider id field.
     */
    public function providerId(?string $value): self
    {
        $this->instance->setProviderId($value);
        return $this;
    }

    /**
     * Sets auto create field.
     */
    public function autoCreate(?bool $value): self
    {
        $this->instance->setAutoCreate($value);
        return $this;
    }

    /**
     * Sets auto approve nodes field.
     */
    public function autoApproveNodes(?bool $value): self
    {
        $this->instance->setAutoApproveNodes($value);
        return $this;
    }

    /**
     * Sets provision id field.
     */
    public function provisionId(?string $value): self
    {
        $this->instance->setProvisionId($value);
        return $this;
    }

    /**
     * Sets is monitor enabled field.
     */
    public function isMonitorEnabled(?bool $value): self
    {
        $this->instance->setIsMonitorEnabled($value);
        return $this;
    }

    /**
     * Sets health field.
     */
    public function health(?int $value): self
    {
        $this->instance->setHealth($value);
        return $this;
    }

    /**
     * Sets health status modified at field.
     */
    public function healthStatusModifiedAt(?string $value): self
    {
        $this->instance->setHealthStatusModifiedAt($value);
        return $this;
    }

    /**
     * Sets manufacturer field.
     */
    public function manufacturer(?string $value): self
    {
        $this->instance->setManufacturer($value);
        return $this;
    }

    /**
     * Sets cluster type field.
     */
    public function clusterType(?string $value): self
    {
        $this->instance->setClusterType($value);
        return $this;
    }

    /**
     * Sets cluster blueprint field.
     */
    public function clusterBlueprint(?string $value): self
    {
        $this->instance->setClusterBlueprint($value);
        return $this;
    }

    /**
     * Sets gimage used field.
     */
    public function gimageUsed(?string $value): self
    {
        $this->instance->setGimageUsed($value);
        return $this;
    }

    /**
     * Sets reason field.
     */
    public function reason(?string $value): self
    {
        $this->instance->setReason($value);
        return $this;
    }

    /**
     * Sets is master dedicated field.
     */
    public function isMasterDedicated(?bool $value): self
    {
        $this->instance->setIsMasterDedicated($value);
        return $this;
    }

    /**
     * Sets project id field.
     */
    public function projectId(?string $value): self
    {
        $this->instance->setProjectId($value);
        return $this;
    }

    /**
     * Sets provision os field.
     */
    public function provisionOs(?string $value): self
    {
        $this->instance->setProvisionOs($value);
        return $this;
    }

    /**
     * Sets default storage class field.
     */
    public function defaultStorageClass(?string $value): self
    {
        $this->instance->setDefaultStorageClass($value);
        return $this;
    }

    /**
     * Sets storage class map field.
     */
    public function storageClassMap(?StorageClassMap $value): self
    {
        $this->instance->setStorageClassMap($value);
        return $this;
    }

    /**
     * Sets cni provider field.
     */
    public function cniProvider(?string $value): self
    {
        $this->instance->setCniProvider($value);
        return $this;
    }

    /**
     * Sets provision k 8 s field.
     */
    public function provisionK8s(?string $value): self
    {
        $this->instance->setProvisionK8s($value);
        return $this;
    }

    /**
     * Sets etcd version field.
     */
    public function etcdVersion(?string $value): self
    {
        $this->instance->setEtcdVersion($value);
        return $this;
    }

    /**
     * Sets consul version field.
     */
    public function consulVersion(?string $value): self
    {
        $this->instance->setConsulVersion($value);
        return $this;
    }

    /**
     * Sets cluster blueprint version field.
     */
    public function clusterBlueprintVersion(?string $value): self
    {
        $this->instance->setClusterBlueprintVersion($value);
        return $this;
    }

    /**
     * Sets upgrade protection field.
     */
    public function upgradeProtection(?bool $value): self
    {
        $this->instance->setUpgradeProtection($value);
        return $this;
    }

    /**
     * Sets provision field.
     */
    public function provision(?ClusterInfraProvision $value): self
    {
        $this->instance->setProvision($value);
        return $this;
    }

    /**
     * Sets metro field.
     */
    public function metro(?Metro $value): self
    {
        $this->instance->setMetro($value);
        return $this;
    }

    /**
     * Sets nodes field.
     */
    public function nodes(?array $value): self
    {
        $this->instance->setNodes($value);
        return $this;
    }

    /**
     * Sets cluster provider params field.
     */
    public function clusterProviderParams(?ClusterProviderParams $value): self
    {
        $this->instance->setClusterProviderParams($value);
        return $this;
    }

    /**
     * Sets nodegroups field.
     */
    public function nodegroups(?array $value): self
    {
        $this->instance->setNodegroups($value);
        return $this;
    }

    /**
     * Sets cluster version info field.
     */
    public function clusterVersionInfo(?ClusterVersionInfo $value): self
    {
        $this->instance->setClusterVersionInfo($value);
        return $this;
    }

    /**
     * Sets projects field.
     */
    public function projects(?array $value): self
    {
        $this->instance->setProjects($value);
        return $this;
    }

    /**
     * Sets cluster field.
     */
    public function cluster(?Cluster $value): self
    {
        $this->instance->setCluster($value);
        return $this;
    }

    /**
     * Initializes a new cluster infra object.
     */
    public function build(): ClusterInfra
    {
        return CoreHelper::clone($this->instance);
    }
}
