<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\AdvanceConfiguration;

/**
 * Builder for model AdvanceConfiguration
 *
 * @see AdvanceConfiguration
 */
class AdvanceConfigurationBuilder
{
    /**
     * @var AdvanceConfiguration
     */
    private $instance;

    private function __construct(AdvanceConfiguration $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new advance configuration Builder object.
     */
    public static function init(): self
    {
        return new self(new AdvanceConfiguration());
    }

    /**
     * Sets service role arn field.
     */
    public function serviceRoleArn(?string $value): self
    {
        $this->instance->setServiceRoleArn($value);
        return $this;
    }

    /**
     * Sets service role permission boundary field.
     */
    public function serviceRolePermissionBoundary(?string $value): self
    {
        $this->instance->setServiceRolePermissionBoundary($value);
        return $this;
    }

    /**
     * Sets enable proxy field.
     */
    public function enableProxy(?bool $value): self
    {
        $this->instance->setEnableProxy($value);
        return $this;
    }

    /**
     * Sets http proxy field.
     */
    public function httpProxy(?string $value): self
    {
        $this->instance->setHttpProxy($value);
        return $this;
    }

    /**
     * Sets https proxy field.
     */
    public function httpsProxy(?string $value): self
    {
        $this->instance->setHttpsProxy($value);
        return $this;
    }

    /**
     * Sets no proxy field.
     */
    public function noProxy(?string $value): self
    {
        $this->instance->setNoProxy($value);
        return $this;
    }

    /**
     * Sets proxy root ca field.
     */
    public function proxyRootCA(?string $value): self
    {
        $this->instance->setProxyRootCA($value);
        return $this;
    }

    /**
     * Sets enable tls traffic field.
     */
    public function enableTlsTraffic(?bool $value): self
    {
        $this->instance->setEnableTlsTraffic($value);
        return $this;
    }

    /**
     * Sets enable auto approve field.
     */
    public function enableAutoApprove(?bool $value): self
    {
        $this->instance->setEnableAutoApprove($value);
        return $this;
    }

    /**
     * Sets enable multi master field.
     */
    public function enableMultiMaster(?bool $value): self
    {
        $this->instance->setEnableMultiMaster($value);
        return $this;
    }

    /**
     * Sets enable dedicated master field.
     */
    public function enableDedicatedMaster(?bool $value): self
    {
        $this->instance->setEnableDedicatedMaster($value);
        return $this;
    }

    /**
     * Initializes a new advance configuration object.
     */
    public function build(): AdvanceConfiguration
    {
        return CoreHelper::clone($this->instance);
    }
}
