<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\UsageHistory;

/**
 * Builder for model UsageHistory
 *
 * @see UsageHistory
 */
class UsageHistoryBuilder
{
    /**
     * @var UsageHistory
     */
    private $instance;

    private function __construct(UsageHistory $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new usage history Builder object.
     */
    public static function init(): self
    {
        return new self(new UsageHistory());
    }

    /**
     * Sets bytes used field.
     */
    public function bytesUsed(?int $value): self
    {
        $this->instance->setBytesUsed($value);
        return $this;
    }

    /**
     * Sets serviceplan field.
     */
    public function serviceplan(?string $value): self
    {
        $this->instance->setServiceplan($value);
        return $this;
    }

    /**
     * Sets sms used field.
     */
    public function smsUsed(?int $value): self
    {
        $this->instance->setSmsUsed($value);
        return $this;
    }

    /**
     * Sets mo sms field.
     */
    public function moSMS(?int $value): self
    {
        $this->instance->setMoSMS($value);
        return $this;
    }

    /**
     * Sets mt sms field.
     */
    public function mtSMS(?int $value): self
    {
        $this->instance->setMtSMS($value);
        return $this;
    }

    /**
     * Sets source field.
     */
    public function source(?string $value): self
    {
        $this->instance->setSource($value);
        return $this;
    }

    /**
     * Sets event date time field.
     */
    public function eventDateTime(?\DateTime $value): self
    {
        $this->instance->setEventDateTime($value);
        return $this;
    }

    /**
     * Initializes a new usage history object.
     */
    public function build(): UsageHistory
    {
        return CoreHelper::clone($this->instance);
    }
}
