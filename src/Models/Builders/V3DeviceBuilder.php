<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\V3Device;

/**
 * Builder for model V3Device
 *
 * @see V3Device
 */
class V3DeviceBuilder
{
    /**
     * @var V3Device
     */
    private $instance;

    private function __construct(V3Device $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new v3 device Builder object.
     */
    public static function init(string $deviceId): self
    {
        return new self(new V3Device($deviceId));
    }

    /**
     * Sets request status field.
     */
    public function requestStatus(?string $value): self
    {
        $this->instance->setRequestStatus($value);
        return $this;
    }

    /**
     * Sets result reason field.
     */
    public function resultReason(?string $value): self
    {
        $this->instance->setResultReason($value);
        return $this;
    }

    /**
     * Sets mdn field.
     */
    public function mdn(?string $value): self
    {
        $this->instance->setMdn($value);
        return $this;
    }

    /**
     * Sets model field.
     */
    public function model(?string $value): self
    {
        $this->instance->setModel($value);
        return $this;
    }

    /**
     * Sets make field.
     */
    public function make(?string $value): self
    {
        $this->instance->setMake($value);
        return $this;
    }

    /**
     * Sets firmware field.
     */
    public function firmware(?string $value): self
    {
        $this->instance->setFirmware($value);
        return $this;
    }

    /**
     * Sets fota eligible field.
     */
    public function fotaEligible(?bool $value): self
    {
        $this->instance->setFotaEligible($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets license assigned field.
     */
    public function licenseAssigned(?bool $value): self
    {
        $this->instance->setLicenseAssigned($value);
        return $this;
    }

    /**
     * Sets protocol field.
     */
    public function protocol(?string $value): self
    {
        $this->instance->setProtocol($value);
        return $this;
    }

    /**
     * Sets software list field.
     */
    public function softwareList(?array $value): self
    {
        $this->instance->setSoftwareList($value);
        return $this;
    }

    /**
     * Sets file list field.
     */
    public function fileList(?array $value): self
    {
        $this->instance->setFileList($value);
        return $this;
    }

    /**
     * Sets create time field.
     */
    public function createTime(?string $value): self
    {
        $this->instance->setCreateTime($value);
        return $this;
    }

    /**
     * Sets status time field.
     */
    public function statusTime(?string $value): self
    {
        $this->instance->setStatusTime($value);
        return $this;
    }

    /**
     * Sets update time field.
     */
    public function updateTime(?string $value): self
    {
        $this->instance->setUpdateTime($value);
        return $this;
    }

    /**
     * Sets refresh time field.
     */
    public function refreshTime(?string $value): self
    {
        $this->instance->setRefreshTime($value);
        return $this;
    }

    /**
     * Sets last connection time field.
     */
    public function lastConnectionTime(?\DateTime $value): self
    {
        $this->instance->setLastConnectionTime($value);
        return $this;
    }

    /**
     * Initializes a new v3 device object.
     */
    public function build(): V3Device
    {
        return CoreHelper::clone($this->instance);
    }
}
