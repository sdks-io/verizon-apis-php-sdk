<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\ManagedAccountsProvisionResponse;

/**
 * Builder for model ManagedAccountsProvisionResponse
 *
 * @see ManagedAccountsProvisionResponse
 */
class ManagedAccountsProvisionResponseBuilder
{
    /**
     * @var ManagedAccountsProvisionResponse
     */
    private $instance;

    private function __construct(ManagedAccountsProvisionResponse $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new managed accounts provision response Builder object.
     */
    public static function init(): self
    {
        return new self(new ManagedAccountsProvisionResponse());
    }

    /**
     * Sets txid field.
     */
    public function txid(?string $value): self
    {
        $this->instance->setTxid($value);
        return $this;
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets paccount name field.
     */
    public function paccountName(?string $value): self
    {
        $this->instance->setPaccountName($value);
        return $this;
    }

    /**
     * Sets service name field.
     */
    public function serviceName(?string $value): self
    {
        $this->instance->setServiceName($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets reason field.
     */
    public function reason(?string $value): self
    {
        $this->instance->setReason($value);
        return $this;
    }

    /**
     * Initializes a new managed accounts provision response object.
     */
    public function build(): ManagedAccountsProvisionResponse
    {
        return CoreHelper::clone($this->instance);
    }
}
