<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\NodeStatus;
use VerizonLib\Models\NodeStatusAllocatable;
use VerizonLib\Models\NodeStatusAllocated;
use VerizonLib\Models\NodeStatusCapacity;
use VerizonLib\Models\NodeStatusInfo;

/**
 * Builder for model NodeStatus
 *
 * @see NodeStatus
 */
class NodeStatusBuilder
{
    /**
     * @var NodeStatus
     */
    private $instance;

    private function __construct(NodeStatus $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new node status Builder object.
     */
    public static function init(): self
    {
        return new self(new NodeStatus());
    }

    /**
     * Sets state field.
     */
    public function state(?string $value): self
    {
        $this->instance->setState($value);
        return $this;
    }

    /**
     * Sets conditions field.
     */
    public function conditions(?array $value): self
    {
        $this->instance->setConditions($value);
        return $this;
    }

    /**
     * Sets node info field.
     */
    public function nodeInfo(?NodeStatusInfo $value): self
    {
        $this->instance->setNodeInfo($value);
        return $this;
    }

    /**
     * Sets capacity field.
     */
    public function capacity(?NodeStatusCapacity $value): self
    {
        $this->instance->setCapacity($value);
        return $this;
    }

    /**
     * Sets allocatable field.
     */
    public function allocatable(?NodeStatusAllocatable $value): self
    {
        $this->instance->setAllocatable($value);
        return $this;
    }

    /**
     * Sets allocated field.
     */
    public function allocated(?NodeStatusAllocated $value): self
    {
        $this->instance->setAllocated($value);
        return $this;
    }

    /**
     * Sets ips field.
     */
    public function ips(?array $value): self
    {
        $this->instance->setIps($value);
        return $this;
    }

    /**
     * Initializes a new node status object.
     */
    public function build(): NodeStatus
    {
        return CoreHelper::clone($this->instance);
    }
}
