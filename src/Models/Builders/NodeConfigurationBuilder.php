<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\NodeConfiguration;
use VerizonLib\Models\NodeConfigurationLabel;
use VerizonLib\Models\NodeConfigurationTag;

/**
 * Builder for model NodeConfiguration
 *
 * @see NodeConfiguration
 */
class NodeConfigurationBuilder
{
    /**
     * @var NodeConfiguration
     */
    private $instance;

    private function __construct(NodeConfiguration $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new node configuration Builder object.
     */
    public static function init(): self
    {
        return new self(new NodeConfiguration());
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets is wavelength zone field.
     */
    public function isWavelengthZone(?bool $value): self
    {
        $this->instance->setIsWavelengthZone($value);
        return $this;
    }

    /**
     * Sets is managed node group field.
     */
    public function isManagedNodeGroup(?bool $value): self
    {
        $this->instance->setIsManagedNodeGroup($value);
        return $this;
    }

    /**
     * Sets is spot instance needed field.
     */
    public function isSpotInstanceNeeded(?bool $value): self
    {
        $this->instance->setIsSpotInstanceNeeded($value);
        return $this;
    }

    /**
     * Sets end point access type field.
     */
    public function endPointAccessType(?string $value): self
    {
        $this->instance->setEndPointAccessType($value);
        return $this;
    }

    /**
     * Sets instance type field.
     */
    public function instanceType(?string $value): self
    {
        $this->instance->setInstanceType($value);
        return $this;
    }

    /**
     * Sets nodes field.
     */
    public function nodes(?int $value): self
    {
        $this->instance->setNodes($value);
        return $this;
    }

    /**
     * Sets nodes min field.
     */
    public function nodesMin(?int $value): self
    {
        $this->instance->setNodesMin($value);
        return $this;
    }

    /**
     * Sets nodes max field.
     */
    public function nodesMax(?int $value): self
    {
        $this->instance->setNodesMax($value);
        return $this;
    }

    /**
     * Sets node volume type field.
     */
    public function nodeVolumeType(?string $value): self
    {
        $this->instance->setNodeVolumeType($value);
        return $this;
    }

    /**
     * Sets subnet cidr block field.
     */
    public function subnetCidrBlock(?string $value): self
    {
        $this->instance->setSubnetCidrBlock($value);
        return $this;
    }

    /**
     * Sets node ami family field.
     */
    public function nodeAmiFamily(?string $value): self
    {
        $this->instance->setNodeAmiFamily($value);
        return $this;
    }

    /**
     * Sets node volume size field.
     */
    public function nodeVolumeSize(?int $value): self
    {
        $this->instance->setNodeVolumeSize($value);
        return $this;
    }

    /**
     * Sets key name field.
     */
    public function keyName(?string $value): self
    {
        $this->instance->setKeyName($value);
        return $this;
    }

    /**
     * Sets max pod per node field.
     */
    public function maxPodPerNode(?int $value): self
    {
        $this->instance->setMaxPodPerNode($value);
        return $this;
    }

    /**
     * Sets use volume encryption field.
     */
    public function useVolumeEncryption(?bool $value): self
    {
        $this->instance->setUseVolumeEncryption($value);
        return $this;
    }

    /**
     * Sets node private networking field.
     */
    public function nodePrivateNetworking(?bool $value): self
    {
        $this->instance->setNodePrivateNetworking($value);
        return $this;
    }

    /**
     * Sets instance profile arn field.
     */
    public function instanceProfileArn(?string $value): self
    {
        $this->instance->setInstanceProfileArn($value);
        return $this;
    }

    /**
     * Sets instance role arn field.
     */
    public function instanceRoleArn(?string $value): self
    {
        $this->instance->setInstanceRoleArn($value);
        return $this;
    }

    /**
     * Sets instance role permission boundary field.
     */
    public function instanceRolePermissionBoundary(?string $value): self
    {
        $this->instance->setInstanceRolePermissionBoundary($value);
        return $this;
    }

    /**
     * Sets security group ids field.
     */
    public function securityGroupIds(?array $value): self
    {
        $this->instance->setSecurityGroupIds($value);
        return $this;
    }

    /**
     * Sets availability zone ids field.
     */
    public function availabilityZoneIds(?array $value): self
    {
        $this->instance->setAvailabilityZoneIds($value);
        return $this;
    }

    /**
     * Sets labels field.
     */
    public function labels(?NodeConfigurationLabel $value): self
    {
        $this->instance->setLabels($value);
        return $this;
    }

    /**
     * Sets tags field.
     */
    public function tags(?NodeConfigurationTag $value): self
    {
        $this->instance->setTags($value);
        return $this;
    }

    /**
     * Sets auto create service roles field.
     */
    public function autoCreateServiceRoles(?bool $value): self
    {
        $this->instance->setAutoCreateServiceRoles($value);
        return $this;
    }

    /**
     * Sets enable full access to ecr field.
     */
    public function enableFullAccessToEcr(?bool $value): self
    {
        $this->instance->setEnableFullAccessToEcr($value);
        return $this;
    }

    /**
     * Sets enable asg access field.
     */
    public function enableAsgAccess(?bool $value): self
    {
        $this->instance->setEnableAsgAccess($value);
        return $this;
    }

    /**
     * Sets enable dns access field.
     */
    public function enableDnsAccess(?bool $value): self
    {
        $this->instance->setEnableDnsAccess($value);
        return $this;
    }

    /**
     * Sets enable app mesh access field.
     */
    public function enableAppMeshAccess(?bool $value): self
    {
        $this->instance->setEnableAppMeshAccess($value);
        return $this;
    }

    /**
     * Sets enable alb access field.
     */
    public function enableAlbAccess(?bool $value): self
    {
        $this->instance->setEnableAlbAccess($value);
        return $this;
    }

    /**
     * Sets enable efs access field.
     */
    public function enableEfsAccess(?bool $value): self
    {
        $this->instance->setEnableEfsAccess($value);
        return $this;
    }

    /**
     * Initializes a new node configuration object.
     */
    public function build(): NodeConfiguration
    {
        return CoreHelper::clone($this->instance);
    }
}
