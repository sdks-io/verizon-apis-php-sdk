<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\NodeGroupItem;
use VerizonLib\Models\NodeGroupItemTag;
use VerizonLib\Models\NodeLabel;
use VerizonLib\Models\Provision;
use VerizonLib\Models\UpgradeInfo;
use VerizonLib\Models\VersionInfo;

/**
 * Builder for model NodeGroupItem
 *
 * @see NodeGroupItem
 */
class NodeGroupItemBuilder
{
    /**
     * @var NodeGroupItem
     */
    private $instance;

    private function __construct(NodeGroupItem $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new node group item Builder object.
     */
    public static function init(): self
    {
        return new self(new NodeGroupItem());
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?string $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Sets modified at field.
     */
    public function modifiedAt(?string $value): self
    {
        $this->instance->setModifiedAt($value);
        return $this;
    }

    /**
     * Sets organization id field.
     */
    public function organizationId(?string $value): self
    {
        $this->instance->setOrganizationId($value);
        return $this;
    }

    /**
     * Sets partner id field.
     */
    public function partnerId(?string $value): self
    {
        $this->instance->setPartnerId($value);
        return $this;
    }

    /**
     * Sets instance type field.
     */
    public function instanceType(?string $value): self
    {
        $this->instance->setInstanceType($value);
        return $this;
    }

    /**
     * Sets edge id field.
     */
    public function edgeId(?string $value): self
    {
        $this->instance->setEdgeId($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets provision id field.
     */
    public function provisionId(?string $value): self
    {
        $this->instance->setProvisionId($value);
        return $this;
    }

    /**
     * Sets node type field.
     */
    public function nodeType(?string $value): self
    {
        $this->instance->setNodeType($value);
        return $this;
    }

    /**
     * Sets nodes field.
     */
    public function nodes(?int $value): self
    {
        $this->instance->setNodes($value);
        return $this;
    }

    /**
     * Sets nodes min field.
     */
    public function nodesMin(?int $value): self
    {
        $this->instance->setNodesMin($value);
        return $this;
    }

    /**
     * Sets nodes max field.
     */
    public function nodesMax(?int $value): self
    {
        $this->instance->setNodesMax($value);
        return $this;
    }

    /**
     * Sets node volume size field.
     */
    public function nodeVolumeSize(?int $value): self
    {
        $this->instance->setNodeVolumeSize($value);
        return $this;
    }

    /**
     * Sets node volume type field.
     */
    public function nodeVolumeType(?string $value): self
    {
        $this->instance->setNodeVolumeType($value);
        return $this;
    }

    /**
     * Sets node private networking field.
     */
    public function nodePrivateNetworking(?bool $value): self
    {
        $this->instance->setNodePrivateNetworking($value);
        return $this;
    }

    /**
     * Sets node zones field.
     */
    public function nodeZones(?array $value): self
    {
        $this->instance->setNodeZones($value);
        return $this;
    }

    /**
     * Sets node ami family field.
     */
    public function nodeAmiFamily(?string $value): self
    {
        $this->instance->setNodeAmiFamily($value);
        return $this;
    }

    /**
     * Sets node labels field.
     */
    public function nodeLabels(?NodeLabel $value): self
    {
        $this->instance->setNodeLabels($value);
        return $this;
    }

    /**
     * Sets nodegroup type field.
     */
    public function nodegroupType(?int $value): self
    {
        $this->instance->setNodegroupType($value);
        return $this;
    }

    /**
     * Sets enable asg access field.
     */
    public function enableAsgAccess(?bool $value): self
    {
        $this->instance->setEnableAsgAccess($value);
        return $this;
    }

    /**
     * Sets enable full access to ecr field.
     */
    public function enableFullAccessToEcr(?bool $value): self
    {
        $this->instance->setEnableFullAccessToEcr($value);
        return $this;
    }

    /**
     * Sets version info id field.
     */
    public function versionInfoId(?string $value): self
    {
        $this->instance->setVersionInfoId($value);
        return $this;
    }

    /**
     * Sets upgrade info id field.
     */
    public function upgradeInfoId(?string $value): self
    {
        $this->instance->setUpgradeInfoId($value);
        return $this;
    }

    /**
     * Sets tags field.
     */
    public function tags(?NodeGroupItemTag $value): self
    {
        $this->instance->setTags($value);
        return $this;
    }

    /**
     * Sets config file content field.
     */
    public function configFileContent(?string $value): self
    {
        $this->instance->setConfigFileContent($value);
        return $this;
    }

    /**
     * Sets provision field.
     */
    public function provision(?Provision $value): self
    {
        $this->instance->setProvision($value);
        return $this;
    }

    /**
     * Sets version info field.
     */
    public function versionInfo(?VersionInfo $value): self
    {
        $this->instance->setVersionInfo($value);
        return $this;
    }

    /**
     * Sets upgrade info field.
     */
    public function upgradeInfo(?UpgradeInfo $value): self
    {
        $this->instance->setUpgradeInfo($value);
        return $this;
    }

    /**
     * Initializes a new node group item object.
     */
    public function build(): NodeGroupItem
    {
        return CoreHelper::clone($this->instance);
    }
}
