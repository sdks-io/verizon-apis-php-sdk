<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\CreateTriggerV2Request;
use VerizonLib\Models\Notification;
use VerizonLib\Models\PricePlanTrigger;

/**
 * Builder for model CreateTriggerV2Request
 *
 * @see CreateTriggerV2Request
 */
class CreateTriggerV2RequestBuilder
{
    /**
     * @var CreateTriggerV2Request
     */
    private $instance;

    private function __construct(CreateTriggerV2Request $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new create trigger v2 request Builder object.
     */
    public static function init(): self
    {
        return new self(new CreateTriggerV2Request());
    }

    /**
     * Sets trigger name field.
     */
    public function triggerName(?string $value): self
    {
        $this->instance->setTriggerName($value);
        return $this;
    }

    /**
     * Sets ecpd id field.
     */
    public function ecpdId(?string $value): self
    {
        $this->instance->setEcpdId($value);
        return $this;
    }

    /**
     * Sets device group name field.
     */
    public function deviceGroupName(?string $value): self
    {
        $this->instance->setDeviceGroupName($value);
        return $this;
    }

    /**
     * Sets trigger category field.
     */
    public function triggerCategory(?string $value): self
    {
        $this->instance->setTriggerCategory($value);
        return $this;
    }

    /**
     * Sets price plan trigger field.
     */
    public function pricePlanTrigger(?PricePlanTrigger $value): self
    {
        $this->instance->setPricePlanTrigger($value);
        return $this;
    }

    /**
     * Sets notification field.
     */
    public function notification(?Notification $value): self
    {
        $this->instance->setNotification($value);
        return $this;
    }

    /**
     * Sets active field.
     */
    public function active(?bool $value): self
    {
        $this->instance->setActive($value);
        return $this;
    }

    /**
     * Initializes a new create trigger v2 request object.
     */
    public function build(): CreateTriggerV2Request
    {
        return CoreHelper::clone($this->instance);
    }
}
