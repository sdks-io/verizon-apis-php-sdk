<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\Repository;
use VerizonLib\Models\RepositoryCredential;

/**
 * Builder for model Repository
 *
 * @see Repository
 */
class RepositoryBuilder
{
    /**
     * @var Repository
     */
    private $instance;

    private function __construct(Repository $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new repository Builder object.
     */
    public static function init(string $name): self
    {
        return new self(new Repository($name));
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Sets type field.
     */
    public function type(?string $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Sets tag field.
     */
    public function tag(?string $value): self
    {
        $this->instance->setTag($value);
        return $this;
    }

    /**
     * Sets endpoint field.
     */
    public function endpoint(?string $value): self
    {
        $this->instance->setEndpoint($value);
        return $this;
    }

    /**
     * Sets reacheability field.
     */
    public function reacheability(?string $value): self
    {
        $this->instance->setReacheability($value);
        return $this;
    }

    /**
     * Sets cacertificate field.
     */
    public function cACertificate(?string $value): self
    {
        $this->instance->setCACertificate($value);
        return $this;
    }

    /**
     * Sets agents field.
     */
    public function agents(?array $value): self
    {
        $this->instance->setAgents($value);
        return $this;
    }

    /**
     * Unsets agents field.
     */
    public function unsetAgents(): self
    {
        $this->instance->unsetAgents();
        return $this;
    }

    /**
     * Sets ssl disabled field.
     */
    public function sslDisabled(?bool $value): self
    {
        $this->instance->setSslDisabled($value);
        return $this;
    }

    /**
     * Sets is validated field.
     */
    public function isValidated(?bool $value): self
    {
        $this->instance->setIsValidated($value);
        return $this;
    }

    /**
     * Sets validation status field.
     */
    public function validationStatus(?string $value): self
    {
        $this->instance->setValidationStatus($value);
        return $this;
    }

    /**
     * Sets credentials type field.
     */
    public function credentialsType(?string $value): self
    {
        $this->instance->setCredentialsType($value);
        return $this;
    }

    /**
     * Sets credentials field.
     */
    public function credentials(?RepositoryCredential $value): self
    {
        $this->instance->setCredentials($value);
        return $this;
    }

    /**
     * Sets ssh key field.
     */
    public function sshKey(?string $value): self
    {
        $this->instance->setSshKey($value);
        return $this;
    }

    /**
     * Sets last validated date field.
     */
    public function lastValidatedDate(?\DateTime $value): self
    {
        $this->instance->setLastValidatedDate($value);
        return $this;
    }

    /**
     * Sets created date field.
     */
    public function createdDate(?\DateTime $value): self
    {
        $this->instance->setCreatedDate($value);
        return $this;
    }

    /**
     * Sets last modified date field.
     */
    public function lastModifiedDate(?\DateTime $value): self
    {
        $this->instance->setLastModifiedDate($value);
        return $this;
    }

    /**
     * Sets created by field.
     */
    public function createdBy(?string $value): self
    {
        $this->instance->setCreatedBy($value);
        return $this;
    }

    /**
     * Sets updated by field.
     */
    public function updatedBy(?string $value): self
    {
        $this->instance->setUpdatedBy($value);
        return $this;
    }

    /**
     * Sets is deleted field.
     */
    public function isDeleted(?bool $value): self
    {
        $this->instance->setIsDeleted($value);
        return $this;
    }

    /**
     * Initializes a new repository object.
     */
    public function build(): Repository
    {
        return CoreHelper::clone($this->instance);
    }
}
