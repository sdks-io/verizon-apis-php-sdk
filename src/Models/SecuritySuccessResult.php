<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * Success response.
 */
class SecuritySuccessResult implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $requestId;

    /**
     * Returns Request Id.
     * A unique string that associates the request with the results that are sent via a callback message.
     * The ThingSpace Platform sends a separate callback message for each device that matches the request
     * criteria, indicating whether the operation succeeded for that device and containing any requested
     * information. All callback messages will have the same requestId.
     */
    public function getRequestId(): ?string
    {
        return $this->requestId;
    }

    /**
     * Sets Request Id.
     * A unique string that associates the request with the results that are sent via a callback message.
     * The ThingSpace Platform sends a separate callback message for each device that matches the request
     * criteria, indicating whether the operation succeeded for that device and containing any requested
     * information. All callback messages will have the same requestId.
     *
     * @maps requestId
     */
    public function setRequestId(?string $requestId): void
    {
        $this->requestId = $requestId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->requestId)) {
            $json['requestId'] = $this->requestId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
