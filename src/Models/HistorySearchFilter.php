<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;

/**
 * The selected device and attributes for which a request should retrieve data.
 */
class HistorySearchFilter implements \JsonSerializable
{
    /**
     * @var string
     */
    private $accountName;

    /**
     * @var Device
     */
    private $device;

    /**
     * @var HistorySearchFilterAttributes|null
     */
    private $attributes;

    /**
     * @param string $accountName
     * @param Device $device
     */
    public function __construct(string $accountName, Device $device)
    {
        $this->accountName = $accountName;
        $this->device = $device;
    }

    /**
     * Returns Account Name.
     * Account name identifier.
     */
    public function getAccountName(): string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     * Account name identifier.
     *
     * @required
     * @maps accountName
     */
    public function setAccountName(string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Device.
     * Identifies a particular IoT device.
     */
    public function getDevice(): Device
    {
        return $this->device;
    }

    /**
     * Sets Device.
     * Identifies a particular IoT device.
     *
     * @required
     * @maps device
     */
    public function setDevice(Device $device): void
    {
        $this->device = $device;
    }

    /**
     * Returns Attributes.
     * Streaming RF parameters for which you want to retrieve history data.
     */
    public function getAttributes(): ?HistorySearchFilterAttributes
    {
        return $this->attributes;
    }

    /**
     * Sets Attributes.
     * Streaming RF parameters for which you want to retrieve history data.
     *
     * @maps attributes
     */
    public function setAttributes(?HistorySearchFilterAttributes $attributes): void
    {
        $this->attributes = $attributes;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['accountName']    = $this->accountName;
        $json['device']         = $this->device;
        if (isset($this->attributes)) {
            $json['attributes'] = $this->attributes;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
